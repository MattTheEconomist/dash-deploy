{"version":3,"sources":["Design/MyTheme.js","DashComponents/PieGraphKey.jsx","DashComponents/PieGraph.jsx","Design/graphDimensionsSide.js","DashComponents/BarGraphSide.jsx","DashComponents/GraphKey.jsx","DashComponents/AxisBottom.jsx","mailClassComponents/allMarketDominantComponents/MDCompositeContainer.jsx","DashComponents/VolumeChange.jsx","DashComponents/ProductCountTableMD.jsx","DashComponents/DownloadButton.jsx","mailClassComponents/AllMarketDominant.jsx","Design/graphDimensions.js","DashComponents/TooltipTarget.jsx","DashComponents/TooltipService_ClassLevel.jsx","DashComponents/ClassLevelGraph.jsx","DashComponents/ProductCountTable.jsx","DashComponents/ProductDropdown.jsx","DashComponents/TooltipService_ProductLevel.jsx","DashComponents/ProductGraph.jsx","Design/graphDimensionsLine.js","DashComponents/TooltipVolume.jsx","DashComponents/QuarterlyVolume.jsx","mailClassComponents/ProductPage.jsx","mailClassComponents/FirstClass.jsx","mailClassComponents/MarketingMailClass.jsx","mailClassComponents/SpecialServices.jsx","mailClassComponents/PackageServices.jsx","mailClassComponents/Periodicals.jsx","Drawer.jsx","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","secondaryColor","liteBlue","lightGrey","darkGrey","pinkHighlight","greenGrey","lineGraphTitleBlock","textNodeFont","myTheme","createTheme","palette","primary","main","breakpoints","values","xs","sm","md","lg","tooltipStyles","position","textAlign","font","background","useStyles_ClassPage","makeStyles","theme","root","flexGrow","paperDropdown","minWidth","padding","spacing","marginTop","paper","color","text","secondary","paperCountTable","graphDiv","width","classGraphContainer","maxWidth","PieGraphKey","props","colorObj","cellLocation","cell","style","paddingLeft","marginBottom","height","fill","x","y","id","gridStart","fontFamily","PieGraph","propData","useEffect","svg","d3","svgId","dataset","map","row","value","outerRadius","svgWidth","innerRadius","arc","pie","colorList","arcs","selectAll","data","enter","append","attr","d","i","centroid","drawPie","dataSet","paddingRight","svgHeight","marginLeft","marginRight","innerArea","BarGraphSide","barData","year","rawData","Result2019","Result2020","mailClass","barHeight","xScale","colorSeq","lineData","Target","barMarginTop","drawBars","raise","ProductNameAbbrev","split","domain","range","GraphKey","bar2019","bar2020","level","id2019","id2020","on","transition","duration","console","log","x1","y1","x2","y2","strokeWidth","stroke","className","AxisBottom","call","ticks","drawAxis","fontSize","MDCompositeContainer","fcData","compositeData","filter","mmData","useStyles","outterContainer","backgroundColor","titleText","fontWeight","volText","volNumber","changeIcon","VolumeChange","volumeData","classes","FY2020","FY2019","volumeTextNumber","rawNumber","trailingLetter","divisor","stringNum","outputNumber","toFixed","formatVolumeNumber","volumeChangeText","rawChange","toString","formatVolumeChangeNumber","Typography","variant","gutterBottom","table","maxHeight","borderTop","boxShadow","ProductCountTableMD","countData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","ind","scope","totalProducts","negativeChange","positiveChange","missing","button","icon","transform","dataName","DownloadButton","Button","Grid","container","direction","item","paperTopRow","paddingBottom","paddingTop","mdGraphContainer","titleBox","AllMarketDominant","missesData","topLevelPieData","totalMDVol","alignItems","justifyContent","annualDataFull","graphHeight","graphWidth","barWidth","barMarginLeft","yScale","yScaleRev","TooltipTarget","isHoveringTarget","hoverTargetId","tooltipId","xHoverTarget","useState","tooltipText","setTooltipText","removeOnMouseOut","xHover","outputVal","tooltipDiv","tooltipXPoz","tooltipYPoz","hoveredTargetValue","hoveredProductId","parseInt","hoveredProductTargetRow","productId","fy","target","tooltipTextChange","tooltipStyles_Target","borderLeft","borderRight","class","TooltipService_ClassLevel","hoverId","isHovering","hoverHeight","pointsFromTarget","calcPointsFromTargetAnnual","tooltipColor","assignColor","idList","yearVal","hoveredRow","length","ClassLevelGraph","setData","setXHover","setHoverId","setIsHovering","setHoverHeight","setIsHoveringTarget","setHoverTargetId","setXHoverTarget","barFunctions","topStart","replace","removeBars","dataProducts","productAbbrev","data2020","data2019","interBarMargin","graphData","barCount","getInterBarMargin","rotationDeg","tickSize","remove","pctOnTime","mouseOverTriggers","this","mouseOutTriggers","currentTargetSelection","currentTargetId","_groups","currentTargetX","baseVal","mouseOverTriggersTarget","currentBarSelection","currentBarId","currentBarX","currentBarHeight","shapeRendering","totalCountCountainer","borderRadius","missedCountCountainer","decCountContainer","tableText","tableTextNumber","ProductCountBar","totalProductCount","thisCount","dataType","setBarData","drawBar","barId","otherBarId","svgSelection","countPercentage","countPercentageDiff","fakeData","ProductCountTable","decreasedThisYear","thisProduct","cellData","singleYear","productCount","decreasedCount","missedTarget","currentRow","createCellData","Container","disableGutters","selectDropdown","formControl","margin","selectEmpty","dropdownLabel","ProductDropdown","selectedProductId","changeProductSelected","inputRef","useRef","productList","product","includes","returnFullProductName","element","productName","deliverySpeed","subProductName","push","menuItems","el","MenuItem","onClick","ref","FormControl","Select","getNameFromId","TooltipService_ProductLevel","calcPointsFromTargetQuarterly","quarterVal","quarter","ProductGraph","raiseBars","raiseTargets","quarters","drawNonBarItems","transitionBars","theseBars","firstRow","outsideObjMargin","top","right","bottom","left","lineDims","svgHeightFull","interDotX","TooltipVolume","yHover","currentDotQuarter","match","tooltipWidth","tooltipHeight","textMarginTop","currentDotId","dataIn","sort","a","b","volume","headerText","QuarterlyVolume","isFirstClass","setYHover","line","createLine","datum","drawLine","drawDots","newLine","transitionLine","currentDotX","cx","currentDotY","cy","currentProductName","volumes2020","curve","ProductPage","renderedSection","productData","fullProductContainer","quarterlyContainer","productGraphContainer","minwidth","ProductPageFull","Divider","EmptyProductPage","FirstClass","setSelectedProductId","fcAnnualData","annualData","volDataFC","volData","elevation","float","e","MarketingMail","mmAnnualData","volDataMM","justify","SpecialServices","PackageServices","Periodicals","withRouter","history","mailClassNames","homeName","List","index","ListItem","ListItemText","App","ThemeProvider","exact","from","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.488ba8fe.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const colorPalleteMatt = {\r\n  // primaryColor: \"#225CF6\",\r\n  // secondaryColor: \"#2CC6EB\",\r\n  primaryColor: \"#225CF6\",\r\n  // secondaryColor: \"#7bb9e5\", //best\r\n  secondaryColor: \"#88b7d7\", //new\r\n\r\n  // liteBlue: \"#2CC6EB\",\r\n  liteBlue: \"#108FE0\",\r\n\r\n  // highlightColor: \"#E0DE04\",\r\n  highlightColor: \"#E08D20\",\r\n  lightGrey: \"#e6e8e6\",\r\n  darkGrey: \"#778380\",\r\n  greenGrey: \"#53aca0\",\r\n  pinkHighlight: \"#f45273\",\r\n  alternateHighlight: \"#1ED4C7\",\r\n  alternateSecondary: \"#1E7FD4\",\r\n  lineGraphTitleBlock: \"#caf3fa\",\r\n};\r\n\r\nexport const {\r\n  primaryColor,\r\n  secondaryColor,\r\n  liteBlue,\r\n  highlightColor,\r\n  lightGrey,\r\n  darkGrey,\r\n  pinkHighlight,\r\n  greenGrey,\r\n  alternateHighlight,\r\n  alternateSecondary,\r\n  lineGraphTitleBlock,\r\n} = colorPalleteMatt;\r\n\r\nexport const lightGreyAgain = \"#e6e8e6\";\r\n\r\nexport const textNodeFont = \"'Roboto', sans-serif\";\r\n\r\nconst myTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 450,\r\n      md: 1223,\r\n      lg: 1550,\r\n    },\r\n  },\r\n});\r\n\r\nexport const tooltipStyles = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  background: \"lightsteelblue\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n};\r\n\r\nexport const useStyles_ClassPage = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paperDropdown: {\r\n    minWidth: 850,\r\n    padding: theme.spacing(1),\r\n    marginTop: \"5%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n  },\r\n  paperCountTable: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n  },\r\n  graphDiv: {\r\n    width: 850,\r\n    padding: \"1%\",\r\n  },\r\n  classGraphContainer: {\r\n    maxWidth: 950,\r\n  },\r\n}));\r\n\r\nexport default myTheme;\r\n","import { textNodeFont } from \"../Design/MyTheme\";\r\n\r\nconst PieGraphKey = (props) => {\r\n  const { colorObj } = props;\r\n\r\n  // const { primaryColor, highlightColor, lightGrey } = colorObj;\r\n\r\n  const { pinkHighlight, liteBlue, lightGrey } = colorObj;\r\n\r\n  const gridMargin = 20;\r\n  const gridStart = 20;\r\n\r\n  function cellLocation(cell) {\r\n    return gridMargin * cell;\r\n  }\r\n  const textMargin = 12;\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"25%\", marginBottom: \"10%\" }}>\r\n      <svg height={100}>\r\n        <rect\r\n          fill={pinkHighlight}\r\n          x={gridStart}\r\n          y={gridStart}\r\n          width={15}\r\n          height={15}\r\n          id=\"keyMissed\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={gridStart + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Missed Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={liteBlue}\r\n          x={gridStart}\r\n          y={cellLocation(2)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(2) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Exceeded Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={lightGrey}\r\n          x={gridStart}\r\n          y={cellLocation(3)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(3) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products with no Data\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieGraphKey;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport PieGraphKey from \"./PieGraphKey\";\r\n\r\nimport {\r\n  primaryColor,\r\n  highlightColor,\r\n  lightGrey,\r\n  liteBlue,\r\n  pinkHighlight,\r\n  secondaryColor,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const PieGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawPie();\r\n  });\r\n\r\n  const dataSet = propData[0].dataSet;\r\n\r\n  const svgId = `${dataSet}svg`;\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  const svgHeight = 300;\r\n  const svgWidth = 300;\r\n\r\n  function drawPie() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const dataset = propData.map((row) => row.value);\r\n\r\n    const outerRadius = svgWidth / 2;\r\n    const innerRadius = svgWidth / 3;\r\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\r\n\r\n    const pie = d3.pie();\r\n\r\n    const colorList = [pinkHighlight, liteBlue, lightGrey];\r\n\r\n    //Set up groups\r\n    const arcs = svg\r\n      .selectAll(\"g.arc\")\r\n      .data(pie(dataset))\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"arc\")\r\n      .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\r\n\r\n    //Draw arc paths\r\n    arcs\r\n      .append(\"path\")\r\n      .attr(\"fill\", function (d, i) {\r\n        return colorList[i];\r\n      })\r\n      .attr(\"d\", arc);\r\n\r\n    //Labels\r\n    arcs\r\n      .append(\"text\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n      })\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function (d) {\r\n        return d.value;\r\n      });\r\n  }\r\n  const colorObj = {\r\n    pinkHighlight: pinkHighlight,\r\n    liteBlue: liteBlue,\r\n    lightGrey: lightGrey,\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ paddingRight: \"28%\" }}>\r\n        <h4 style={{ marginBottom: \"1rem\", marginTop: \"-1%\" }}>\r\n          FY2020 Mail Product Count\r\n        </h4>\r\n        <svg width={svgWidth} height={svgHeight} id={svgId}></svg>\r\n        <PieGraphKey colorObj={colorObj} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PieGraph;\r\n","const sideGraphDims = {\r\n  svgWidth: 400,\r\n  svgHeight: 50,\r\n  marginLeft: 10,\r\n  marginRight: 10,\r\n  innerArea: 380,\r\n};\r\n\r\nexport const { svgWidth, svgHeight, marginLeft, marginRight, innerArea } =\r\n  sideGraphDims;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  svgWidth,\r\n  svgHeight,\r\n  marginLeft,\r\n  marginRight,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const BarGraphSide = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  let rawData = propData[0];\r\n\r\n  let mailClass = rawData.ProductNameAbbrev.split(\" \")[0];\r\n\r\n  if (mailClass === \"First\") {\r\n    mailClass = \"FC\";\r\n  }\r\n\r\n  const svgId = `barSide${mailClass}svg`;\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(`.${mailClass}target`).raise();\r\n  }\r\n\r\n  const barMarginTop = 10;\r\n  const interBarMargin = 15;\r\n  const barHeight = 25;\r\n\r\n  const colorSeq = [secondaryColor, primaryColor];\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 100])\r\n    .range([marginLeft, svgWidth - marginRight]);\r\n\r\n  function drawBars() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const barData = [\r\n      { year: 2019, value: rawData.Result2019 },\r\n\r\n      { year: 2020, value: rawData.Result2020 },\r\n    ];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}bars`)\r\n      .data(barData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", marginLeft)\r\n      .attr(\"y\", (d, i) => i * interBarMargin)\r\n      .attr(\"height\", barHeight)\r\n      .attr(\"width\", (d) => xScale(d.value))\r\n      .attr(\"class\", `${mailClass}bars`)\r\n      .attr(\"fill\", (d, i) => colorSeq[i])\r\n      .attr(\"id\", (d) => `${mailClass}${d.year}`);\r\n\r\n    // const lineData = [{ value: rawData.Target }];\r\n    const lineData = [rawData.Target];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}target`)\r\n      // .data(barData)\r\n      .data(lineData)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) => xScale(d))\r\n      .attr(\"y1\", barMarginTop - barHeight)\r\n      .attr(\"x2\", (d) => xScale(d))\r\n      .attr(\"y2\", barMarginTop + barHeight + 10)\r\n      // .style(\"stroke\", highlightColor)\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", `${mailClass}target`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <svg id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraphSide;\r\n","import * as d3 from \"d3\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const GraphKey = (props) => {\r\n  const { bar2019, bar2020, level } = props;\r\n\r\n  const id2019 = `key2019${level}`;\r\n  const id2020 = `key2020${level}`;\r\n\r\n  d3.select(`#${id2019}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 1);\r\n    })\r\n    .on(\"click\", () => console.log(\"clicked\"));\r\n\r\n  d3.select(`#${id2020}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 1);\r\n    });\r\n\r\n  return (\r\n    <svg height={35}>\r\n      <rect\r\n        fill={secondaryColor}\r\n        x={20}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2019}\r\n      ></rect>\r\n      <text x={39} y={30} fontFamily={textNodeFont}>\r\n        FY2019\r\n      </text>\r\n\r\n      <rect\r\n        fill={primaryColor}\r\n        x={100}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2020}\r\n      ></rect>\r\n      <text x={120} y={30} fontFamily={textNodeFont}>\r\n        {\" \"}\r\n        FY2020\r\n      </text>\r\n      <line\r\n        x1={190}\r\n        y1={25}\r\n        x2={215}\r\n        y2={25}\r\n        strokeWidth={2}\r\n        // stroke={highlightColor}\r\n        stroke={pinkHighlight}\r\n        className=\"targetLines\"\r\n      />\r\n\r\n      <text x={220} y={30} fontFamily={textNodeFont}>\r\n        Target\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default GraphKey;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  svgWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  innerArea,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const AxisBottom = () => {\r\n  useEffect(() => {\r\n    drawAxis();\r\n  });\r\n\r\n  function drawAxis() {\r\n    const svg = d3.select(\"#barAxisSvg\");\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 100])\r\n      .range([marginLeft, svgWidth - marginRight]);\r\n    //   .range([10, 390]);\r\n\r\n    svg.append(\"g\").call(d3.axisBottom(xScale).ticks(5));\r\n\r\n    // .tickSize(-svgWidth).ticks(5);\r\n  }\r\n\r\n  return (\r\n    <svg id=\"barAxisSvg\" height={75} width={svgWidth}>\r\n      <text x={innerArea / 2} y={35} fontSize={11}>\r\n        On-Time(%)\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AxisBottom;\r\n","import BarGraphSide from \"../../DashComponents/BarGraphSide\";\r\nimport compositeData from \"../../Data/compositeData.json\";\r\nimport GraphKey from \"../../DashComponents/GraphKey\";\r\nimport AxisBottom from \"../../DashComponents/AxisBottom\";\r\n\r\nexport const MDCompositeContainer = () => {\r\n  const fcData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"First Class Composite\"\r\n  );\r\n\r\n  const mmData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"MM and Per Composite\"\r\n  );\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <h3>Composite Scores </h3>\r\n\r\n      <h5>First Class Letters and Flats</h5>\r\n\r\n      <BarGraphSide propData={fcData} />\r\n\r\n      <h5>Marketing Mail and Periodicals</h5>\r\n\r\n      <BarGraphSide propData={mmData} />\r\n\r\n      <AxisBottom />\r\n\r\n      <GraphKey level={\"MDLevel\"} bar2019={\".MM2019\"} bar2020={\".MM2020\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MDCompositeContainer;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  outterContainer: {\r\n    backgroundColor: \"#e6e8e6\",\r\n  },\r\n\r\n  titleText: {\r\n    fontSize: 20,\r\n    marginLeft: \"-75px\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"-0.5rem\",\r\n  },\r\n  volText: {\r\n    fontSize: 17,\r\n    marginBottom: \"2%\",\r\n  },\r\n  volNumber: {\r\n    fontSize: 18,\r\n    marginLeft: \"-75px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  changeIcon: {\r\n    marginTop: \"3%\",\r\n    marginLeft: \"-2px\",\r\n    marginRight: \"1px\",\r\n  },\r\n});\r\n\r\nexport const VolumeChange = (props) => {\r\n  const { propData } = props;\r\n\r\n  const volumeData = propData[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  const { FY2020, FY2019 } = volumeData;\r\n\r\n  const volumeTextNumber = formatVolumeNumber(volumeData.FY2020);\r\n\r\n  let volChangePct = (FY2020 - FY2019) / FY2019;\r\n\r\n  const volumeChangeText = formatVolumeChangeNumber(volChangePct);\r\n\r\n  function formatVolumeNumber(rawNumber) {\r\n    let trailingLetter = \"B\";\r\n    let divisor = 1000000000;\r\n\r\n    if (rawNumber / divisor < 1) {\r\n      trailingLetter = \"M\";\r\n      divisor = divisor / 1000;\r\n    }\r\n\r\n    const outputNumber = rawNumber / divisor;\r\n\r\n    let stringNum;\r\n    if (trailingLetter === \"M\") {\r\n      stringNum = outputNumber.toFixed(0);\r\n    }\r\n\r\n    if (trailingLetter === \"B\") {\r\n      stringNum = outputNumber.toFixed(1);\r\n    }\r\n\r\n    return `${stringNum}${trailingLetter}`;\r\n  }\r\n\r\n  function formatVolumeChangeNumber(rawChange) {\r\n    rawChange = (rawChange * 100).toFixed(1);\r\n    if (rawChange < 0) {\r\n      rawChange *= -1;\r\n    }\r\n    return `${rawChange.toString()}%`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom className={classes.titleText}>\r\n        Total Volume: {`${volumeTextNumber}`}\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" gutterBottom className={classes.volText}>\r\n        Annual change\r\n        <KeyboardArrowDownIcon\r\n          className={classes.changeIcon}\r\n          fontSize=\"small\"\r\n        />\r\n        {volumeChangeText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeChange;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport countData from \"../Data/toLevelProductCounts.json\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n    maxHeight: 400,\r\n    padding: \"4px 8px\",\r\n    borderTop: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n    boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.2)\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTableMD = () => {\r\n  const classes = useStyles();\r\n\r\n  console.log(countData);\r\n\r\n  return (\r\n    <>\r\n      <h3>Product Count by Class</h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Mail Class</TableCell>\r\n              <TableCell align=\"right\">Total Products</TableCell>\r\n              <TableCell align=\"right\">Negative Change</TableCell>\r\n              <TableCell align=\"right\">Positive Change</TableCell>\r\n              <TableCell align=\"right\">Missing Data</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countData.map((row, ind) => (\r\n              <TableRow key={`row${ind}`}>\r\n                <TableCell component=\"th\" scope=\"row\" key={`row${ind}1`}>\r\n                  {row.mailClass}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}2`}>\r\n                  {row.totalProducts}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}3`}>\r\n                  {row.negativeChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}4`}>\r\n                  {row.positiveChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}5`}>\r\n                  {row.missing}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTableMD;\r\n","import { CSVLink } from \"react-csv\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    padding: \"-2rem\",\r\n    // width: \"350%\",\r\n    width: \"15rem\",\r\n    color: \"black\",\r\n    font: \"roboto\",\r\n  },\r\n  icon: {\r\n    transform: \"scale(1.5)\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  dataName: {\r\n    fontSize: \"11px\",\r\n    marginTop: \"-.8rem\",\r\n  },\r\n}));\r\n\r\nexport const DownloadButton = (props) => {\r\n  const { propData, dataName } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSVLink data={propData}>\r\n      <Button className={classes.button} variant=\"contained\">\r\n        <div>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={2}>\r\n              <TocIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <p> Download CSV</p>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <p className={classes.dataName}>{dataName}</p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Button>\r\n    </CSVLink>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PieGraph from \"../DashComponents/PieGraph\";\r\nimport topLevelPieData from \"../Data/topLevelPieData.json\";\r\nimport MDCompositeContainer from \"./allMarketDominantComponents/MDCompositeContainer\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport volumeData from \"../Data/volume.json\";\r\nimport ProductCountTableMD from \"../DashComponents/ProductCountTableMD\";\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\nimport annualDataFull from \"../Data/annualData.json\";\r\n\r\nimport { lightGrey } from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTopRow: {\r\n    paddingBottom: \"10%\",\r\n    height: 400,\r\n    paddingTop: \"2%\",\r\n  },\r\n  mdGraphContainer: {\r\n    maxWidth: 600,\r\n    height: 500,\r\n    marginTop: \"2%\",\r\n  },\r\n  titleBox: {\r\n    marginTop: \"1%\",\r\n  },\r\n}));\r\n\r\nexport const AllMarketDominant = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const missesData = topLevelPieData.filter(\r\n    (row) => row.dataSet === \"missedTarget\"\r\n  );\r\n\r\n  const totalMDVol = volumeData.filter((row) => row.mailClass === \"MD\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid item xs={12} className={classes.titleBox}>\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n            All Market Dominant Products\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={classes.mdGraphContainer}\r\n            style={{ marginLeft: \"4%\" }}\r\n          >\r\n            <Paper className={classes.paperTopRow}>\r\n              <PieGraph propData={missesData} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5} className={classes.mdGraphContainer}>\r\n            <Paper className={classes.paperTopRow}>\r\n              <MDCompositeContainer />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <div id=\"gridSpacing\"></div>\r\n        </Grid>\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <div id=\"topEvents\">\r\n                <ProductCountTableMD />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{\r\n                backgroundColor: lightGrey,\r\n                paddingTop: \"-10%\",\r\n                marginTop: \"-60%\",\r\n              }}\r\n            >\r\n              <div id=\"topAnnualVolume\" style={{}}>\r\n                <VolumeChange propData={totalMDVol} />\r\n              </div>\r\n            </Paper>\r\n            <div style={{ marginTop: \"10%\" }}> </div>\r\n            {/* <Paper> */}\r\n            <DownloadButton\r\n              propData={annualDataFull}\r\n              dataName={\"Market Dominant Data\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMarketDominant;\r\n","import * as d3 from \"d3\";\r\n\r\nconst classGraphDims = {\r\n  graphHeight: 300,\r\n  graphWidth: 820,\r\n  barWidth: 20,\r\n  marginLeft: 40,\r\n  marginRight: 40,\r\n  marginBottom: 30,\r\n  marginTop: 20,\r\n  barMarginLeft: 40 + 20,\r\n};\r\n\r\nexport const {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  barMarginLeft,\r\n  marginTop,\r\n} = classGraphDims;\r\n\r\nexport const yScale = d3.scaleLinear().domain([0, 100]).range([0, 250]);\r\nexport const yScaleRev = d3.scaleLinear().domain([0, 100]).range([250, 0]);\r\n\r\nexport default yScale;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 15;\r\nconst textMarginTop = 10;\r\nconst tooltipColor = \"grey\";\r\n\r\nexport const TooltipTarget = (props) => {\r\n  const { propData, isHoveringTarget, hoverTargetId, tooltipId, xHoverTarget } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHoveringTarget, tooltipId);\r\n    tooltipXPoz(xHoverTarget, tooltipId);\r\n    tooltipYPoz(tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverTargetId, propData));\r\n  }, [isHoveringTarget]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHoveringTarget, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div id={tooltipId} style={tooltipStyles_Target}>\r\n      <span style={{}}>{tooltipText}</span>\r\n      <div\r\n        style={{\r\n          width: \"0\",\r\n          height: \"0\",\r\n          borderLeft: \"15px solid transparent\",\r\n          borderRight: \"15px solid transparent\",\r\n          borderTop: \"20px solid grey\",\r\n          marginLeft: `50px`,\r\n        }}\r\n        class=\"arrow-down\"\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction tooltipTextChange(hoverTargetId, propData) {\r\n  const hoveredProductId = parseInt(hoverTargetId.split(\"_\")[1]);\r\n\r\n  const hoveredProductTargetRow = propData\r\n    .filter((row) => row.productId === hoveredProductId)\r\n    .filter((row) => row.fy === 2020)[0];\r\n\r\n  let hoveredTargetValue;\r\n\r\n  if (hoveredProductTargetRow) {\r\n    hoveredTargetValue = hoveredProductTargetRow.target;\r\n    hoveredTargetValue = hoveredTargetValue.toFixed(2);\r\n  }\r\n\r\n  const tooltipTextFinal = `Target: ${hoveredTargetValue}`;\r\n\r\n  return tooltipTextFinal;\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = -50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal = -450;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction removeOnMouseOut(isHoveringTarget, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHoveringTarget) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nexport const tooltipStyles_Target = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n  color: \"black\",\r\n  opacity: 0,\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ClassLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  // const xPush = 100;\r\n  const xPush = 50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetAnnual(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[1]);\r\n  const yearVal = parseInt(idList[2]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n      pointsFromTarget = hoveredRow.pointsFromTarget;\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\nexport default TooltipService_ClassLevel;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n  pinkHighlight,\r\n  lightGrey,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipTarget } from \"./TooltipTarget\";\r\n\r\nimport { TooltipService_ClassLevel } from \"./TooltipService_ClassLevel\";\r\n\r\nexport const ClassLevelGraph = (props) => {\r\n  const { propData, mailClass } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  const [isHoveringTarget, setIsHoveringTarget] = useState(false);\r\n  const [hoverTargetId, setHoverTargetId] = useState(\"\");\r\n  const [xHoverTarget, setXHoverTarget] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    barFunctions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    barFunctions();\r\n  }, [data, propData]);\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = graphWidth - marginLeft - marginRight;\r\n\r\n  const svgId = mailClass.replace(/\\s+/g, \"\") + \"ClassSvg\";\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  function barFunctions() {\r\n    removeBars();\r\n    if (data.length > 1) {\r\n      removeBars();\r\n      drawBars();\r\n    }\r\n  }\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const dataProducts = data.filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    const data2020 = dataProducts.filter((row) => row.fy === 2020);\r\n    const data2019 = dataProducts.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".productNameText\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d.productAbbrev)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"graphicElement nameBox nonBar\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `productName${i}`)\r\n      .attr(\"transform\", function (d, i) {\r\n        let rotationDeg = 0;\r\n\r\n        if (data2020.length > 9) {\r\n          rotationDeg = 25;\r\n        }\r\n\r\n        return `translate(${\r\n          i * interBarMargin + 75\r\n        },${topStart + 15})rotate(${rotationDeg})`;\r\n      })\r\n      .style(\"text-anchor\", \"start\")\r\n      .attr(\"dx\", \"-.9em\")\r\n      .attr(\"dy\", \".3em\");\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \"graphicElement axisTicks nonBar\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 1);\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n\r\n    svg\r\n      .selectAll(\".bar2019\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElement bar2019\")\r\n      .attr(\"id\", (d) => `classBar_${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".bar2020\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElement bar2020\")\r\n      .attr(\"id\", (d) => `classBar_${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 3)\r\n      .attr(\"class\", \"graphicElement targetLines nonBar\")\r\n      .attr(\"id\", (d) => `classTarget_${d.productId}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n\r\n        mouseOverTriggersTarget(currentTargetSelection);\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n        mouseOutTriggersTarget(currentTargetSelection);\r\n      });\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"graphicElement\");\r\n\r\n    function rotateTextConditionally(dataset) {\r\n      const datasetLength = dataset.length;\r\n\r\n      console.log(datasetLength, \"rotate cond\");\r\n      if (datasetLength > 8) {\r\n        return \"rotate(45)\";\r\n      } else {\r\n        return \"rotate(0)\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  function removeBars() {\r\n    d3.selectAll(\".graphicElement\").remove();\r\n  }\r\n\r\n  function mouseOverTriggersTarget(currentTargetSelection) {\r\n    const currentTargetId = currentTargetSelection._groups[0][0].id;\r\n\r\n    const currentTargetX =\r\n      currentTargetSelection._groups[0][0].x1.baseVal.value;\r\n    const currentTargetHeight =\r\n      currentTargetSelection._groups[0][0].y1.baseVal.value;\r\n\r\n    setIsHoveringTarget(true);\r\n    setHoverTargetId(currentTargetId);\r\n    setXHoverTarget(currentTargetX);\r\n  }\r\n\r\n  function mouseOutTriggersTarget(currentTargetSelection) {\r\n    setIsHoveringTarget(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginLeft: \"-5%\" }}>\r\n        <h3 fontFamily={textNodeFont}>{mailClass} Products</h3>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id={svgId}\r\n          height={330}\r\n          width={graphWidth}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"classLevel\"}\r\n          bar2019={\".bar2019\"}\r\n          bar2020={\".bar2020\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ClassLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipClassGraph\"}\r\n      />\r\n\r\n      <TooltipTarget\r\n        isHoveringTarget={isHoveringTarget}\r\n        hoverTargetId={hoverTargetId}\r\n        tooltipId={\"tooltipClassTarget\"}\r\n        propData={propData}\r\n        xHoverTarget={xHoverTarget}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassLevelGraph;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  liteBlue,\r\n  alternateHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport * as d3 from \"d3\";\r\n\r\nconst useStyles = makeStyles({\r\n  totalCountCountainer: {\r\n    backgroundColor: primaryColor,\r\n    borderRadius: \"1%\",\r\n    justifyContent: \"left\",\r\n    paddingLeft: \"-5%\",\r\n    paddingRight: \"-500px\",\r\n  },\r\n  missedCountCountainer: {\r\n    backgroundColor: liteBlue,\r\n    borderRadius: \"1%\",\r\n  },\r\n  decCountContainer: {\r\n    backgroundColor: secondaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  tableText: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n    // marginRight: \"-50px\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  tableTextNumber: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n    marginLeft: \"3%\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTable = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function createCellData(propData) {\r\n    let singleYear = propData\r\n      .filter((row) => row.fy === 2020)\r\n      .filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    let productCount = singleYear.length;\r\n\r\n    let decreasedCount = 0;\r\n    let missedTarget = 0;\r\n\r\n    for (let i = 0; i < singleYear.length; i++) {\r\n      const currentRow = singleYear[i];\r\n      if (currentRow.pctOnTime - currentRow.target < 0) {\r\n        missedTarget += 1;\r\n      }\r\n      if (decreasedThisYear(currentRow.productId)) {\r\n        decreasedCount += 1;\r\n      }\r\n    }\r\n\r\n    const rez = {\r\n      productCount: productCount,\r\n      missedTarget: missedTarget,\r\n      decreasedCount: decreasedCount,\r\n    };\r\n\r\n    return rez;\r\n  }\r\n\r\n  function decreasedThisYear(productId) {\r\n    const thisProduct = propData.filter((row) => row.productId === productId);\r\n\r\n    const thisYearScore = thisProduct.filter((row) => row.fy === 2020)[0]\r\n      .pctOnTime;\r\n    const lastYearScore = thisProduct.filter((row) => row.fy === 2019)[0]\r\n      .pctOnTime;\r\n\r\n    return thisYearScore < lastYearScore;\r\n  }\r\n\r\n  const cellData = createCellData(propData);\r\n\r\n  return (\r\n    // <>\r\n    //   <Container disableGutters={true} className={classes.totalCountCountainer}>\r\n    //     <Typography\r\n    //       variant=\"h4\"\r\n    //       align=\"left\"\r\n    //       className={classes.tableTextNumber}\r\n    //     >\r\n    //       {cellData.productCount}\r\n    //     </Typography>\r\n    //     <br></br>\r\n    //     <ProductCountBar\r\n    //       totalProductCount={cellData.productCount}\r\n    //       thisCount={cellData.productCount}\r\n    //       dataType=\"totalProductCount\"\r\n    //     />\r\n    //     <Typography align=\"left\" className={classes.tableText}>\r\n    //       Products in this Class\r\n    //     </Typography>\r\n\r\n    //     {/* </div> */}\r\n    //   </Container>\r\n\r\n    //   <Container\r\n    //     disableGutters={true}\r\n    //     className={classes.missedCountCountainer}\r\n    //   >\r\n    //     <Typography\r\n    //       variant=\"h4\"\r\n    //       align=\"left\"\r\n    //       className={classes.tableTextNumber}\r\n    //     >\r\n    //       {cellData.missedTarget}\r\n    //     </Typography>\r\n    //     <br></br>\r\n    //     <ProductCountBar\r\n    //       totalProductCount={cellData.productCount}\r\n    //       thisCount={cellData.missedTarget}\r\n    //       dataType=\"missedProductCount\"\r\n    //     />\r\n\r\n    //     <Typography align=\"left\" className={classes.tableText}>\r\n    //       Products Missed their Targets\r\n    //     </Typography>\r\n    //   </Container>\r\n    //   <Container disableGutters={true} className={classes.decCountContainer}>\r\n    //     <Typography\r\n    //       variant=\"h4\"\r\n    //       align=\"left\"\r\n    //       className={classes.tableTextNumber}\r\n    //     >\r\n    //       {cellData.decreasedCount}\r\n    //     </Typography>\r\n    //     <br></br>\r\n    //     <ProductCountBar\r\n    //       totalProductCount={cellData.productCount}\r\n    //       thisCount={cellData.decreasedCount}\r\n    //       dataType=\"decreasedProductCount\"\r\n    //     />\r\n    //     <Typography align=\"left\" className={classes.tableText}>\r\n    //       Products Decreased in FY2020\r\n    //     </Typography>\r\n    //   </Container>\r\n    //   {/* </div> */}\r\n    // </>\r\n\r\n    <>\r\n      <Container disableGutters={true} className={classes.totalCountCountainer}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.productCount}\r\n        </Typography>\r\n        <br></br>\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products in this Class\r\n        </Typography>\r\n\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.productCount}\r\n          dataType=\"totalProductCount\"\r\n        />\r\n      </Container>\r\n\r\n      <Container\r\n        disableGutters={true}\r\n        className={classes.missedCountCountainer}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.missedTarget}\r\n        </Typography>\r\n        <br></br>\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products Missed their Targets\r\n        </Typography>\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.missedTarget}\r\n          dataType=\"missedProductCount\"\r\n        />\r\n      </Container>\r\n      <Container disableGutters={true} className={classes.decCountContainer}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.decreasedCount}\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products Decreased in FY2020\r\n        </Typography>\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.decreasedCount}\r\n          dataType=\"decreasedProductCount\"\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProductCountBar = (props) => {\r\n  const { propData } = props;\r\n\r\n  const { totalProductCount, thisCount, dataType } = props;\r\n\r\n  const [barData, setBarData] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setBarData(thisCount);\r\n    drawBar();\r\n  }, [totalProductCount]);\r\n\r\n  useEffect(() => {\r\n    drawBar();\r\n  }, [totalProductCount, barData]);\r\n\r\n  const svgId = `${dataType}_svg`;\r\n  const barId = `${dataType}_bar`;\r\n  const otherBarId = `${dataType}_otherBar`;\r\n\r\n  const svgSelection = d3.select(`#${svgId}`);\r\n\r\n  const barHeight = 10;\r\n\r\n  const svgWidth = 300;\r\n  const svgHeight = barHeight + 20;\r\n\r\n  const countPercentage = thisCount / totalProductCount;\r\n\r\n  const countPercentageDiff = 1 - countPercentage;\r\n\r\n  const xScale = d3.scaleLinear().domain([0, 1]).range([0, svgWidth]);\r\n\r\n  const fakeData = [{ value: countPercentage }];\r\n\r\n  function drawBar() {\r\n    svgSelection\r\n      .selectAll(`#${otherBarId}`)\r\n      .data(fakeData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", xScale(countPercentage))\r\n      .attr(\"y\", 15)\r\n      .attr(\"height\", 15)\r\n      .attr(\"width\", (d) => xScale(countPercentageDiff))\r\n      .attr(\"fill\", \"hsla(239, 100%, 100%, 0.55)\")\r\n      .attr(\"id\", otherBarId);\r\n\r\n    svgSelection\r\n      .selectAll(`#${barId}`)\r\n      .data(fakeData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 15)\r\n      .attr(\"height\", 15)\r\n      .attr(\"width\", (d) => xScale(countPercentage))\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"id\", barId);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        //  marginBottom: \"10px\" ,\r\n        paddingBottom: \"5px\",\r\n      }}\r\n    >\r\n      <svg fill=\"black\" id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCountTable;\r\n","import { useRef } from \"react\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport quarterlyData from \"../Data/quarterlyData.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectDropdown: {\r\n    marginRight: \"5%\",\r\n\r\n    width: \"375px\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dropdownLabel: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport const ProductDropdown = (props) => {\r\n  const { propData, selectedProductId, changeProductSelected, mailClass } =\r\n    props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputRef = useRef();\r\n\r\n  let productList = propData\r\n    .filter((row) => row.fy === 2020)\r\n    .filter((row) => !row.product.includes(\"Mixed\"));\r\n\r\n  if (mailClass !== \"First Class\")\r\n    productList = productList.filter((row) => row.productAbbrev !== \"missing\");\r\n  else {\r\n    productList = productList\r\n\r\n      .filter((row) => row.productId !== 61) //sp flats overnight\r\n      .filter((row) => row.productId !== 1) //sp letters overnight\r\n      .filter((row) => ![10, 11, 12, 14, 15, 16].includes(row.productId)) //inbound/outbound deliv speeds\r\n      .filter((row) => ![7, 8, 9].includes(row.productId)); // flats product\r\n  }\r\n\r\n  productList.push({\r\n    class: mailClass,\r\n    fy: 2019,\r\n    product: \"none\",\r\n    productId: 0,\r\n  });\r\n\r\n  function returnFullProductName(element) {\r\n    const productName = element.product;\r\n    const deliverySpeed = element.deliverySpeed;\r\n\r\n    if ((mailClass !== \"First Class\") | (productName === \"none\")) {\r\n      return productName;\r\n    }\r\n    if ((mailClass === \"First Class\") & (productName === \"Flats\")) {\r\n      return `${element.subProductName} (${deliverySpeed})`;\r\n    } else {\r\n      return `${productName} (${deliverySpeed})`;\r\n    }\r\n  }\r\n\r\n  function getNameFromId(selectedProductId) {\r\n    selectedProductId = parseInt(selectedProductId);\r\n\r\n    if (selectedProductId === 0) {\r\n      return \"none\";\r\n    }\r\n\r\n    const currentRow = propData.filter(\r\n      (row) => row.productId === selectedProductId\r\n    )[0];\r\n\r\n    if (mailClass !== \"First Class\") {\r\n      return currentRow.product;\r\n    } else {\r\n      if (currentRow.product === \"Flats\") {\r\n        return `${currentRow.subProductName} (${currentRow.deliverySpeed})`;\r\n      } else {\r\n        return `${currentRow.product} (${currentRow.deliverySpeed})`;\r\n      }\r\n    }\r\n  }\r\n\r\n  const menuItems = productList.map((el, ind) => (\r\n    <MenuItem\r\n      key={`dropdown${ind}`}\r\n      id={el.productId}\r\n      onClick={changeProductSelected}\r\n      value={returnFullProductName(el)}\r\n      ref={inputRef}\r\n    >\r\n      {returnFullProductName(el)}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography className={classes.dropdownLabel}>\r\n              View Product-Level Data:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Select\r\n              value={getNameFromId(selectedProductId)}\r\n              className={classes.selectDropdown}\r\n            >\r\n              {menuItems}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDropdown;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ProductLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = 50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetQuarterly(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[0]);\r\n  const yearVal = parseInt(idList[1]);\r\n  const quarterVal = parseInt(idList[2]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId)\r\n      .filter((row) => row.quarter === quarterVal);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n\r\n      pointsFromTarget = hoveredRow.target - hoveredRow.pctOnTime;\r\n      pointsFromTarget = pointsFromTarget.toFixed(2);\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\nexport default TooltipService_ProductLevel;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipService_ProductLevel } from \"./TooltipService_ProductLevel\";\r\n\r\nexport const ProductGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  useEffect(allGraphFunctions, [data, propData]);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    drawBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  function allGraphFunctions() {\r\n    d3.selectAll(\".nonBarQuarter\").remove();\r\n\r\n    drawNonBarItems();\r\n\r\n    setData(propData);\r\n    drawBars();\r\n\r\n    transitionBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n  }\r\n\r\n  function raiseBars() {\r\n    d3.selectAll(\".bar2019Quarter\").raise();\r\n    d3.selectAll(\".bar2020Quarter\").raise();\r\n  }\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(\".targetLines\").raise();\r\n  }\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = 850;\r\n\r\n  const svg = d3.select(\"#productSvg\");\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2019Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2020Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n  }\r\n\r\n  function transitionBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    d3.selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    d3.selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      // .style(\"stroke\", highlightColor)\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 3)\r\n      .attr(\"class\", \"nonBarQuarter  graphicElementQuarter targetLines\");\r\n  }\r\n\r\n  function drawNonBarItems() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n\r\n    const quarters = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter\");\r\n\r\n    svg\r\n      .selectAll(\".quarterText\")\r\n      .data(quarters)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + 75)\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter nameBox\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \" nonBarQuarter graphicElementQuarter axisTicks\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 0.5);\r\n\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n  }\r\n\r\n  const theseBars = d3.selectAll(\".bar2020Quarter, .bar2019Quarter\");\r\n\r\n  theseBars.on(\"mouseover\", function () {\r\n    const currentBarSelection = d3.select(this);\r\n\r\n    mouseOverTriggers(currentBarSelection);\r\n  });\r\n\r\n  theseBars.on(\"mouseout\", function () {\r\n    const currentBarSelection = d3.select(this);\r\n    mouseOutTriggers(currentBarSelection);\r\n  });\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\");\r\n    // .attr(\"stroke-width\", \"2px\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  const firstRow = propData[0];\r\n\r\n  let productName = firstRow.product;\r\n\r\n  if (firstRow.class === \"First Class Mail\") {\r\n    productName = `${firstRow.product} (${firstRow.deliverySpeed})`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3 fontFamily={textNodeFont}>Product-Level Quarterly Data</h3>\r\n        <h4>{productName}</h4>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id=\"productSvg\"\r\n          height={300}\r\n          width={850}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"productLevel\"}\r\n          bar2019={\".bar2019Quarter\"}\r\n          bar2020={\".bar2020Quarter\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ProductLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipProductGraph\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductGraph;\r\n","const outsideObjMargin = { top: 10, right: 20, bottom: 10, left: 40 };\r\n\r\nconst lineDims = {\r\n  margin: outsideObjMargin,\r\n  svgHeightFull: 200,\r\n  svgHeight: 200 - outsideObjMargin.top - outsideObjMargin.bottom,\r\n  svgWidth: 420 - outsideObjMargin.right - outsideObjMargin.left,\r\n  interDotX: 95,\r\n};\r\n\r\nexport const { margin, svgHeight, svgHeightFull, svgWidth, interDotX } =\r\n  lineDims;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport { darkGrey } from \"../Design/MyTheme\";\r\n\r\nexport const TooltipVolume = (props) => {\r\n  const { xHover, yHover, hoverId, svgHeightFull, isHovering, propData } =\r\n    props;\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering);\r\n    tooltipXPoz(xHover, hoverId);\r\n    tooltipYPoz(yHover, hoverId, svgHeightFull);\r\n  }, [isHovering]);\r\n\r\n  const tooltipText = tooltipTextChange(hoverId, propData);\r\n\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  tooltipDiv.on(\"mouseover\", () => {\r\n    tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        width: tooltipWidth,\r\n        height: tooltipHeight,\r\n        font: \"12px sans-serif\",\r\n        background: \"lightsteelblue\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        paddingTop: \"10px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: darkGrey,\r\n        fontWeight: \"bold\",\r\n        fontSize: \"13px\",\r\n      }}\r\n      id=\"TooltipVolume\"\r\n    >\r\n      <span style={{ marginTop: textMarginTop }}> {tooltipText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tooltipWidth = 140;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nfunction removeOnMouseOut(isHovering) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, hoverId) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal = xHover - tooltipWidth;\r\n  } else {\r\n    outputVal = xHover;\r\n  }\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(yHover, hoverId, svgHeightFull) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n  outputVal = yHover;\r\n\r\n  outputVal = svgHeightFull - outputVal;\r\n\r\n  outputVal *= -1;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal -= tooltipHeight;\r\n    outputVal -= textMarginTop;\r\n  }\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(currentDotId, dataIn) {\r\n  let currentDotQuarter = 0;\r\n\r\n  if (!currentDotId) {\r\n    return \"none\";\r\n  }\r\n\r\n  if (currentDotId) {\r\n    currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n  }\r\n\r\n  const dataSorted = dataIn.sort((a, b) => a.quarter - b.quarter);\r\n\r\n  const currentRow = dataSorted[currentDotQuarter - 1];\r\n\r\n  const thisVol = currentRow.volume;\r\n\r\n  const volText = formatVolumeNumber(thisVol);\r\n\r\n  return `Q${currentDotQuarter} Volume: ${volText}`;\r\n}\r\n\r\nfunction formatVolumeNumber(rawNumber) {\r\n  let trailingLetter = \"B\";\r\n  let divisor = 1000000000;\r\n\r\n  if (rawNumber / divisor < 1) {\r\n    trailingLetter = \"M\";\r\n    divisor = divisor / 1000;\r\n  }\r\n\r\n  if (rawNumber / divisor < 1) {\r\n    trailingLetter = \"K\";\r\n    divisor = divisor / 1000;\r\n  }\r\n\r\n  const outputNumber = rawNumber / divisor;\r\n\r\n  let stringNum = outputNumber.toFixed(2);\r\n\r\n  return `${stringNum} ${trailingLetter}`;\r\n}\r\n\r\nexport default TooltipVolume;\r\n","import * as d3 from \"d3\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  margin,\r\n  svgHeight,\r\n  svgHeightFull,\r\n  svgWidth,\r\n  interDotX,\r\n} from \"../Design/graphDimensionsLine\";\r\n\r\nimport {\r\n  secondaryColor,\r\n  lineGraphTitleBlock,\r\n  primaryColor,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport { TooltipVolume } from \"./TooltipVolume\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerText: {\r\n    color: \"white\",\r\n    marginTop: \"-1%\",\r\n  },\r\n});\r\n\r\nexport const QuarterlyVolume = (props) => {\r\n  const { propData } = props;\r\n\r\n  let isFirstClass = false;\r\n\r\n  if (propData[0].class === \"First Class Mail\") {\r\n    isFirstClass = true;\r\n  }\r\n\r\n  // console.log(\"qtr vol\", isFirstClass);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(propData);\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [yHover, setYHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    drawLine();\r\n    drawDots(data2020);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    transitionLine();\r\n    transitionDots();\r\n  }, [data, propData]);\r\n\r\n  let currentProductName = data[0].product;\r\n\r\n  if (isFirstClass) {\r\n    const firstRow = data[0];\r\n    currentProductName = `${firstRow.product} (${firstRow.deliverySpeed})`;\r\n  }\r\n\r\n  const data2020 = propData.filter((row) => row.fy === 2020);\r\n  const volumes2020 = data2020.map((row) => row.volume);\r\n\r\n  const tooltipWidth = 130;\r\n  const tooltipHeight = 50;\r\n\r\n  var yScale = d3\r\n    .scaleLinear()\r\n    .domain([d3.min(volumes2020), d3.max(volumes2020)])\r\n    .range([svgHeight, 15]);\r\n\r\n  function createLine(dataSet) {\r\n    const aLine = d3\r\n      .line()\r\n      .x(function (d, i) {\r\n        return i * interDotX + margin.left;\r\n      })\r\n      .y(function (d, i) {\r\n        return yScale(d.volume);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    return aLine;\r\n  }\r\n\r\n  function transitionLine() {\r\n    const newLine = createLine(data2020);\r\n\r\n    d3.select(\"#volumeLine\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", newLine);\r\n  }\r\n\r\n  function drawLine() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    const line = createLine(data2020);\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", line)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke-width\", \"3px\")\r\n      .style(\"stroke\", \"blue\")\r\n      .attr(\"id\", \"volumeLine\");\r\n  }\r\n\r\n  function transitionDots() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .on(\"mouseover\", function () {\r\n        let currentDotX = d3.select(this)._groups[0][0].cx;\r\n        let currentDotY = d3.select(this)._groups[0][0].cy;\r\n        let currentDotId = d3.select(this)._groups[0][0].id;\r\n\r\n        currentDotX = currentDotX.baseVal.value;\r\n        currentDotY = currentDotY.baseVal.value;\r\n\r\n        setXHover(currentDotX);\r\n        setYHover(currentDotY);\r\n        setHoverId(currentDotId);\r\n        setIsHovering(true);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        setIsHovering(false);\r\n      })\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"cy\", (d) => yScale(d.volume));\r\n  }\r\n\r\n  function drawDots(data2020) {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (d, i) => i * interDotX + margin.left)\r\n      .attr(\"cy\", (d) => yScale(d.volume))\r\n      .attr(\"r\", 5)\r\n      .attr(\"id\", (d, i) => `volumeDot_${i + 1}`)\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"class\", \"dot\");\r\n  }\r\n\r\n  function drawTooltip(currentDotX, currentDotY) {\r\n    d3.select(\"#lineTooltip\").remove();\r\n\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n    svg\r\n      .append(\"rect\")\r\n      .attr(\"width\", tooltipWidth)\r\n      .attr(\"height\", tooltipHeight)\r\n      .attr(\"id\", \"lineTooltip\")\r\n      .attr(\"fill\", \"#888a8c\")\r\n      .attr(\"rx\", 3)\r\n      .style(\"opacity\", 0);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"testing text\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"id\", \"tooltipText\")\r\n      .style(\"font-size\", \"14px\")\r\n      .style(\"opacity\", 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: primaryColor,\r\n          paddingTop: \"1%\",\r\n          width: svgWidth,\r\n        }}\r\n      >\r\n        <div style={{ marginTop: \"1%\" }}>\r\n          <p\r\n            className={classes.headerText}\r\n            style={{ fontSize: \"20px\", fontWeight: \"bold\" }}\r\n          >\r\n            FY 2020 Quarterly Volume\r\n          </p>\r\n          <p className={classes.headerText}> {currentProductName}</p>\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: lineGraphTitleBlock }}>\r\n          <svg height={svgHeightFull} width={svgWidth} id=\"qtrVolsvg\"></svg>\r\n        </div>\r\n      </div>\r\n      <TooltipVolume\r\n        xHover={xHover}\r\n        yHover={yHover}\r\n        hoverId={hoverId}\r\n        svgHeightFull={svgHeightFull}\r\n        isHovering={isHovering}\r\n        propData={data2020}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuarterlyVolume;\r\n","import data from \"../Data/quarterlyData.json\";\r\n\r\nimport ProductGraph from \"../DashComponents/ProductGraph\";\r\nimport QuarterlyVolume from \"../DashComponents/QuarterlyVolume\";\r\nimport { Grid, Paper, Divider } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nexport const ProductPage = (props) => {\r\n  const { selectedProductId } = props;\r\n\r\n  let productId = parseInt(selectedProductId);\r\n\r\n  const productData = data.filter((row) => row.productId === productId);\r\n\r\n  let renderedSection;\r\n\r\n  if (productId && productId !== 0) {\r\n    renderedSection = (\r\n      <ProductPageFull productId={productId} productData={productData} />\r\n    );\r\n  } else {\r\n    renderedSection = <EmptyProductPage />;\r\n  }\r\n\r\n  return <div>{renderedSection}</div>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullProductContainer: {\r\n    marginTop: \"3%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  quarterlyContainer: {\r\n    minWidth: 315,\r\n  },\r\n  productGraphContainer: {\r\n    minwidth: 700,\r\n  },\r\n}));\r\n\r\nconst ProductPageFull = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { productId, productData } = props;\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"2%\", marginBottom: \"20%\" }}>\r\n        <Divider />\r\n        <div style={{ marginTop: \"2%\", marginLeft: \"2%\" }}>\r\n          <Grid container spacing={0}>\r\n            <Grid item lg={7} md={12}>\r\n              <div style={{ width: 875 }}>\r\n                <Paper className={classes.productGraphContainer}>\r\n                  <ProductGraph propData={productData} />\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <QuarterlyVolume propData={productData} />\r\n              <div style={{ marginTop: \"10%\" }}></div>\r\n              <DownloadButton\r\n                propData={productData}\r\n                dataName={\"Quarterly Data\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmptyProductPage = () => {\r\n  return <></>;\r\n};\r\n\r\nexport default ProductPage;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const FirstClass = () => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const fcAnnualData = annualData.filter(\r\n    (row) => row.class === \"First Class Mail\"\r\n  );\r\n\r\n  let volDataFC = volData.filter((row) => row.mailClass === \"FC\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={1} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n                First Class Data\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={9}\r\n            xs={12}\r\n            style={{ maxWidth: 950 }}\r\n          >\r\n            <Paper\r\n              className={classes.graphDiv}\r\n              elevation={3}\r\n              width={graphWidth}\r\n            >\r\n              <ClassLevelGraph\r\n                propData={fcAnnualData}\r\n                mailClass={\"First Class\"}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} float=\"left\">\r\n            <Grid container direction=\"column\" spacing={3}>\r\n              <Grid item lg={7} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <ProductCountTableData propData={fcAnnualData} />{\" \"}\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{ backgroundColor: lightGrey }}\r\n                >\r\n                  <VolumeChange propData={volDataFC} />\r\n                </Paper>\r\n                <div style={{ marginTop: \"30%\" }}></div>\r\n                <Paper>\r\n                  <DownloadButton\r\n                    propData={fcAnnualData}\r\n                    dataName={\"Class-Level Data\"}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper item xs={12} className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={fcAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"First Class\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstClass;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\n\r\nexport const MarketingMail = (props) => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const mmAnnualData = annualData.filter(\r\n    (row) => row.class === \"Marketing Mail\"\r\n  );\r\n\r\n  let volDataMM = volData.filter((row) => row.mailClass === \"MM\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n              Marketing Mail Class-Level Data\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={12}\r\n          style={{ maxWidth: 950 }}\r\n          className={classes.classGraphContainer}\r\n        >\r\n          <Paper className={classes.graphDiv} elevation={3}>\r\n            <ClassLevelGraph\r\n              propData={mmAnnualData}\r\n              mailClass={\"Marketing Mail\"}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={3}>\r\n            <Grid item lg={7} md={12}>\r\n              <Paper\r\n                // alignItems=\"left\"\r\n                className={classes.paperCountTable}\r\n              >\r\n                {/* <div style={{ marginLeft: \"-5%\" }}> */}\r\n                <ProductCountTableData propData={mmAnnualData} />\r\n                {/* </div> */}\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ backgroundColor: lightGrey }}\r\n              >\r\n                <VolumeChange propData={volDataMM} />\r\n              </Paper>\r\n              <div style={{ marginTop: \"30%\" }}></div>\r\n              <Paper>\r\n                <DownloadButton\r\n                  propData={mmAnnualData}\r\n                  dataName={\"Class-Level Data\"}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={mmAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"Marketing Mail\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMail;\r\n","export const SpecialServices = () => {\r\n  return <div> im SpecialServices</div>;\r\n};\r\n\r\nexport default SpecialServices;\r\n","export const PackageServices = (props) => {\r\n  return <div> Package Services </div>;\r\n};\r\n\r\nexport default PackageServices;\r\n","export const Periodicals = () => {\r\n  return <div> im Periodicals</div>;\r\n};\r\n\r\nexport default Periodicals;\r\n","import {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Drawer = (props) => {\r\n  const { history } = props;\r\n\r\n  const mailClassNames = [\r\n    {\r\n      text: \"First Class\",\r\n      onClick: () => history.push(\"/first-class\"),\r\n    },\r\n    {\r\n      text: \"Marketing Mail\",\r\n      onClick: () => history.push(\"/marketing-mail\"),\r\n    },\r\n    {\r\n      text: \"Periodicals\",\r\n      onClick: () => history.push(\"/periodicals\"),\r\n    },\r\n    {\r\n      text: \"Package Services\",\r\n      onClick: () => history.push(\"/package-services\"),\r\n    },\r\n    {\r\n      text: \"Special Services\",\r\n      onClick: () => history.push(\"/special-services\"),\r\n    },\r\n  ];\r\n\r\n  const homeName = [\r\n    {\r\n      text: \"All Market Dominant\",\r\n      onClick: () => history.push(\"/all-md\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <MUIDrawer variant=\"permanent\">\r\n      <List>\r\n        {homeName.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      <Divider />\r\n      <List>\r\n        {mailClassNames.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </MUIDrawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drawer);\r\n","import \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport myTheme from \"./Design/MyTheme\";\n\nimport { AllMarketDominant } from \"./mailClassComponents/AllMarketDominant\";\nimport { FirstClass } from \"./mailClassComponents/FirstClass\";\nimport { MarketingMail } from \"./mailClassComponents/MarketingMailClass\";\nimport { SpecialServices } from \"./mailClassComponents/SpecialServices\";\nimport { PackageServices } from \"./mailClassComponents/PackageServices\";\nimport { Periodicals } from \"./mailClassComponents/Periodicals\";\nimport { ProductPage } from \"./mailClassComponents/ProductPage\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Drawer from \"./Drawer\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Drawer />\n        <ThemeProvider theme={myTheme}>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                from=\"/all-md\"\n                render={(props) => <AllMarketDominant {...props} />}\n              />\n\n              <Route\n                exact\n                path=\"/first-class\"\n                render={(props) => <FirstClass {...props} />}\n              />\n              <Route\n                exact\n                path=\"/marketing-mail\"\n                render={(props) => <MarketingMail {...props} />}\n              />\n              <Route\n                exact\n                path=\"/periodicals\"\n                render={(props) => <Periodicals {...props} />}\n              />\n              <Route\n                exact\n                path=\"/package-services\"\n                render={(props) => <SpecialServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/special-services\"\n                render={(props) => <PackageServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/product\"\n                render={(props) => <ProductPage {...props} />}\n              />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}