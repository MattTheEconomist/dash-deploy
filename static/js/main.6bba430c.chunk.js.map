{"version":3,"sources":["Design/MyTheme.js","DashComponents/PieGraphKey.jsx","DashComponents/PieGraph.jsx","Design/graphDimensionsSide.js","DashComponents/BarGraphSide.jsx","DashComponents/GraphKey.jsx","DashComponents/AxisBottom.jsx","mailClassComponents/allMarketDominantComponents/MDCompositeContainer.jsx","DashComponents/VolumeChange.jsx","DashComponents/ProductCountTableMD.jsx","DashComponents/DownloadButton.jsx","mailClassComponents/AllMarketDominant.jsx","mailClassComponents/FirstClass.jsx","Design/graphDimensions.js","mailClassComponents/MarketingMailComponents/MarketingMailClassGraph.jsx","DashComponents/ProductCountTable.jsx","DashComponents/ProductDropdown.jsx","DashComponents/ProductGraph.jsx","DashComponents/QuarterlyVolume.jsx","mailClassComponents/ProductPage.jsx","mailClassComponents/MarketingMailComponents/MarketingMailClass.jsx","mailClassComponents/SpecialServices.jsx","mailClassComponents/PackageServices.jsx","mailClassComponents/Periodicals.jsx","Drawer.jsx","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","secondaryColor","highlightColor","lightGrey","alternateHighlight","textNodeFont","myTheme","createTheme","palette","primary","main","PieGraphKey","props","colorObj","cellLocation","cell","style","paddingLeft","marginBottom","height","fill","x","y","width","id","gridStart","fontFamily","PieGraph","propData","useEffect","svg","d3","svgId","dataset","map","row","value","outerRadius","svgWidth","innerRadius","arc","pie","colorList","arcs","selectAll","data","enter","append","attr","d","i","centroid","text","drawPie","dataSet","paddingRight","marginTop","svgHeight","marginLeft","marginRight","innerArea","BarGraphSide","barData","year","rawData","Result2019","Result2020","mailClass","barHeight","xScale","colorSeq","lineData","Target","barMarginTop","drawBars","raise","ProductNameAbbrev","split","domain","range","GraphKey","bar2019","bar2020","level","id2019","id2020","on","transition","duration","console","log","x1","y1","x2","y2","strokeWidth","stroke","className","AxisBottom","call","ticks","drawAxis","fontSize","MDCompositeContainer","fcData","compositeData","filter","mmData","useStyles","makeStyles","root","maxWidth","outterContainer","backgroundColor","titleText","color","fontWeight","volText","volNumber","changeIcon","VolumeChange","volumeData","classes","FY2020","FY2019","volumeTextNumber","rawNumber","trailingLetter","divisor","stringNum","outputNumber","toFixed","formatVolumeNumber","volumeChangeText","rawChange","toString","formatVolumeChangeNumber","Typography","variant","gutterBottom","table","minWidth","maxHeight","padding","borderTop","boxShadow","ProductCountTableMD","countData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","ind","scope","totalProducts","negativeChange","positiveChange","missing","theme","button","font","icon","transform","dataName","DownloadButton","Button","Grid","container","direction","item","xs","flexGrow","paper","spacing","textAlign","secondary","paperTopRow","paddingBottom","minHeight","paddingTop","AllMarketDominant","missesData","topLevelPieData","totalMDVol","alignItems","justifyContent","annualDataFull","FirstClass","graphHeight","barWidth","barMarginLeft","yScale","yScaleRev","MarketingMailClassGraph","useState","setData","barFunctions","topStart","removeBars","length","dataProducts","productAbbrev","data2020","fy","data2019","interBarMargin","graphData","barCount","getInterBarMargin","idCount","this","parentBox","tickSize","remove","pctOnTime","event","target","shapeRendering","totalCountCountainer","borderRadius","missedCountCountainer","decCountContainer","tableText","ProductCountTable","decreasedThisYear","productId","thisProduct","cellData","singleYear","productCount","decreasedCount","missedTarget","currentRow","createCellData","Container","selectDropdown","formControl","margin","selectEmpty","dropdownLabel","ProductDropdown","selectedProductId","changeProductSelected","inputRef","useRef","productList","product","includes","push","class","menuItems","el","MenuItem","onClick","ref","FormControl","Select","parseInt","nameFromId","quarters","drawNonBarItems","ptsFromTarget","transitionBars","tooltipSelection","drawTooltip","theseBars","currentBarX","_groups","animVal","currentBarY","currentBarId","tooltipXDisplacement","headerText","QuarterlyVolume","setXHover","setYHover","line","createLine","datum","drawLine","volume","drawDots","newLine","transitionLine","currentDotX","cx","currentDotY","cy","currentDotId","baseVal","tooltipXPoz","tooltipYPoz","dataIn","currentDotQuarter","match","sort","a","b","quarter","tooltipTextChange","currentProductName","volumes2020","curve","ProductPage","renderedSection","productData","fullProductContainer","quarterlyContainer","productGraphContainer","minwidth","ProductPageFull","Divider","ProductGraph","lg","md","EmptyProductPage","paperDropdown","graphDiv","MarketingMail","setSelectedProductId","mmAnnualData","annualData","volDataMM","volData","elevation","e","SpecialServices","PackageServices","Periodicals","withRouter","history","mailClassNames","homeName","List","index","ListItem","ListItemText","App","ThemeProvider","exact","from","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bba430c.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\n\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     background: \"green\",\r\n//     borderRadius: \"20px\",\r\n//   },\r\n// });\r\n\r\nexport const colorPalleteMatt = {\r\n  primaryColor: \"#2CC6EB\",\r\n  secondaryColor: \"#225CF6\",\r\n  highlightColor: \"#22F6AC\",\r\n  lightGrey: \"#e6e8e6\",\r\n  alternateHighlight: \"#1ED4C7\",\r\n  alternateSecondary: \"#1E7FD4\",\r\n};\r\n\r\nexport const {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  lightGrey,\r\n  alternateHighlight,\r\n  alternateSecondary,\r\n} = colorPalleteMatt;\r\n\r\nexport const lightGreyAgain = \"#e6e8e6\";\r\n\r\n// const darkGrey = \"#888a8c\";\r\n\r\nexport const textNodeFont = \"'Roboto', sans-serif\";\r\n\r\nconst myTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n  },\r\n});\r\n\r\nexport default myTheme;\r\n","import { textNodeFont } from \"../Design/MyTheme\";\r\n\r\nconst PieGraphKey = (props) => {\r\n  const { colorObj } = props;\r\n\r\n  const { primaryColor, highlightColor, lightGrey } = colorObj;\r\n\r\n  const gridMargin = 20;\r\n  const gridStart = 20;\r\n\r\n  function cellLocation(cell) {\r\n    return gridMargin * cell;\r\n  }\r\n  const textMargin = 12;\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"25%\", marginBottom: \"10%\" }}>\r\n      <svg height={100}>\r\n        <rect\r\n          fill={primaryColor}\r\n          x={gridStart}\r\n          y={gridStart}\r\n          width={15}\r\n          height={15}\r\n          id=\"keyMissed\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={gridStart + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Missed Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={highlightColor}\r\n          x={gridStart}\r\n          y={cellLocation(2)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(2) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Exceeded Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={lightGrey}\r\n          x={gridStart}\r\n          y={cellLocation(3)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(3) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products with no Data\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieGraphKey;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport PieGraphKey from \"./PieGraphKey\";\r\n\r\nimport { primaryColor, highlightColor, lightGrey } from \"../Design/MyTheme\";\r\n\r\nexport const PieGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  // const [data, setData] = useState(propData);\r\n\r\n  useEffect(() => {\r\n    drawPie();\r\n  });\r\n\r\n  const dataSet = propData[0].dataSet;\r\n\r\n  const svgId = `${dataSet}svg`;\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  const svgHeight = 300;\r\n  const svgWidth = 300;\r\n\r\n  function drawPie() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const dataset = propData.map((row) => row.value);\r\n\r\n    const outerRadius = svgWidth / 2;\r\n    const innerRadius = svgWidth / 3;\r\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\r\n\r\n    const pie = d3.pie();\r\n\r\n    const colorList = [primaryColor, highlightColor, lightGrey];\r\n\r\n    //Set up groups\r\n    const arcs = svg\r\n      .selectAll(\"g.arc\")\r\n      .data(pie(dataset))\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"arc\")\r\n      .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\r\n\r\n    //Draw arc paths\r\n    arcs\r\n      .append(\"path\")\r\n      .attr(\"fill\", function (d, i) {\r\n        return colorList[i];\r\n      })\r\n      .attr(\"d\", arc);\r\n\r\n    //Labels\r\n    arcs\r\n      .append(\"text\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n      })\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function (d) {\r\n        return d.value;\r\n      });\r\n  }\r\n  const colorObj = {\r\n    primaryColor: primaryColor,\r\n    highlightColor: highlightColor,\r\n    lightGrey: lightGrey,\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ paddingRight: \"28%\" }}>\r\n        <h4 style={{ marginBottom: \"1rem\", marginTop: \"-1%\" }}>\r\n          FY2020 Mail Product Count\r\n        </h4>\r\n        <svg width={svgWidth} height={svgHeight} id={svgId}></svg>\r\n        <PieGraphKey colorObj={colorObj} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PieGraph;\r\n","const sideGraphDims = {\r\n  svgWidth: 400,\r\n  svgHeight: 50,\r\n  marginLeft: 10,\r\n  marginRight: 10,\r\n  innerArea: 380,\r\n};\r\n\r\nexport const { svgWidth, svgHeight, marginLeft, marginRight, innerArea } =\r\n  sideGraphDims;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  svgWidth,\r\n  svgHeight,\r\n  marginLeft,\r\n  marginRight,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const BarGraphSide = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  let rawData = propData[0];\r\n\r\n  let mailClass = rawData.ProductNameAbbrev.split(\" \")[0];\r\n\r\n  if (mailClass === \"First\") {\r\n    mailClass = \"FC\";\r\n  }\r\n\r\n  const svgId = `barSide${mailClass}svg`;\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(`.${mailClass}target`).raise();\r\n  }\r\n\r\n  const barMarginTop = 10;\r\n  const interBarMargin = 15;\r\n  const barHeight = 25;\r\n\r\n  const colorSeq = [primaryColor, secondaryColor];\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 100])\r\n    .range([marginLeft, svgWidth - marginRight]);\r\n\r\n  function drawBars() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const barData = [\r\n      { year: 2019, value: rawData.Result2019 },\r\n\r\n      { year: 2020, value: rawData.Result2020 },\r\n    ];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}bars`)\r\n      .data(barData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", marginLeft)\r\n      .attr(\"y\", (d, i) => i * interBarMargin)\r\n      .attr(\"height\", barHeight)\r\n      .attr(\"width\", (d) => xScale(d.value))\r\n      .attr(\"class\", `${mailClass}bars`)\r\n      .attr(\"fill\", (d, i) => colorSeq[i])\r\n      .attr(\"id\", (d) => `${mailClass}${d.year}`);\r\n\r\n    // const lineData = [{ value: rawData.Target }];\r\n    const lineData = [rawData.Target];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}target`)\r\n      // .data(barData)\r\n      .data(lineData)\r\n      .enter()\r\n      .append(\"line\")\r\n      // .attr(\"x1\", (d) => xScale(lineData.value))\r\n      .attr(\"x1\", (d) => xScale(d))\r\n      .attr(\"y1\", barMarginTop - barHeight)\r\n      // .attr(\"x2\", (d) => xScale(lineData.value))\r\n      .attr(\"x2\", (d) => xScale(d))\r\n      .attr(\"y2\", barMarginTop + barHeight + 10)\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", `${mailClass}target`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <svg id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraphSide;\r\n","import * as d3 from \"d3\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const GraphKey = (props) => {\r\n  const { bar2019, bar2020, level } = props;\r\n\r\n  // console.log(props);\r\n\r\n  // console.log(\"graphkey \", level, bar2019, bar2020);\r\n\r\n  const id2019 = `key2019${level}`;\r\n  const id2020 = `key2020${level}`;\r\n\r\n  d3.select(`#${id2019}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 1);\r\n    })\r\n    .on(\"click\", () => console.log(\"clicked\"));\r\n\r\n  d3.select(`#${id2020}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 1);\r\n    });\r\n\r\n  return (\r\n    <svg height={50}>\r\n      <rect\r\n        fill={primaryColor}\r\n        x={20}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2019}\r\n      ></rect>\r\n      <text x={39} y={30} fontFamily={textNodeFont}>\r\n        FY2019\r\n      </text>\r\n\r\n      <rect\r\n        fill={secondaryColor}\r\n        x={100}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2020}\r\n      ></rect>\r\n      <text x={120} y={30} fontFamily={textNodeFont}>\r\n        {\" \"}\r\n        FY2020\r\n      </text>\r\n      <line\r\n        x1={190}\r\n        y1={25}\r\n        x2={215}\r\n        y2={25}\r\n        strokeWidth={1}\r\n        stroke={highlightColor}\r\n        className=\"targetLines\"\r\n      />\r\n\r\n      <text x={220} y={30} fontFamily={textNodeFont}>\r\n        Target\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default GraphKey;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  svgWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  innerArea,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const AxisBottom = () => {\r\n  useEffect(() => {\r\n    drawAxis();\r\n  });\r\n\r\n  function drawAxis() {\r\n    const svg = d3.select(\"#barAxisSvg\");\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 100])\r\n      .range([marginLeft, svgWidth - marginRight]);\r\n    //   .range([10, 390]);\r\n\r\n    svg.append(\"g\").call(d3.axisBottom(xScale).ticks(5));\r\n\r\n    // .tickSize(-svgWidth).ticks(5);\r\n  }\r\n\r\n  return (\r\n    <svg id=\"barAxisSvg\" height={75} width={svgWidth}>\r\n      <text x={innerArea / 2} y={35} fontSize={11}>\r\n        On-Time(%)\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AxisBottom;\r\n","import BarGraphSide from \"../../DashComponents/BarGraphSide\";\r\nimport compositeData from \"../../Data/compositeData.json\";\r\nimport GraphKey from \"../../DashComponents/GraphKey\";\r\nimport AxisBottom from \"../../DashComponents/AxisBottom\";\r\n\r\nexport const MDCompositeContainer = () => {\r\n  const fcData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"First Class Composite\"\r\n  );\r\n\r\n  const mmData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"MM and Per Composite\"\r\n  );\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <h3>Composite Scores </h3>\r\n\r\n      <h5>First Class Letters and Flats</h5>\r\n\r\n      <BarGraphSide propData={fcData} />\r\n\r\n      <h5>Marketing Mail and Periodicals</h5>\r\n\r\n      <BarGraphSide propData={mmData} />\r\n\r\n      <AxisBottom />\r\n\r\n      <GraphKey level={\"MDLevel\"} bar2019={\".MM2019\"} bar2020={\".MM2020\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MDCompositeContainer;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  outterContainer: {\r\n    backgroundColor: \"#e6e8e6\",\r\n  },\r\n\r\n  titleText: {\r\n    fontSize: 20,\r\n    marginLeft: \"-75px\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"-0.5rem\",\r\n  },\r\n  volText: {\r\n    fontSize: 17,\r\n    marginBottom: \"2%\",\r\n  },\r\n  volNumber: {\r\n    fontSize: 18,\r\n    marginLeft: \"-75px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  changeIcon: {\r\n    marginTop: \"3%\",\r\n    marginLeft: \"-2px\",\r\n    marginRight: \"1px\",\r\n  },\r\n});\r\n\r\nexport const VolumeChange = (props) => {\r\n  const { propData } = props;\r\n\r\n  const volumeData = propData[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  const { FY2020, FY2019 } = volumeData;\r\n\r\n  const volumeTextNumber = formatVolumeNumber(volumeData.FY2020);\r\n\r\n  let volChangePct = (FY2020 - FY2019) / FY2019;\r\n\r\n  const volumeChangeText = formatVolumeChangeNumber(volChangePct);\r\n\r\n  function formatVolumeNumber(rawNumber) {\r\n    let trailingLetter = \"B\";\r\n    let divisor = 1000000000;\r\n\r\n    if (rawNumber / divisor < 1) {\r\n      trailingLetter = \"M\";\r\n      divisor = divisor / 1000;\r\n    }\r\n\r\n    const outputNumber = rawNumber / divisor;\r\n\r\n    let stringNum;\r\n    if (trailingLetter === \"M\") {\r\n      stringNum = outputNumber.toFixed(0);\r\n    }\r\n\r\n    if (trailingLetter === \"B\") {\r\n      stringNum = outputNumber.toFixed(1);\r\n    }\r\n\r\n    return `${stringNum}${trailingLetter}`;\r\n  }\r\n\r\n  function formatVolumeChangeNumber(rawChange) {\r\n    rawChange = (rawChange * 100).toFixed(1);\r\n    if (rawChange < 0) {\r\n      rawChange *= -1;\r\n    }\r\n    return `${rawChange.toString()}%`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom className={classes.titleText}>\r\n        Total Volume: {`${volumeTextNumber}`}\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" gutterBottom className={classes.volText}>\r\n        Annual change\r\n        <KeyboardArrowDownIcon\r\n          className={classes.changeIcon}\r\n          fontSize=\"small\"\r\n        />\r\n        {volumeChangeText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeChange;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport countData from \"../Data/toLevelProductCounts.json\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n    maxHeight: 400,\r\n    padding: \"4px 8px\",\r\n    // border: \"1px solid black\",\r\n    borderTop: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n    boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.2)\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTableMD = () => {\r\n  const classes = useStyles();\r\n\r\n  console.log(countData);\r\n\r\n  return (\r\n    <>\r\n      <h3>Product Count by Class</h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Mail Class</TableCell>\r\n              <TableCell align=\"right\">Total Products</TableCell>\r\n              <TableCell align=\"right\">Negative Change</TableCell>\r\n              <TableCell align=\"right\">Positive Change</TableCell>\r\n              <TableCell align=\"right\">Missing Data</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countData.map((row, ind) => (\r\n              <TableRow key={`row${ind}`}>\r\n                <TableCell component=\"th\" scope=\"row\" key={`row${ind}1`}>\r\n                  {row.mailClass}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}2`}>\r\n                  {row.totalProducts}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}3`}>\r\n                  {row.negativeChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}4`}>\r\n                  {row.positiveChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}5`}>\r\n                  {row.missing}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTableMD;\r\n","import { CSVLink } from \"react-csv\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    padding: \"-2rem\",\r\n    // width: \"350%\",\r\n    width: \"15rem\",\r\n    color: \"black\",\r\n    font: \"roboto\",\r\n  },\r\n  icon: {\r\n    transform: \"scale(1.5)\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  dataName: {\r\n    fontSize: \"11px\",\r\n    marginTop: \"-.8rem\",\r\n  },\r\n}));\r\n\r\nexport const DownloadButton = (props) => {\r\n  const { propData, dataName } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSVLink data={propData}>\r\n      <Button className={classes.button} variant=\"contained\">\r\n        <div>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={2}>\r\n              <TocIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <p> Download CSV</p>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <p className={classes.dataName}>{dataName}</p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Button>\r\n    </CSVLink>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PieGraph from \"../DashComponents/PieGraph\";\r\nimport topLevelPieData from \"../Data/topLevelPieData.json\";\r\nimport MDCompositeContainer from \"./allMarketDominantComponents/MDCompositeContainer\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport volumeData from \"../Data/volume.json\";\r\nimport ProductCountTableMD from \"../DashComponents/ProductCountTableMD\";\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\nimport annualDataFull from \"../Data/annualData.json\";\r\n\r\nimport { lightGrey } from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTopRow: {\r\n    paddingBottom: \"10%\",\r\n    minHeight: 450,\r\n    paddingTop: \"2%\",\r\n  },\r\n}));\r\n\r\nexport const AllMarketDominant = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const missesData = topLevelPieData.filter(\r\n    (row) => row.dataSet === \"missedTarget\"\r\n  );\r\n\r\n  const totalMDVol = volumeData.filter((row) => row.mailClass === \"MD\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid item xs={12} style={{ marginBottom: \"2%\", marginTop: \"1%\" }}>\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n            All Market Dominant Products\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={5}>\r\n            <Paper className={classes.paperTopRow}>\r\n              <PieGraph propData={missesData} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Paper\r\n              style={{ marginTop: \"-5%\" }}\r\n              className={classes.paperTopRow}\r\n              // style={{ paddingBottom: \"10%\", paddingTop: \"1%\" }}\r\n            >\r\n              <MDCompositeContainer />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <div id=\"gridSpacing\"></div>\r\n        </Grid>\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <div id=\"topEvents\">\r\n                <ProductCountTableMD />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{\r\n                backgroundColor: lightGrey,\r\n                paddingTop: \"-10%\",\r\n                marginTop: \"-60%\",\r\n              }}\r\n            >\r\n              <div id=\"topAnnualVolume\" style={{}}>\r\n                <VolumeChange propData={totalMDVol} />\r\n              </div>\r\n            </Paper>\r\n            <div style={{ marginTop: \"10%\" }}> </div>\r\n            {/* <Paper> */}\r\n            <DownloadButton\r\n              propData={annualDataFull}\r\n              dataName={\"Market Dominant Data\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMarketDominant;\r\n","export const FirstClass = () => {\r\n  return <div> im first class</div>;\r\n};\r\n\r\nexport default FirstClass;\r\n","import * as d3 from \"d3\";\r\n\r\nconst classGraphDims = {\r\n  graphHeight: 300,\r\n  graphWidth: 500,\r\n  barWidth: 20,\r\n  marginLeft: 40,\r\n  marginRight: 20,\r\n  marginBottom: 30,\r\n  marginTop: 20,\r\n  barMarginLeft: 40 + 20,\r\n};\r\n\r\nexport const {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  barMarginLeft,\r\n  marginTop,\r\n} = classGraphDims;\r\n\r\n// const {\r\n//   marginBottom,\r\n//   graphHeight,\r\n//   graphWidth,\r\n//   barWidth,\r\n//   interBarMargin,\r\n//   marginLeft,\r\n// } = classGraphDims;\r\n\r\nexport const yScale = d3.scaleLinear().domain([0, 100]).range([0, 250]);\r\nexport const yScaleRev = d3.scaleLinear().domain([0, 100]).range([250, 0]);\r\n\r\nexport default yScale;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"../../DashComponents/GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n  lightGrey,\r\n} from \"../../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../../Design/graphDimensions\";\r\n\r\nexport const MarketingMailClassGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    barFunctions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    barFunctions();\r\n  }, [data, propData]);\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = 850;\r\n\r\n  const svg = d3.select(\"#mmClassSvg\");\r\n\r\n  function barFunctions() {\r\n    removeBars();\r\n    if (data.length > 1) {\r\n      removeBars();\r\n      drawBars();\r\n    }\r\n  }\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const dataProducts = data.filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    const data2020 = dataProducts.filter((row) => row.fy === 2020);\r\n    const data2019 = dataProducts.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".productNameText\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + 75)\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d.productAbbrev)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"graphicElement nameBox nonBar\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`)\r\n      .on(\"mouseover\", function () {\r\n        const idCount = this.id;\r\n        const parentBox = `nameBox_${idCount}`;\r\n        d3.select(`#${parentBox}`).attr(\"fill\", lightGrey);\r\n      });\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \"graphicElement axisTicks nonBar\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 1);\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n\r\n    svg\r\n      .selectAll(\".bar2019\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElement bar2019\")\r\n      .attr(\"id\", (d) => `${d.pctOnTime}% on Time`);\r\n\r\n    svg\r\n      .selectAll(\".bar2020\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft - 7)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElement bar2020\")\r\n      .on(\"mouseover\", function (event) {\r\n        // const thisBar = d3.select(this)._groups[0][0].id;\r\n        // const thisBar = d3.select(this)._groups[0][0];\r\n        // const thisBar = d3.select(this);\r\n        // toolTipMotion(event);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", \"graphicElement targetLines nonBar\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"graphicElement\");\r\n  }\r\n\r\n  function removeBars() {\r\n    d3.selectAll(\".graphicElement\").remove();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 fontFamily={textNodeFont}>Marketing Mail Products</h3>\r\n      <svg\r\n        shapeRendering=\"crispEdges\"\r\n        id=\"mmClassSvg\"\r\n        height={300}\r\n        width={850}\r\n      ></svg>\r\n      <GraphKey\r\n        level={\"classLevel\"}\r\n        bar2019={\".bar2019\"}\r\n        bar2020={\".bar2020\"}\r\n      />\r\n      {/* <Tooltip toolTipData={toolTipData} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMailClassGraph;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  alternateHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles({\r\n  totalCountCountainer: {\r\n    backgroundColor: primaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  missedCountCountainer: {\r\n    backgroundColor: secondaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  decCountContainer: {\r\n    backgroundColor: alternateHighlight,\r\n    borderRadius: \"1%\",\r\n  },\r\n  tableText: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTable = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function createCellData(propData) {\r\n    let singleYear = propData\r\n      .filter((row) => row.fy === 2020)\r\n      .filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    let productCount = singleYear.length;\r\n\r\n    let decreasedCount = 0;\r\n    let missedTarget = 0;\r\n\r\n    for (let i = 0; i < singleYear.length; i++) {\r\n      const currentRow = singleYear[i];\r\n      if (currentRow.pctOnTime - currentRow.target < 0) {\r\n        missedTarget += 1;\r\n      }\r\n      if (decreasedThisYear(currentRow.productId)) {\r\n        decreasedCount += 1;\r\n      }\r\n    }\r\n\r\n    const rez = {\r\n      productCount: productCount,\r\n      missedTarget: missedTarget,\r\n      decreasedCount: decreasedCount,\r\n    };\r\n\r\n    return rez;\r\n  }\r\n\r\n  function decreasedThisYear(productId) {\r\n    const thisProduct = propData.filter((row) => row.productId === productId);\r\n\r\n    const thisYearScore = thisProduct.filter((row) => row.fy === 2020)[0]\r\n      .pctOnTime;\r\n    const lastYearScore = thisProduct.filter((row) => row.fy === 2019)[0]\r\n      .pctOnTime;\r\n\r\n    return thisYearScore < lastYearScore;\r\n  }\r\n\r\n  const cellData = createCellData(propData);\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.totalCountCountainer}>\r\n        <Typography className={classes.tableText}>\r\n          Total Product Count:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.productCount}\r\n        </Typography>\r\n      </Container>\r\n      <Container className={classes.missedCountCountainer}>\r\n        <Typography className={classes.tableText}>\r\n          Products that Missed Target:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.missedTarget}\r\n        </Typography>\r\n      </Container>\r\n      <Container className={classes.decCountContainer}>\r\n        <Typography className={classes.tableText}>\r\n          Products that Decreased in FY2020:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.decreasedCount}\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTable;\r\n","import { useRef } from \"react\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectDropdown: {\r\n    marginRight: \"5%\",\r\n\r\n    width: \"350px\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dropdownLabel: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport const ProductDropdown = (props) => {\r\n  const { propData, selectedProductId, changeProductSelected } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function nameFromId(selectedProductId) {\r\n    selectedProductId = parseInt(selectedProductId);\r\n\r\n    if (selectedProductId === 0) {\r\n      return \"none\";\r\n    } else {\r\n      return propData.filter((row) => row.productId === selectedProductId)[0]\r\n        .product;\r\n    }\r\n  }\r\n  const inputRef = useRef();\r\n\r\n  let productList = propData\r\n    .filter((row) => row.fy === 2020)\r\n    .filter((row) => !row.product.includes(\"Mixed\"));\r\n\r\n  productList.push({\r\n    class: \"Marketing Mail\",\r\n    fy: 2019,\r\n    product: \"none\",\r\n    productId: 0,\r\n  });\r\n\r\n  const menuItems = productList.map((el, ind) => (\r\n    <MenuItem\r\n      key={`dropdown${ind}`}\r\n      id={el.productId}\r\n      onClick={changeProductSelected}\r\n      value={el.product}\r\n      ref={inputRef}\r\n    >\r\n      {el.product}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography className={classes.dropdownLabel}>\r\n              View Product-Level Data:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Select\r\n              value={nameFromId(selectedProductId)}\r\n              className={classes.selectDropdown}\r\n            >\r\n              {menuItems}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDropdown;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nexport const MarketingMailClassGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [yHover, setYHover] = useState(0);\r\n\r\n  useEffect(allGraphFunctions, [data, propData]);\r\n\r\n  const tooltipWidth = 150;\r\n  const tooltipHeight = 50;\r\n\r\n  function allGraphFunctions() {\r\n    d3.selectAll(\".nonBarQuarter\").remove();\r\n\r\n    drawNonBarItems();\r\n\r\n    setData(propData);\r\n    drawBars();\r\n\r\n    transitionBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n    drawTooltip();\r\n    raiseTooltip();\r\n  }\r\n\r\n  function raiseTooltip() {\r\n    d3.select(\"#productTooltip\").raise();\r\n  }\r\n  function raiseBars() {\r\n    d3.selectAll(\".bar2019Quarter\").raise();\r\n    d3.selectAll(\".bar2020Quarter\").raise();\r\n  }\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(\".targetLines\").raise();\r\n  }\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = 850;\r\n\r\n  const svg = d3.select(\"#productSvg\");\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2019Quarter\")\r\n      .attr(\"id\", (d) => {\r\n        const target = d.target;\r\n        const score = d.pctOnTime;\r\n\r\n        let ptsFromTarget = target - score;\r\n\r\n        ptsFromTarget = ptsFromTarget.toFixed(1);\r\n\r\n        return `${ptsFromTarget} points from target`;\r\n      })\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime));\r\n\r\n    svg\r\n      .selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft - 7)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2020Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => {\r\n        const target = d.target;\r\n        const score = d.pctOnTime;\r\n\r\n        let ptsFromTarget = target - score;\r\n        ptsFromTarget = ptsFromTarget.toFixed(1);\r\n\r\n        return `${ptsFromTarget} points from target`;\r\n      });\r\n  }\r\n\r\n  function transitionBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    d3.selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime));\r\n\r\n    d3.selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime));\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", \"nonBarQuarter  graphicElementQuarter targetLines\");\r\n\r\n    // drawNonBarItems();\r\n  }\r\n\r\n  function drawNonBarItems() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n\r\n    const quarters = [\"Q1\", \"Q2\", \"Q3\", \"Q4 \"];\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter\");\r\n\r\n    svg\r\n      .selectAll(\".quarterText\")\r\n      .data(quarters)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + 75)\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter nameBox\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \" nonBarQuarter graphicElementQuarter axisTicks\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 0.5);\r\n\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n  }\r\n\r\n  function drawTooltip() {\r\n    const tooltipSelection = d3.select(\"#productTooltip\");\r\n\r\n    tooltipSelection.remove();\r\n\r\n    d3.select(\"#productTooltipText\").remove();\r\n\r\n    const svg = d3.select(\"#productSvg\");\r\n    svg\r\n      .append(\"rect\")\r\n      .attr(\"width\", tooltipWidth)\r\n      .attr(\"height\", tooltipHeight)\r\n      .attr(\"id\", \"productTooltip\")\r\n      .attr(\"fill\", \"#888a8c\")\r\n      .attr(\"rx\", 3)\r\n      .style(\"opacity\", 0);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"testing text\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"id\", \"productTooltipText\")\r\n      .style(\"font-size\", \"14px\")\r\n      .style(\"opacity\", 0);\r\n\r\n    tooltipSelection.raise();\r\n  }\r\n\r\n  const theseBars = d3.selectAll(\".bar2020Quarter, .bar2019Quarter\");\r\n\r\n  theseBars.on(\"mouseover\", function () {\r\n    let currentBarX = d3.select(this)._groups[0][0].x.animVal.value;\r\n    let currentBarY = d3.select(this)._groups[0][0].y.animVal.value;\r\n\r\n    let currentBarId = d3.select(this)._groups[0][0].id;\r\n\r\n    console.log(currentBarX);\r\n\r\n    let tooltipXDisplacement = 20;\r\n    const tooltipYDisplacement = 100;\r\n\r\n    if (currentBarX > 500) {\r\n      tooltipXDisplacement = -155;\r\n    }\r\n\r\n    currentBarY += tooltipYDisplacement;\r\n    currentBarX += tooltipXDisplacement;\r\n\r\n    const textMarginTop = 30;\r\n    const textMarginLeft = 5;\r\n\r\n    d3.select(\"#productTooltip\")\r\n      .attr(\"x\", currentBarX)\r\n      .attr(\"y\", currentBarY)\r\n      .transition()\r\n      .duration(300)\r\n      .style(\"opacity\", 0.95);\r\n\r\n    d3.select(\"#productTooltipText\")\r\n      .attr(\"x\", currentBarX + textMarginLeft)\r\n      .attr(\"y\", currentBarY + textMarginTop)\r\n      .transition()\r\n      .duration(300)\r\n      .style(\"opacity\", 0.95)\r\n      .text(currentBarId);\r\n\r\n    d3.select(\"#productTooltipText\").raise();\r\n  });\r\n\r\n  theseBars.on(\"mouseout\", function () {\r\n    d3.select(\"#productTooltip\").transition().duration(300).style(\"opacity\", 0);\r\n    d3.select(\"#productTooltipText\")\r\n      .transition()\r\n      .duration(300)\r\n      .style(\"opacity\", 0);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3 fontFamily={textNodeFont}>Product-Level Quarterly Data</h3>\r\n      <h4>{propData[0].product}</h4>\r\n      <svg\r\n        shapeRendering=\"crispEdges\"\r\n        id=\"productSvg\"\r\n        height={300}\r\n        width={850}\r\n      ></svg>\r\n      <GraphKey\r\n        level={\"productLevel\"}\r\n        bar2019={\".bar2019Quarter\"}\r\n        bar2020={\".bar2020Quarter\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMailClassGraph;\r\n","import * as d3 from \"d3\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerText: {\r\n    color: \"white\",\r\n    marginTop: \"-1%\",\r\n  },\r\n});\r\n\r\nexport const QuarterlyVolume = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(propData);\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [yHover, setYHover] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    drawLine();\r\n    drawDots(data2020);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    transitionLine();\r\n    transitionDots();\r\n  }, [data, propData]);\r\n\r\n  const currentProductName = data[0].product;\r\n\r\n  const margin = { top: 10, right: 5, bottom: 10, left: 20 };\r\n  const svgHeight = 200 - margin.top - margin.bottom;\r\n  const svgWdight = 350 - margin.right - margin.left;\r\n  const interDotX = 95;\r\n\r\n  const data2020 = propData.filter((row) => row.fy === 2020);\r\n  const volumes2020 = data2020.map((row) => row.volume);\r\n\r\n  const tooltipWidth = 130;\r\n  const tooltipHeight = 50;\r\n\r\n  var yScale = d3\r\n    .scaleLinear()\r\n    .domain([d3.min(volumes2020), d3.max(volumes2020)])\r\n    .range([svgHeight, 15]);\r\n\r\n  function createLine(dataSet) {\r\n    const aLine = d3\r\n      .line()\r\n      .x(function (d, i) {\r\n        return i * interDotX + margin.left;\r\n      })\r\n      .y(function (d, i) {\r\n        return yScale(d.volume);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    return aLine;\r\n  }\r\n\r\n  function transitionLine() {\r\n    const newLine = createLine(data2020);\r\n\r\n    d3.select(\"#volumeLine\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", newLine);\r\n  }\r\n\r\n  function drawLine() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    const line = createLine(data2020);\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", line)\r\n      .style(\"fill\", \"none\")\r\n      // .style(\"strokeWidth\", 9)\r\n      .style(\"stroke-width\", \"3px\")\r\n      // .style(\"stroke\", \"black\")\r\n      .style(\"stroke\", \"blue\")\r\n      .attr(\"id\", \"volumeLine\");\r\n  }\r\n\r\n  function transitionDots() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .on(\"mouseover\", function () {\r\n        let currentDotX = d3.select(this)._groups[0][0].cx;\r\n        let currentDotY = d3.select(this)._groups[0][0].cy;\r\n        let currentDotId = d3.select(this)._groups[0][0].id;\r\n\r\n        currentDotX = currentDotX.baseVal.value;\r\n        currentDotY = currentDotY.baseVal.value;\r\n\r\n        setXHover(currentDotX);\r\n        setYHover(currentDotY);\r\n\r\n        drawTooltip(currentDotX, currentDotY);\r\n\r\n        d3.select(\"#lineTooltip\")\r\n          .attr(\"x\", tooltipXPoz(currentDotX, currentDotId))\r\n          .attr(\"y\", tooltipYPoz(currentDotY, currentDotId))\r\n          .transition()\r\n          .duration(300)\r\n          .style(\"opacity\", 0.95);\r\n\r\n        d3.select(\"#tooltipText\")\r\n          .attr(\"x\", tooltipXPoz(currentDotX, currentDotId) + 10)\r\n          .attr(\"y\", tooltipYPoz(currentDotY, currentDotId) + 25)\r\n          .text(tooltipTextChange(currentDotId, data2020))\r\n          .transition()\r\n          .duration(300)\r\n          .style(\"opacity\", 1);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        d3.select(\"#lineTooltip\").remove();\r\n        d3.select(\"#lineTooltip\").style(\"opacity\", 0);\r\n        d3.select(\"#tooltipText\").remove();\r\n      })\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"cy\", (d) => yScale(d.volume));\r\n  }\r\n\r\n  function drawDots(data2020) {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (d, i) => i * interDotX + margin.left)\r\n      .attr(\"cy\", (d) => yScale(d.volume))\r\n      .attr(\"r\", 5)\r\n      .attr(\"id\", (d, i) => `Quarter${i + 1} dot`)\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"class\", \"dot\");\r\n  }\r\n\r\n  function drawTooltip(currentDotX, currentDotY) {\r\n    d3.select(\"#lineTooltip\").remove();\r\n\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n    svg\r\n      .append(\"rect\")\r\n      .attr(\"width\", tooltipWidth)\r\n      .attr(\"height\", tooltipHeight)\r\n      .attr(\"id\", \"lineTooltip\")\r\n      .attr(\"fill\", \"#888a8c\")\r\n      .attr(\"rx\", 3)\r\n      .style(\"opacity\", 0);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"testing text\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"id\", \"tooltipText\")\r\n      .style(\"font-size\", \"14px\")\r\n      .style(\"opacity\", 0);\r\n  }\r\n\r\n  function tooltipXPoz(currentDotX, currentDotId) {\r\n    const currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n\r\n    if (currentDotQuarter > 2) {\r\n      return currentDotX - tooltipWidth;\r\n    }\r\n\r\n    return currentDotX;\r\n  }\r\n\r\n  function tooltipYPoz(currentDotY, currentDotId) {\r\n    const currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n\r\n    if (currentDotQuarter > 2) {\r\n      return currentDotY - tooltipHeight;\r\n    }\r\n\r\n    return currentDotY;\r\n  }\r\n\r\n  function tooltipTextChange(currentDotId, dataIn) {\r\n    const currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n\r\n    const dataSorted = dataIn.sort((a, b) => a.quarter - b.quarter);\r\n\r\n    const currentRow = dataSorted[currentDotQuarter - 1];\r\n\r\n    const thisVol = currentRow.volume;\r\n\r\n    const volText = formatVolumeNumber(thisVol);\r\n\r\n    return `Q${currentDotQuarter} volume: ${volText}`;\r\n  }\r\n\r\n  function formatVolumeNumber(rawNumber) {\r\n    let trailingLetter = \"B\";\r\n    let divisor = 1000000000;\r\n\r\n    if (rawNumber / divisor < 1) {\r\n      trailingLetter = \"M\";\r\n      divisor = divisor / 1000;\r\n    }\r\n\r\n    const outputNumber = rawNumber / divisor;\r\n\r\n    let stringNum;\r\n    if (trailingLetter === \"M\") {\r\n      stringNum = outputNumber.toFixed(0);\r\n    }\r\n\r\n    if (trailingLetter === \"B\") {\r\n      stringNum = outputNumber.toFixed(2);\r\n    }\r\n\r\n    return `${stringNum}${trailingLetter}`;\r\n  }\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#225CF6\", paddingTop: \"1%\" }}>\r\n      <div style={{ marginTop: \"1%\" }}>\r\n        <p\r\n          className={classes.headerText}\r\n          style={{ fontSize: \"20px\", fontWeight: \"bold\" }}\r\n        >\r\n          FY 2020 Quarterly Volume\r\n        </p>\r\n        <p className={classes.headerText}> {currentProductName}</p>\r\n      </div>\r\n\r\n      <div style={{ backgroundColor: \"#caf3fa\" }}>\r\n        <svg height={200} width={325} id=\"qtrVolsvg\"></svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuarterlyVolume;\r\n","import data from \"../Data/quarterlyData.json\";\r\n\r\nimport ProductGraph from \"../DashComponents/ProductGraph\";\r\nimport QuarterlyVolume from \"../DashComponents/QuarterlyVolume\";\r\nimport { Grid, Paper, Divider } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nexport const ProductPage = (props) => {\r\n  const { selectedProductId } = props;\r\n\r\n  let productId = parseInt(selectedProductId);\r\n\r\n  const productData = data.filter((row) => row.productId === productId);\r\n\r\n  let renderedSection;\r\n\r\n  if (productId && productId !== 0) {\r\n    renderedSection = (\r\n      <ProductPageFull productId={productId} productData={productData} />\r\n    );\r\n  } else {\r\n    renderedSection = <EmptyProductPage />;\r\n  }\r\n\r\n  return <div>{renderedSection}</div>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullProductContainer: {\r\n    marginTop: \"3%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  quarterlyContainer: {\r\n    minWidth: 315,\r\n  },\r\n  productGraphContainer: {\r\n    minwidth: 700,\r\n  },\r\n}));\r\n\r\nconst ProductPageFull = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { productId, productData } = props;\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"2%\", marginBottom: \"20%\" }}>\r\n        <Divider />\r\n        <div style={{ marginTop: \"2%\" }}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={8}>\r\n              <div style={{ minWidth: 900 }}>\r\n                <Paper className={classes.productGraphContainer}>\r\n                  <ProductGraph propData={productData} />\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item lg={3} md={12}>\r\n              {\" \"}\r\n              <Paper className={classes.quarterlyContainer}>\r\n                <QuarterlyVolume propData={productData} />\r\n              </Paper>\r\n              <div style={{ marginTop: \"10%\" }}></div>\r\n              <DownloadButton\r\n                propData={productData}\r\n                dataName={\"Quarterly Data\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmptyProductPage = () => {\r\n  return <></>;\r\n};\r\n\r\nexport default ProductPage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../../Data/annualData.json\";\r\n\r\nimport MarketingMailClassGraph from \"./MarketingMailClassGraph\";\r\nimport ProductCountTableData from \"../../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"../ProductPage\";\r\n\r\nimport DownloadButton from \"../../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey } from \"../../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paperDropdown: {\r\n    minWidth: 850,\r\n    padding: theme.spacing(1),\r\n    marginTop: \"5%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n    // elevation: 0,\r\n  },\r\n  graphDiv: {\r\n    minWidth: 850,\r\n    maxWidth: 1000,\r\n    padding: \"1%\",\r\n  },\r\n}));\r\n\r\nexport const MarketingMail = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const mmAnnualData = annualData.filter(\r\n    (row) => row.class === \"Marketing Mail\"\r\n  );\r\n\r\n  let volDataMM = volData.filter((row) => row.mailClass === \"MM\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n              Marketing Mail Class-Level Data\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={9} xs={12}>\r\n          <Paper className={classes.graphDiv} elevation={3}>\r\n            <MarketingMailClassGraph propData={mmAnnualData} />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <Grid container direction=\"column\" spacing={3}>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}>\r\n                <div>\r\n                  {\" \"}\r\n                  <ProductCountTableData propData={mmAnnualData} />{\" \"}\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ backgroundColor: lightGrey }}\r\n              >\r\n                <VolumeChange propData={volDataMM} />\r\n              </Paper>\r\n              <div style={{ marginTop: \"30%\" }}></div>\r\n              <Paper>\r\n                <DownloadButton\r\n                  propData={mmAnnualData}\r\n                  dataName={\"Class-Level Data\"}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={mmAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMail;\r\n","export const SpecialServices = () => {\r\n  return <div> im SpecialServices</div>;\r\n};\r\n\r\nexport default SpecialServices;\r\n","export const PackageServices = (props) => {\r\n  return <div> Package Services </div>;\r\n};\r\n\r\nexport default PackageServices;\r\n","export const Periodicals = () => {\r\n  return <div> im Periodicals</div>;\r\n};\r\n\r\nexport default Periodicals;\r\n","import {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Drawer = (props) => {\r\n  const { history } = props;\r\n\r\n  const mailClassNames = [\r\n    {\r\n      text: \"First Class\",\r\n      onClick: () => history.push(\"/first-class\"),\r\n    },\r\n    {\r\n      text: \"Marketing Mail\",\r\n      onClick: () => history.push(\"/marketing-mail\"),\r\n    },\r\n    {\r\n      text: \"Periodicals\",\r\n      onClick: () => history.push(\"/periodicals\"),\r\n    },\r\n    {\r\n      text: \"Package Services\",\r\n      onClick: () => history.push(\"/package-services\"),\r\n    },\r\n    {\r\n      text: \"Special Services\",\r\n      onClick: () => history.push(\"/special-services\"),\r\n    },\r\n  ];\r\n\r\n  const homeName = [\r\n    {\r\n      text: \"All Market Dominant\",\r\n      onClick: () => history.push(\"/all-md\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <MUIDrawer variant=\"permanent\">\r\n      <List>\r\n        {homeName.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      <Divider />\r\n      <List>\r\n        {mailClassNames.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </MUIDrawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drawer);\r\n","import \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport myTheme from \"./Design/MyTheme\";\n\nimport { AllMarketDominant } from \"./mailClassComponents/AllMarketDominant\";\nimport { FirstClass } from \"./mailClassComponents/FirstClass\";\nimport { MarketingMail } from \"./mailClassComponents/MarketingMailComponents/MarketingMailClass\";\nimport { SpecialServices } from \"./mailClassComponents/SpecialServices\";\nimport { PackageServices } from \"./mailClassComponents/PackageServices\";\nimport { Periodicals } from \"./mailClassComponents/Periodicals\";\nimport { ProductPage } from \"./mailClassComponents/ProductPage\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Drawer from \"./Drawer\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Drawer />\n        <ThemeProvider theme={myTheme}>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                from=\"/all-md\"\n                render={(props) => <AllMarketDominant {...props} />}\n              />\n\n              <Route\n                exact\n                path=\"/first-class\"\n                render={(props) => <FirstClass {...props} />}\n              />\n              <Route\n                exact\n                path=\"/marketing-mail\"\n                render={(props) => <MarketingMail {...props} />}\n              />\n              <Route\n                exact\n                path=\"/periodicals\"\n                render={(props) => <Periodicals {...props} />}\n              />\n              <Route\n                exact\n                path=\"/package-services\"\n                render={(props) => <SpecialServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/special-services\"\n                render={(props) => <PackageServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/product\"\n                render={(props) => <ProductPage {...props} />}\n              />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}