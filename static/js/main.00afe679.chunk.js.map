{"version":3,"sources":["Design/MyTheme.js","DashComponents/PieGraphKey.jsx","DashComponents/PieGraph.jsx","Design/graphDimensionsSide.js","DashComponents/BarGraphSide.jsx","DashComponents/GraphKey.jsx","DashComponents/AxisBottom.jsx","mailClassComponents/allMarketDominantComponents/MDCompositeContainer.jsx","DashComponents/VolumeChange.jsx","DashComponents/ProductCountTableMD.jsx","DashComponents/DownloadButton.jsx","mailClassComponents/AllMarketDominant.jsx","Design/graphDimensions.js","DashComponents/TooltipTarget.jsx","DashComponents/TooltipService_ClassLevel.jsx","DashComponents/TooltipProductNames.jsx","DashComponents/ClassLevelGraph.jsx","DashComponents/ProductCountTable.jsx","DashComponents/ProductDropdown.jsx","DashComponents/TooltipService_ProductLevel.jsx","DashComponents/ProductGraph.jsx","Design/graphDimensionsLine.js","DashComponents/TooltipVolume.jsx","DashComponents/QuarterlyVolume.jsx","mailClassComponents/ProductPage.jsx","DashComponents/PRCLinks.jsx","mailClassComponents/FirstClass.jsx","mailClassComponents/MarketingMailClass.jsx","mailClassComponents/SpecialServices.jsx","mailClassComponents/PackageServices.jsx","mailClassComponents/Periodicals.jsx","mailClassComponents/HomePage.jsx","Drawer.jsx","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","secondaryColor","liteBlue","lightGrey","darkGrey","pinkHighlight","greenGrey","lineGraphTitleBlock","textNodeFont","myTheme","createTheme","palette","primary","main","breakpoints","values","xs","sm","md","lg","tooltipStyles","position","textAlign","font","background","useStyles_ClassPage","makeStyles","theme","root","flexGrow","paperDropdown","minWidth","maxHeight","padding","spacing","marginTop","paper","color","text","secondary","paperCountTable","graphDiv","width","height","graphDivFirstClass","classGraphContainer","maxWidth","PieGraphKey","props","colorObj","cellLocation","cell","style","paddingLeft","marginBottom","fill","x","y","id","gridStart","fontFamily","PieGraph","propData","useEffect","svg","d3","svgId","dataset","map","row","value","outerRadius","svgWidth","innerRadius","arc","pie","colorList","arcs","selectAll","data","enter","append","attr","d","i","centroid","drawPie","dataSet","paddingRight","svgHeight","marginLeft","marginRight","innerArea","BarGraphSide","barData","year","rawData","Result2019","Result2020","mailClass","barHeight","xScale","colorSeq","lineData","Target","barMarginTop","drawBars","raise","ProductNameAbbrev","split","domain","range","GraphKey","bar2019","bar2020","level","id2019","id2020","on","transition","duration","console","log","x1","y1","x2","y2","strokeWidth","stroke","className","AxisBottom","call","ticks","drawAxis","fontSize","MDCompositeContainer","fcData","compositeData","filter","mmData","useStyles","outterContainer","backgroundColor","titleText","fontWeight","volText","volNumber","changeIcon","VolumeChange","volumeData","classes","FY2020","FY2019","volumeTextNumber","rawNumber","trailingLetter","divisor","stringNum","outputNumber","toFixed","formatVolumeNumber","volumeChangeText","rawChange","toString","formatVolumeChangeNumber","Typography","variant","gutterBottom","table","borderTop","boxShadow","ProductCountTableMD","countData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","ind","scope","totalProducts","negativeChange","positiveChange","missing","button","icon","transform","dataName","DownloadButton","Button","Grid","container","direction","item","paperTopRow","paddingBottom","paddingTop","mdGraphContainer","titleBox","AllMarketDominant","pieData","annualDataTopLevel","annualDataFull","productAbbrev","data2020","fy","missedTargetCount","pointsFromTarget","length","exceededTargetCount","negativeChangeCount","positiveChangeCount","rowCountsDEL","currentProductId","productId","singleProduct","label","createTopLevelData","totalMDVol","alignItems","justifyContent","graphHeight","graphWidth","graphWidthProduct","productTextMarginLeft","targetMarginLeft","barWidth","barMarginLeft","yScale","yScaleRev","tooltipColor","TooltipTarget","isHoveringTarget","hoverTargetId","tooltipId","xHoverTarget","useState","tooltipText","setTooltipText","tooltipDiv","removeOnMouseOut","xHover","outputVal","tooltipXPoz","class","isProductLevelGraph","includes","tooltipYPoz","hoveredTargetValue","hoveredProductId","parseInt","hoveredProductTargetRow","target","tooltipTextChange","tooltipStyles_Target","borderLeft","borderRight","TooltipService_ClassLevel","hoverId","isHovering","hoverHeight","calcPointsFromTargetAnnual","assignColor","idList","yearVal","hoveredRow","TooltipProductNames","isHoveringProductText","hoverTextId","xHoverText","yPush","fullProductName","hoverProductId","isFirstClass","product","deliverySpeed","tooltipStyles_ProductText","ClassLevelGraph","setData","setXHover","setHoverId","setIsHovering","setHoverHeight","setIsHoveringTarget","setHoverTargetId","setXHoverTarget","setIsHoveringProductText","setHoverTextId","setXhoverText","barFunctions","rotateProductNames","extraBarMargin","FirstClass","MarketingMail","Periodicals","SpecialServices","PackageServices","replace","topStart","removeBars","dataProducts","data2019","interBarMargin","graphData","barCount","getInterBarMargin","barXPoz","rotationDeg","currentTextSelection","currentTextId","_groups","baseVal","matrix","e","mouseOverTriggersProductText","this","tickSize","remove","pctOnTime","mouseOverTriggers","mouseOutTriggers","currentTargetSelection","currentTargetId","currentTargetX","mouseOverTriggersTarget","currentBarSelection","currentBarId","currentBarX","currentBarHeight","shapeRendering","totalCountCountainer","borderRadius","missedCountCountainer","decCountContainer","tableText","tableTextNumber","ProductCountBar","totalProductCount","thisCount","dataType","setBarData","drawBar","barId","otherBarId","svgSelection","countPercentage","countPercentageDiff","fakeData","ProductCountTable","decreasedThisYear","thisProduct","cellData","singleYear","productCount","decreasedCount","missedTarget","currentRow","createCellData","Container","disableGutters","selectDropdown","formControl","margin","selectEmpty","dropdownLabel","ProductDropdown","selectedProductId","changeProductSelected","inputRef","useRef","productList","returnFullProductName","element","productName","subProductName","push","menuItems","el","MenuItem","onClick","ref","FormControl","Select","getNameFromId","TooltipService_ProductLevel","calcPointsFromTargetQuarterly","quarterVal","quarter","ProductGraph","quarters","drawNonBarItems","mouseOutTriggersTarget","transitionBars","theseBars","firstRow","outsideObjMargin","top","right","bottom","left","lineDims","svgHeightFull","interDotX","TooltipVolume","yHover","currentDotQuarter","match","tooltipWidth","tooltipHeight","textMarginTop","currentDotId","dataIn","sort","a","b","volume","headerText","QuarterlyVolume","setYHover","line","createLine","datum","drawLine","drawDots","newLine","transitionLine","rectSequence","currentDotSelection","currentDotX","cx","currentDotY","cy","transitionDots","currentProductName","volumes2020","curve","ProductPage","renderedSection","productData","dynamicMarginBottom","fullProductContainer","quarterlyContainer","productGraphContainer","minwidth","ProductPageFull","Divider","elevation","EmptyProductPage","PRCLinks","Link","href","async","src","charset","setSelectedProductId","fcAnnualData","annualData","volDataFC","volData","float","mmAnnualData","volDataMM","justify","ssAnnualData","volDataSS","psAnnualData","volDataPS","perAnnualData","volDataPER","HomePage","envelopeXStart","envelopeWidth","withRouter","history","mailClassNames","homeName","List","index","ListItem","ListItemText","App","ThemeProvider","exact","from","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00afe679.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const colorPalleteMatt = {\r\n  primaryColor: \"#225CF6\",\r\n  secondaryColor: \"#88b7d7\", //new\r\n  liteBlue: \"#108FE0\",\r\n  highlightColor: \"#E08D20\",\r\n  lightGrey: \"#e6e8e6\",\r\n  darkGrey: \"#abb8b3\",\r\n  greenGrey: \"#69cfa9\",\r\n  pinkHighlight: \"#f45273\",\r\n  alternateHighlight: \"#1ED4C7\",\r\n  alternateSecondary: \"#1E7FD4\",\r\n  lineGraphTitleBlock: \"#caf3fa\",\r\n};\r\n\r\nexport const {\r\n  primaryColor,\r\n  secondaryColor,\r\n  liteBlue,\r\n  highlightColor,\r\n  lightGrey,\r\n  darkGrey,\r\n  pinkHighlight,\r\n  greenGrey,\r\n  alternateHighlight,\r\n  alternateSecondary,\r\n  lineGraphTitleBlock,\r\n} = colorPalleteMatt;\r\n\r\nexport const lightGreyAgain = \"#e6e8e6\";\r\n\r\nexport const textNodeFont = \"'Roboto', sans-serif\";\r\n\r\nconst myTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 450,\r\n      md: 1223,\r\n      lg: 1550,\r\n    },\r\n  },\r\n});\r\n\r\nexport const tooltipStyles = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  background: \"lightsteelblue\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n};\r\n\r\nexport const useStyles_ClassPage = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paperDropdown: {\r\n    minWidth: 850,\r\n    maxHeight: 50,\r\n    padding: theme.spacing(1),\r\n    marginTop: \"1%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n  },\r\n  paperCountTable: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n  },\r\n  graphDiv: {\r\n    width: 850,\r\n    padding: \"1%\",\r\n    height: 450,\r\n  },\r\n  graphDivFirstClass: {\r\n    width: 850,\r\n    padding: \"1%\",\r\n    height: 500,\r\n  },\r\n  classGraphContainer: {\r\n    maxWidth: 900,\r\n  },\r\n}));\r\n\r\nexport default myTheme;\r\n","import { textNodeFont } from \"../Design/MyTheme\";\r\n\r\nconst PieGraphKey = (props) => {\r\n  const { colorObj } = props;\r\n\r\n  // const { primaryColor, highlightColor, lightGrey } = colorObj;\r\n\r\n  const { pinkHighlight, greenGrey } = colorObj;\r\n\r\n  const gridMargin = 20;\r\n  const gridStart = 20;\r\n\r\n  function cellLocation(cell) {\r\n    return gridMargin * cell;\r\n  }\r\n  const textMargin = 12;\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"25%\", marginBottom: \"10%\" }}>\r\n      <svg height={100}>\r\n        <rect\r\n          fill={pinkHighlight}\r\n          x={gridStart}\r\n          y={gridStart}\r\n          width={15}\r\n          height={15}\r\n          id=\"keyMissed\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={gridStart + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Missed Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={greenGrey}\r\n          x={gridStart}\r\n          y={cellLocation(2)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(2) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Exceeded Target\r\n        </text>\r\n\r\n        {/* <rect\r\n          fill={lightGrey}\r\n          x={gridStart}\r\n          y={cellLocation(3)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(3) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products with no Data\r\n        </text> */}\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieGraphKey;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport PieGraphKey from \"./PieGraphKey\";\r\n\r\nimport {\r\n  lightGrey,\r\n  liteBlue,\r\n  pinkHighlight,\r\n  greenGrey,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const PieGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawPie();\r\n  });\r\n\r\n  const dataSet = propData[0].dataSet;\r\n\r\n  const svgId = `${dataSet}svg`;\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  const svgHeight = 300;\r\n  const svgWidth = 300;\r\n\r\n  function drawPie() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const dataset = propData.map((row) => row.value);\r\n\r\n    const outerRadius = svgWidth / 2;\r\n    const innerRadius = svgWidth / 3;\r\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\r\n\r\n    const pie = d3.pie();\r\n\r\n    const colorList = [pinkHighlight, greenGrey];\r\n\r\n    //Set up groups\r\n    const arcs = svg\r\n      .selectAll(\"g.arc\")\r\n      .data(pie(dataset))\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"arc\")\r\n      .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\r\n\r\n    //Draw arc paths\r\n    arcs\r\n      .append(\"path\")\r\n      .attr(\"fill\", function (d, i) {\r\n        return colorList[i];\r\n      })\r\n      .attr(\"d\", arc);\r\n\r\n    //Labels\r\n    arcs\r\n      .append(\"text\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n      })\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function (d) {\r\n        return d.value;\r\n      });\r\n  }\r\n  const colorObj = {\r\n    pinkHighlight: pinkHighlight,\r\n    greenGrey: greenGrey,\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ paddingRight: \"28%\" }}>\r\n        <h3 style={{ marginBottom: \"1rem\", marginTop: \"5%\" }}>\r\n          FY2020 Mail Product Count\r\n        </h3>\r\n        <svg width={svgWidth} height={svgHeight} id={svgId}></svg>\r\n        <PieGraphKey colorObj={colorObj} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PieGraph;\r\n","const sideGraphDims = {\r\n  svgWidth: 400,\r\n  svgHeight: 50,\r\n  marginLeft: 10,\r\n  marginRight: 10,\r\n  innerArea: 380,\r\n};\r\n\r\nexport const { svgWidth, svgHeight, marginLeft, marginRight, innerArea } =\r\n  sideGraphDims;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  svgWidth,\r\n  svgHeight,\r\n  marginLeft,\r\n  marginRight,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const BarGraphSide = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  let rawData = propData[0];\r\n\r\n  let mailClass = rawData.ProductNameAbbrev.split(\" \")[0];\r\n\r\n  if (mailClass === \"First\") {\r\n    mailClass = \"FC\";\r\n  }\r\n\r\n  const svgId = `barSide${mailClass}svg`;\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(`.${mailClass}target`).raise();\r\n  }\r\n\r\n  const barMarginTop = 10;\r\n  const interBarMargin = 15;\r\n  const barHeight = 25;\r\n\r\n  const colorSeq = [secondaryColor, primaryColor];\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 100])\r\n    .range([marginLeft, svgWidth - marginRight]);\r\n\r\n  function drawBars() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const barData = [\r\n      { year: 2019, value: rawData.Result2019 },\r\n\r\n      { year: 2020, value: rawData.Result2020 },\r\n    ];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}bars`)\r\n      .data(barData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", marginLeft)\r\n      .attr(\"y\", (d, i) => i * interBarMargin)\r\n      .attr(\"height\", barHeight)\r\n      .attr(\"width\", (d) => xScale(d.value))\r\n      .attr(\"class\", `${mailClass}bars`)\r\n      .attr(\"fill\", (d, i) => colorSeq[i])\r\n      .attr(\"id\", (d) => `${mailClass}${d.year}`);\r\n\r\n    // const lineData = [{ value: rawData.Target }];\r\n    const lineData = [rawData.Target];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}target`)\r\n      // .data(barData)\r\n      .data(lineData)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) => xScale(d))\r\n      .attr(\"y1\", barMarginTop - barHeight)\r\n      .attr(\"x2\", (d) => xScale(d))\r\n      .attr(\"y2\", barMarginTop + barHeight + 10)\r\n      // .style(\"stroke\", highlightColor)\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", `${mailClass}target`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <svg id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraphSide;\r\n","import * as d3 from \"d3\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const GraphKey = (props) => {\r\n  const { bar2019, bar2020, level } = props;\r\n\r\n  const id2019 = `key2019${level}`;\r\n  const id2020 = `key2020${level}`;\r\n\r\n  d3.select(`#${id2019}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 1);\r\n    })\r\n    .on(\"click\", () => console.log(\"clicked\"));\r\n\r\n  d3.select(`#${id2020}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 1);\r\n    });\r\n\r\n  return (\r\n    <svg height={35}>\r\n      <rect\r\n        fill={secondaryColor}\r\n        x={20}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2019}\r\n      ></rect>\r\n      <text x={39} y={30} fontFamily={textNodeFont}>\r\n        FY2019\r\n      </text>\r\n\r\n      <rect\r\n        fill={primaryColor}\r\n        x={100}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2020}\r\n      ></rect>\r\n      <text x={120} y={30} fontFamily={textNodeFont}>\r\n        {\" \"}\r\n        FY2020\r\n      </text>\r\n      <line\r\n        x1={190}\r\n        y1={25}\r\n        x2={215}\r\n        y2={25}\r\n        strokeWidth={2}\r\n        // stroke={highlightColor}\r\n        stroke={pinkHighlight}\r\n        className=\"targetLines\"\r\n      />\r\n\r\n      <text x={220} y={30} fontFamily={textNodeFont}>\r\n        Target\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default GraphKey;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  svgWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  innerArea,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const AxisBottom = () => {\r\n  useEffect(() => {\r\n    drawAxis();\r\n  });\r\n\r\n  function drawAxis() {\r\n    const svg = d3.select(\"#barAxisSvg\");\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 100])\r\n      .range([marginLeft, svgWidth - marginRight]);\r\n    //   .range([10, 390]);\r\n\r\n    svg.append(\"g\").call(d3.axisBottom(xScale).ticks(5));\r\n\r\n    // .tickSize(-svgWidth).ticks(5);\r\n  }\r\n\r\n  return (\r\n    <svg id=\"barAxisSvg\" height={75} width={svgWidth}>\r\n      <text x={innerArea / 2} y={35} fontSize={11}>\r\n        On-Time(%)\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AxisBottom;\r\n","import BarGraphSide from \"../../DashComponents/BarGraphSide\";\r\nimport compositeData from \"../../Data/compositeData.json\";\r\nimport GraphKey from \"../../DashComponents/GraphKey\";\r\nimport AxisBottom from \"../../DashComponents/AxisBottom\";\r\n\r\nexport const MDCompositeContainer = () => {\r\n  const fcData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"First Class Composite\"\r\n  );\r\n\r\n  const mmData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"MM and Per Composite\"\r\n  );\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <h3>Composite Scores </h3>\r\n\r\n      <h5>First Class Letters and Flats</h5>\r\n\r\n      <BarGraphSide propData={fcData} />\r\n\r\n      <h5>Marketing Mail and Periodicals</h5>\r\n\r\n      <BarGraphSide propData={mmData} />\r\n\r\n      <AxisBottom />\r\n\r\n      <GraphKey level={\"MDLevel\"} bar2019={\".MM2019\"} bar2020={\".MM2020\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MDCompositeContainer;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  outterContainer: {\r\n    backgroundColor: \"#e6e8e6\",\r\n  },\r\n\r\n  titleText: {\r\n    fontSize: 20,\r\n    marginLeft: \"-75px\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"-0.5rem\",\r\n  },\r\n  volText: {\r\n    fontSize: 17,\r\n    marginBottom: \"2%\",\r\n  },\r\n  volNumber: {\r\n    fontSize: 18,\r\n    marginLeft: \"-75px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  changeIcon: {\r\n    marginTop: \"3%\",\r\n    marginLeft: \"-2px\",\r\n    marginRight: \"1px\",\r\n  },\r\n});\r\n\r\nexport const VolumeChange = (props) => {\r\n  const { propData } = props;\r\n\r\n  const volumeData = propData[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  const { FY2020, FY2019 } = volumeData;\r\n\r\n  const volumeTextNumber = formatVolumeNumber(volumeData.FY2020);\r\n\r\n  let volChangePct = (FY2020 - FY2019) / FY2019;\r\n\r\n  const volumeChangeText = formatVolumeChangeNumber(volChangePct);\r\n\r\n  const arrowIcon =\r\n    FY2020 < FY2019 ? (\r\n      <KeyboardArrowDownIcon className={classes.changeIcon} fontSize=\"small\" />\r\n    ) : (\r\n      <KeyboardArrowUpIcon className={classes.changeIcon} fontSize=\"small\" />\r\n    );\r\n\r\n  function formatVolumeNumber(rawNumber) {\r\n    let trailingLetter = \"B\";\r\n    let divisor = 1000000000;\r\n\r\n    if (rawNumber / divisor < 1) {\r\n      trailingLetter = \"M\";\r\n      divisor = divisor / 1000;\r\n    }\r\n\r\n    const outputNumber = rawNumber / divisor;\r\n\r\n    let stringNum;\r\n    if (trailingLetter === \"M\") {\r\n      stringNum = outputNumber.toFixed(0);\r\n    }\r\n\r\n    if (trailingLetter === \"B\") {\r\n      stringNum = outputNumber.toFixed(1);\r\n    }\r\n\r\n    return `${stringNum}${trailingLetter}`;\r\n  }\r\n\r\n  function formatVolumeChangeNumber(rawChange) {\r\n    rawChange = (rawChange * 100).toFixed(1);\r\n    if (rawChange < 0) {\r\n      rawChange *= -1;\r\n    }\r\n    return `${rawChange.toString()}%`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom className={classes.titleText}>\r\n        Total Volume: {`${volumeTextNumber}`}\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" gutterBottom className={classes.volText}>\r\n        Annual change\r\n        <KeyboardArrowDownIcon\r\n          className={classes.changeIcon}\r\n          fontSize=\"small\"\r\n        />\r\n        {volumeChangeText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeChange;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport countData from \"../Data/toLevelProductCounts.json\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n    maxHeight: 400,\r\n    padding: \"4px 8px\",\r\n    borderTop: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n    boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.2)\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTableMD = () => {\r\n  const classes = useStyles();\r\n\r\n  console.log(countData);\r\n\r\n  return (\r\n    <>\r\n      <h3>Product Count by Class</h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Mail Class</TableCell>\r\n              <TableCell align=\"right\">Total Products</TableCell>\r\n              <TableCell align=\"right\">Negative Change</TableCell>\r\n              <TableCell align=\"right\">Positive Change</TableCell>\r\n              <TableCell align=\"right\">Missing Data</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countData.map((row, ind) => (\r\n              <TableRow key={`row${ind}`}>\r\n                <TableCell component=\"th\" scope=\"row\" key={`row${ind}1`}>\r\n                  {row.mailClass}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}2`}>\r\n                  {row.totalProducts}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}3`}>\r\n                  {row.negativeChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}4`}>\r\n                  {row.positiveChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}5`}>\r\n                  {row.missing}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTableMD;\r\n","import { CSVLink } from \"react-csv\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    padding: \"-2rem\",\r\n    // width: \"350%\",\r\n    width: \"15rem\",\r\n    color: \"black\",\r\n    font: \"roboto\",\r\n  },\r\n  icon: {\r\n    transform: \"scale(1.5)\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  dataName: {\r\n    fontSize: \"11px\",\r\n    marginTop: \"-.8rem\",\r\n  },\r\n}));\r\n\r\nexport const DownloadButton = (props) => {\r\n  const { propData, dataName } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSVLink data={propData}>\r\n      <Button className={classes.button} variant=\"contained\">\r\n        <div>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={2}>\r\n              <TocIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <p> Download CSV</p>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <p className={classes.dataName}>{dataName}</p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Button>\r\n    </CSVLink>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PieGraph from \"../DashComponents/PieGraph\";\r\nimport MDCompositeContainer from \"./allMarketDominantComponents/MDCompositeContainer\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport volumeData from \"../Data/volume.json\";\r\nimport ProductCountTableMD from \"../DashComponents/ProductCountTableMD\";\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\nimport annualDataFull from \"../Data/annualData.json\";\r\n\r\nimport { lightGrey } from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTopRow: {\r\n    paddingBottom: \"10%\",\r\n    height: 400,\r\n    paddingTop: \"2%\",\r\n  },\r\n  mdGraphContainer: {\r\n    maxWidth: 600,\r\n    height: 500,\r\n    marginTop: \"2%\",\r\n  },\r\n  titleBox: {\r\n    marginTop: \"1%\",\r\n  },\r\n}));\r\n\r\nexport const AllMarketDominant = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const topLevelData = createTopLevelData();\r\n\r\n  const pieData = topLevelData.filter((row) => row.dataSet === \"missedTarget\");\r\n\r\n  const totalMDVol = volumeData.filter((row) => row.mailClass === \"MD\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid item xs={12} className={classes.titleBox}>\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n            All Market Dominant Products\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            className={classes.mdGraphContainer}\r\n            style={{ marginLeft: \"4%\" }}\r\n          >\r\n            <Paper className={classes.paperTopRow}>\r\n              <PieGraph propData={pieData} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5} className={classes.mdGraphContainer}>\r\n            <Paper className={classes.paperTopRow}>\r\n              <MDCompositeContainer />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <div id=\"gridSpacing\"></div>\r\n        </Grid>\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <div id=\"topEvents\">\r\n                <ProductCountTableMD />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{\r\n                backgroundColor: lightGrey,\r\n                paddingTop: \"-10%\",\r\n                marginTop: \"-60%\",\r\n              }}\r\n            >\r\n              <div id=\"topAnnualVolume\" style={{}}>\r\n                <VolumeChange propData={totalMDVol} />\r\n              </div>\r\n            </Paper>\r\n            <div style={{ marginTop: \"10%\" }}> </div>\r\n            <DownloadButton\r\n              propData={annualDataFull}\r\n              dataName={\"Market Dominant Data\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction createTopLevelData() {\r\n  const annualDataTopLevel = annualDataFull.filter(\r\n    (row) => row.productAbbrev !== \"missing\"\r\n  );\r\n\r\n  const data2020 = annualDataTopLevel.filter((row) => row.fy === 2020);\r\n\r\n  const missedTargetCount = data2020.filter(\r\n    (row) => row.pointsFromTarget > 0\r\n  ).length;\r\n\r\n  const exceededTargetCount = data2020.filter(\r\n    (row) => row.pointsFromTarget < 0\r\n  ).length;\r\n\r\n  let negativeChangeCount = 0;\r\n  let positiveChangeCount = 0;\r\n  let rowCountsDEL = 0;\r\n\r\n  for (let i = 0; i < data2020.length; i++) {\r\n    rowCountsDEL++;\r\n\r\n    const currentProductId = data2020[i].productId;\r\n    const singleProduct = annualDataTopLevel.filter(\r\n      (row) => row.productId === currentProductId\r\n    );\r\n    const latestYearScore = singleProduct.filter((row) => row.fy === 2020)[0]\r\n      .pointsFromTarget;\r\n    const prevYearScore = singleProduct.filter((row) => row.fy === 2019)[0]\r\n      .pointsFromTarget;\r\n\r\n    if (latestYearScore > prevYearScore) {\r\n      positiveChangeCount += 1;\r\n    } else {\r\n      negativeChangeCount += 1;\r\n    }\r\n  }\r\n\r\n  const topLevelDataRez = [\r\n    {\r\n      dataSet: \"missedTarget\",\r\n      label: \"missed target\",\r\n      value: missedTargetCount,\r\n    },\r\n    {\r\n      dataSet: \"missedTarget\",\r\n      label: \"exceeded target\",\r\n      value: exceededTargetCount,\r\n    },\r\n    {\r\n      dataSet: \"changeCount\",\r\n      label: \"negative change\",\r\n      value: negativeChangeCount,\r\n    },\r\n    {\r\n      dataSet: \"changeCount\",\r\n      label: \"positive change\",\r\n      value: positiveChangeCount,\r\n    },\r\n  ];\r\n\r\n  return topLevelDataRez;\r\n}\r\n\r\nexport default AllMarketDominant;\r\n","import * as d3 from \"d3\";\r\n\r\nconst classGraphDims = {\r\n  graphHeight: 300,\r\n  graphWidth: 820,\r\n  graphWidthProduct: 750,\r\n  productTextMarginLeft: 25,\r\n  targetMarginLeft: 11,\r\n  barWidth: 20,\r\n  marginLeft: 45,\r\n  marginRight: 40,\r\n  marginBottom: 30,\r\n  marginTop: 20,\r\n  barMarginLeft: 40 + 20,\r\n};\r\n\r\nexport const {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  graphWidthProduct,\r\n  productTextMarginLeft,\r\n  targetMarginLeft,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  barMarginLeft,\r\n  marginTop,\r\n} = classGraphDims;\r\n\r\nexport const yScale = d3.scaleLinear().domain([0, 100]).range([0, 250]);\r\nexport const yScaleRev = d3.scaleLinear().domain([0, 100]).range([250, 0]);\r\n\r\nexport default yScale;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { darkGrey } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 15;\r\nconst textMarginTop = 10;\r\nconst tooltipColor = darkGrey;\r\n\r\nexport const TooltipTarget = (props) => {\r\n  const { propData, isHoveringTarget, hoverTargetId, tooltipId, xHoverTarget } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHoveringTarget, tooltipId);\r\n    tooltipXPoz(xHoverTarget, tooltipId);\r\n    tooltipYPoz(tooltipId, propData);\r\n    setTooltipText(tooltipTextChange(hoverTargetId, propData));\r\n  }, [isHoveringTarget]);\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor);\r\n\r\n  return (\r\n    <div id={tooltipId} style={tooltipStyles_Target}>\r\n      <span style={{}}>{tooltipText}</span>\r\n      <div\r\n        style={{\r\n          width: \"0\",\r\n          height: \"0\",\r\n          borderLeft: \"15px solid transparent\",\r\n          borderRight: \"15px solid transparent\",\r\n          borderTop: `20px solid ${darkGrey}`,\r\n          marginLeft: `50px`,\r\n        }}\r\n        class=\"arrow-down\"\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction tooltipTextChange(hoverTargetId, propData) {\r\n  const hoveredProductId = parseInt(hoverTargetId.split(\"_\")[1]);\r\n\r\n  const hoveredProductTargetRow = propData\r\n    .filter((row) => row.productId === hoveredProductId)\r\n    .filter((row) => row.fy === 2020)[0];\r\n\r\n  let hoveredTargetValue;\r\n\r\n  if (hoveredProductTargetRow) {\r\n    hoveredTargetValue = hoveredProductTargetRow.target;\r\n    hoveredTargetValue = hoveredTargetValue.toFixed(2);\r\n  }\r\n\r\n  const tooltipTextFinal = `Target: ${hoveredTargetValue}`;\r\n\r\n  return tooltipTextFinal;\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = -50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(tooltipId, propData) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const mailClass = propData[0].class;\r\n\r\n  const isProductLevelGraph = tooltipId.includes(\"Product\");\r\n\r\n  let outputVal = -450;\r\n\r\n  if (isProductLevelGraph) {\r\n    outputVal += 25;\r\n  }\r\n\r\n  if (mailClass === \"First Class Mail\") {\r\n    outputVal -= 25;\r\n  }\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction removeOnMouseOut(isHoveringTarget, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHoveringTarget) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nexport const tooltipStyles_Target = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n  color: \"black\",\r\n  opacity: 0,\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ClassLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = 50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetAnnual(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[1]);\r\n  const yearVal = parseInt(idList[2]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n      pointsFromTarget = hoveredRow.pointsFromTarget;\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\nexport default TooltipService_ClassLevel;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { darkGrey } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 25;\r\nconst textMarginTop = 10;\r\nconst tooltipColor = darkGrey;\r\nconst tooltipId = \"tooltipProductName\";\r\n\r\nexport const TooltipProductNames = (props) => {\r\n  const { propData, isHoveringProductText, hoverTextId, xHoverText } = props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHoveringProductText);\r\n    tooltipXPoz(xHoverText);\r\n    setTooltipText(tooltipTextChange(hoverTextId, propData));\r\n  }, [isHoveringProductText]);\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"background-color\", tooltipColor);\r\n\r\n  return (\r\n    <div id=\"tooltipProductName\" style={tooltipStyles_ProductText}>\r\n      <span style={{}}>{tooltipText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction tooltipTextChange(hoverTextId, propData) {\r\n  const hoverProductId = parseInt(hoverTextId.split(\"_\")[1]);\r\n\r\n  const hoveredRow = propData\r\n    .filter((row) => row.productId === hoverProductId)\r\n    .filter((row) => row.fy === 2020)[0];\r\n\r\n  let isFirstClass = false;\r\n\r\n  let fullProductName;\r\n\r\n  if (hoveredRow) {\r\n    if (hoveredRow.class === \"First Class Mail\") {\r\n      isFirstClass = true;\r\n    }\r\n\r\n    fullProductName = hoveredRow.product;\r\n    if (isFirstClass) {\r\n      fullProductName += ` (${hoveredRow.deliverySpeed})`;\r\n    }\r\n  }\r\n\r\n  return fullProductName;\r\n}\r\n\r\nfunction tooltipXPoz(xHoverText) {\r\n  const tooltipDiv = d3.select(`#tooltipProductName`);\r\n\r\n  let outputVal;\r\n  const xPush = -50;\r\n\r\n  outputVal = xHoverText + xPush;\r\n\r\n  const yPush = -150;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`).style(\"top\", `${yPush}px`);\r\n}\r\n\r\nfunction removeOnMouseOut(isHoveringProductText) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHoveringProductText) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nexport default TooltipProductNames;\r\n\r\nconst tooltipStyles_ProductText = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  padding: \"3px\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n  color: \"black\",\r\n  opacity: 0,\r\n};\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n  pinkHighlight,\r\n  lightGrey,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  targetMarginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipTarget } from \"./TooltipTarget\";\r\n\r\nimport { TooltipService_ClassLevel } from \"./TooltipService_ClassLevel\";\r\nimport { TooltipProductNames } from \"./TooltipProductNames\";\r\n\r\nexport const ClassLevelGraph = (props) => {\r\n  const { propData, mailClass } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  const [isHoveringTarget, setIsHoveringTarget] = useState(false);\r\n  const [hoverTargetId, setHoverTargetId] = useState(\"\");\r\n  const [xHoverTarget, setXHoverTarget] = useState(0);\r\n\r\n  const [isHoveringProductText, setIsHoveringProductText] = useState(false);\r\n  const [hoverTextId, setHoverTextId] = useState(\"\");\r\n  const [xHoverText, setXhoverText] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    barFunctions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    barFunctions();\r\n  }, [data, propData]);\r\n\r\n  const dataProducts = propData.filter(\r\n    (row) => row.productAbbrev !== \"missing\"\r\n  );\r\n\r\n  const rotateProductNames = mailClass === \"First Class\" ? true : false;\r\n\r\n  const strippedMailClass = mailClass.replace(/\\s+/g, \"\");\r\n\r\n  const extraBarMarginLookup = {\r\n    FirstClass: 0,\r\n    MarketingMail: 0,\r\n    Periodicals: 90,\r\n    SpecialServices: 40,\r\n    PackageServices: 90,\r\n  };\r\n\r\n  const extraBarMargin = extraBarMarginLookup[strippedMailClass];\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = graphWidth - marginLeft - marginRight;\r\n\r\n  const svgId = mailClass.replace(/\\s+/g, \"\") + \"ClassSvg\";\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  function barFunctions() {\r\n    removeBars();\r\n    if (data.length > 1) {\r\n      removeBars();\r\n      drawBars();\r\n    }\r\n  }\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const dataProducts = data.filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    const data2020 = dataProducts.filter((row) => row.fy === 2020);\r\n    const data2019 = dataProducts.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".productNameText\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text((d) => d.productAbbrev)\r\n      .attr(\"text-anchor\", () => {\r\n        if (rotateProductNames) {\r\n          return \"start\";\r\n        }\r\n        return \"middle\";\r\n      })\r\n      .attr(\"class\", \"graphicElement nameBox nonBar\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `nameTextid_${d.productId}`)\r\n      .attr(\"transform\", function (d, i) {\r\n        let rotationDeg = 0;\r\n\r\n        if (rotateProductNames) {\r\n          rotationDeg = 25;\r\n        }\r\n\r\n        return `translate(${\r\n          i * interBarMargin + 75 + extraBarMargin\r\n        },${topStart + 15})rotate(${rotationDeg})`;\r\n      })\r\n      .attr(\"dx\", () => {\r\n        if (rotateProductNames) {\r\n          return \"-.9em\";\r\n        } else {\r\n          return \".3em\";\r\n        }\r\n      })\r\n      .attr(\"dy\", () => {\r\n        if (rotateProductNames) {\r\n          return \".3em\";\r\n        } else {\r\n          return \".2em\";\r\n        }\r\n      })\r\n      .on(\"mouseover\", function () {\r\n        const currentTextSelection = d3.select(this);\r\n        mouseOverTriggersProductText(currentTextSelection);\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        mouseOutTriggersProductText();\r\n      });\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \"graphicElement axisTicks nonBar\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 1);\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n\r\n    svg\r\n      .selectAll(\".bar2019\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => barXPoz(i))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElement bar2019\")\r\n      .attr(\"id\", (d) => `classBar_${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".bar2020\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => barXPoz(i) + barWidth)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElement bar2020\")\r\n      .attr(\"id\", (d) => `classBar_${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\r\n        \"x1\",\r\n        (d, i) =>\r\n          i * interBarMargin + marginLeft + targetMarginLeft + extraBarMargin\r\n      )\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\r\n        \"x2\",\r\n        (d, i) =>\r\n          i * interBarMargin +\r\n          barWidth * 2 +\r\n          barMarginLeft +\r\n          targetMarginLeft +\r\n          extraBarMargin\r\n      )\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 3)\r\n      .attr(\"class\", \"graphicElement targetLines nonBar\");\r\n\r\n    svg\r\n      .selectAll(\".targetTooltipRect\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => barXPoz(i))\r\n      .attr(\"y\", (d) => 0)\r\n      .attr(\"height\", (d) => topStart - yScale(d.target))\r\n      .attr(\"width\", barWidth * 2.5)\r\n      .style(\"opacity\", 0)\r\n      .attr(\"class\", \"targetTooltipRect\")\r\n      .attr(\"id\", (d) => `classTarget_${d.productId}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n\r\n        mouseOverTriggersTarget(currentTargetSelection);\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n        mouseOutTriggersTarget(currentTargetSelection);\r\n      });\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"graphicElement\");\r\n\r\n    function rotateTextConditionally(dataset) {\r\n      const datasetLength = dataset.length;\r\n\r\n      if (datasetLength > 8) {\r\n        return \"rotate(45)\";\r\n      } else {\r\n        return \"rotate(0)\";\r\n      }\r\n    }\r\n\r\n    function barXPoz(i) {\r\n      return i * interBarMargin + barMarginLeft + extraBarMargin;\r\n    }\r\n  }\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  function removeBars() {\r\n    d3.selectAll(\".graphicElement\").remove();\r\n  }\r\n\r\n  function mouseOverTriggersTarget(currentTargetSelection) {\r\n    const currentTargetId = currentTargetSelection._groups[0][0].id;\r\n\r\n    const currentTargetX = currentTargetSelection._groups[0][0].x.baseVal.value;\r\n    const currentTargetHeight =\r\n      currentTargetSelection._groups[0][0].y.baseVal.value;\r\n\r\n    setIsHoveringTarget(true);\r\n    setHoverTargetId(currentTargetId);\r\n    setXHoverTarget(currentTargetX);\r\n  }\r\n\r\n  function mouseOutTriggersTarget(currentTargetSelection) {\r\n    setIsHoveringTarget(false);\r\n  }\r\n\r\n  function mouseOverTriggersProductText(currentTextSelection) {\r\n    const currentTextId = currentTextSelection._groups[0][0].id;\r\n\r\n    setIsHoveringProductText(true);\r\n    setHoverTextId(currentTextId);\r\n    setXhoverText(\r\n      currentTextSelection._groups[0][0].transform.baseVal[0].matrix.e\r\n    );\r\n  }\r\n\r\n  function mouseOutTriggersProductText() {\r\n    setIsHoveringProductText(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginLeft: \"-5%\" }}>\r\n        <h3 fontFamily={textNodeFont}>{mailClass} Products</h3>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id={svgId}\r\n          height={rotateProductNames ? 350 : 330}\r\n          width={graphWidth}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"classLevel\"}\r\n          bar2019={\".bar2019\"}\r\n          bar2020={\".bar2020\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ClassLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipClassGraph\"}\r\n      />\r\n\r\n      <TooltipTarget\r\n        isHoveringTarget={isHoveringTarget}\r\n        hoverTargetId={hoverTargetId}\r\n        tooltipId={\"tooltipClassTarget\"}\r\n        propData={propData}\r\n        xHoverTarget={xHoverTarget}\r\n      />\r\n\r\n      <TooltipProductNames\r\n        isHoveringProductText={isHoveringProductText}\r\n        hoverTextId={hoverTextId}\r\n        propData={propData}\r\n        xHoverText={xHoverText}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassLevelGraph;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  liteBlue,\r\n  alternateHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport * as d3 from \"d3\";\r\n\r\nconst useStyles = makeStyles({\r\n  totalCountCountainer: {\r\n    backgroundColor: primaryColor,\r\n    borderRadius: \"1%\",\r\n    justifyContent: \"left\",\r\n    paddingLeft: \"-5%\",\r\n    paddingRight: \"-500px\",\r\n  },\r\n  missedCountCountainer: {\r\n    backgroundColor: liteBlue,\r\n    borderRadius: \"1%\",\r\n  },\r\n  decCountContainer: {\r\n    backgroundColor: secondaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  tableText: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n    // marginRight: \"-50px\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  tableTextNumber: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n    marginLeft: \"3%\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTable = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function createCellData(propData) {\r\n    let singleYear = propData\r\n      .filter((row) => row.fy === 2020)\r\n      .filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    let productCount = singleYear.length;\r\n\r\n    let decreasedCount = 0;\r\n    let missedTarget = 0;\r\n\r\n    for (let i = 0; i < singleYear.length; i++) {\r\n      const currentRow = singleYear[i];\r\n      if (currentRow.pctOnTime - currentRow.target < 0) {\r\n        missedTarget += 1;\r\n      }\r\n      if (decreasedThisYear(currentRow.productId)) {\r\n        decreasedCount += 1;\r\n      }\r\n    }\r\n\r\n    const rez = {\r\n      productCount: productCount,\r\n      missedTarget: missedTarget,\r\n      decreasedCount: decreasedCount,\r\n    };\r\n\r\n    return rez;\r\n  }\r\n\r\n  function decreasedThisYear(productId) {\r\n    const thisProduct = propData.filter((row) => row.productId === productId);\r\n\r\n    const thisYearScore = thisProduct.filter((row) => row.fy === 2020)[0]\r\n      .pctOnTime;\r\n    const lastYearScore = thisProduct.filter((row) => row.fy === 2019)[0]\r\n      .pctOnTime;\r\n\r\n    return thisYearScore < lastYearScore;\r\n  }\r\n\r\n  const cellData = createCellData(propData);\r\n\r\n  return (\r\n    <>\r\n      <Container disableGutters={true} className={classes.totalCountCountainer}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.productCount}\r\n        </Typography>\r\n        <br></br>\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products are rated in this Class\r\n        </Typography>\r\n\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.productCount}\r\n          dataType=\"totalProductCount\"\r\n        />\r\n      </Container>\r\n\r\n      <Container\r\n        disableGutters={true}\r\n        className={classes.missedCountCountainer}\r\n      >\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.missedTarget}\r\n        </Typography>\r\n        <br></br>\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products Missed their Targets\r\n        </Typography>\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.missedTarget}\r\n          dataType=\"missedProductCount\"\r\n        />\r\n      </Container>\r\n      <Container disableGutters={true} className={classes.decCountContainer}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          align=\"left\"\r\n          className={classes.tableTextNumber}\r\n        >\r\n          {cellData.decreasedCount}\r\n        </Typography>\r\n        <br></br>\r\n\r\n        <Typography align=\"left\" className={classes.tableText}>\r\n          Products Decreased in FY2020\r\n        </Typography>\r\n        <ProductCountBar\r\n          totalProductCount={cellData.productCount}\r\n          thisCount={cellData.decreasedCount}\r\n          dataType=\"decreasedProductCount\"\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProductCountBar = (props) => {\r\n  const { propData } = props;\r\n\r\n  const { totalProductCount, thisCount, dataType } = props;\r\n\r\n  const [barData, setBarData] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setBarData(thisCount);\r\n    drawBar();\r\n  }, [totalProductCount]);\r\n\r\n  useEffect(() => {\r\n    drawBar();\r\n  }, [totalProductCount, barData]);\r\n\r\n  const svgId = `${dataType}_svg`;\r\n  const barId = `${dataType}_bar`;\r\n  const otherBarId = `${dataType}_otherBar`;\r\n\r\n  const svgSelection = d3.select(`#${svgId}`);\r\n\r\n  const barHeight = 10;\r\n\r\n  const svgWidth = 300;\r\n  const svgHeight = barHeight + 20;\r\n\r\n  const countPercentage = thisCount / totalProductCount;\r\n\r\n  const countPercentageDiff = 1 - countPercentage;\r\n\r\n  const xScale = d3.scaleLinear().domain([0, 1]).range([0, svgWidth]);\r\n\r\n  const fakeData = [{ value: countPercentage }];\r\n\r\n  function drawBar() {\r\n    svgSelection\r\n      .selectAll(`#${otherBarId}`)\r\n      .data(fakeData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", xScale(countPercentage))\r\n      .attr(\"y\", 15)\r\n      .attr(\"height\", 15)\r\n      .attr(\"width\", (d) => xScale(countPercentageDiff))\r\n      .attr(\"fill\", \"hsla(239, 100%, 100%, 0.55)\")\r\n      .attr(\"id\", otherBarId);\r\n\r\n    svgSelection\r\n      .selectAll(`#${barId}`)\r\n      .data(fakeData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", 0)\r\n      .attr(\"y\", 15)\r\n      .attr(\"height\", 15)\r\n      .attr(\"width\", (d) => xScale(countPercentage))\r\n      .attr(\"fill\", \"white\")\r\n      .attr(\"id\", barId);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        //  marginBottom: \"10px\" ,\r\n        paddingBottom: \"5px\",\r\n      }}\r\n    >\r\n      <svg fill=\"black\" id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCountTable;\r\n","import { useRef } from \"react\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport quarterlyData from \"../Data/quarterlyData.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectDropdown: {\r\n    marginRight: \"5%\",\r\n\r\n    width: \"375px\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dropdownLabel: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport const ProductDropdown = (props) => {\r\n  const { propData, selectedProductId, changeProductSelected, mailClass } =\r\n    props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const inputRef = useRef();\r\n\r\n  let productList = propData\r\n    .filter((row) => row.fy === 2020)\r\n    .filter((row) => !row.product.includes(\"Mixed\"));\r\n\r\n  if (mailClass !== \"First Class\")\r\n    productList = productList.filter((row) => row.productAbbrev !== \"missing\");\r\n  else {\r\n    productList = productList\r\n\r\n      .filter((row) => row.productId !== 61) //sp flats overnight\r\n      .filter((row) => row.productId !== 1) //sp letters overnight\r\n      .filter((row) => ![10, 11, 12, 14, 15, 16].includes(row.productId)) //inbound/outbound deliv speeds\r\n      .filter((row) => ![7, 8, 9].includes(row.productId)) // flats product\r\n      .filter(\r\n        (row) => ![44, 45, 46, 48, 60, 50, 51, 52, 53].includes(row.productId)\r\n      ); // special services nonsense\r\n  }\r\n\r\n  productList.push({\r\n    class: mailClass,\r\n    fy: 2019,\r\n    product: \"none\",\r\n    productId: 0,\r\n  });\r\n\r\n  function returnFullProductName(element) {\r\n    const productName = element.product;\r\n    const deliverySpeed = element.deliverySpeed;\r\n\r\n    if ((mailClass !== \"First Class\") | (productName === \"none\")) {\r\n      return productName;\r\n    }\r\n    if ((mailClass === \"First Class\") & (productName === \"Flats\")) {\r\n      return `${element.subProductName} (${deliverySpeed})`;\r\n    } else {\r\n      return `${productName} (${deliverySpeed})`;\r\n    }\r\n  }\r\n\r\n  function getNameFromId(selectedProductId) {\r\n    selectedProductId = parseInt(selectedProductId);\r\n\r\n    if (selectedProductId === 0) {\r\n      return \"none\";\r\n    }\r\n\r\n    const currentRow = propData.filter(\r\n      (row) => row.productId === selectedProductId\r\n    )[0];\r\n\r\n    if (mailClass !== \"First Class\") {\r\n      return currentRow.product;\r\n    } else {\r\n      if (currentRow.product === \"Flats\") {\r\n        return `${currentRow.subProductName} (${currentRow.deliverySpeed})`;\r\n      } else {\r\n        return `${currentRow.product} (${currentRow.deliverySpeed})`;\r\n      }\r\n    }\r\n  }\r\n\r\n  const menuItems = productList.map((el, ind) => (\r\n    <MenuItem\r\n      key={`dropdown${ind}`}\r\n      id={el.productId}\r\n      onClick={changeProductSelected}\r\n      value={returnFullProductName(el)}\r\n      ref={inputRef}\r\n    >\r\n      {returnFullProductName(el)}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography className={classes.dropdownLabel}>\r\n              View Product-Level Data:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Select\r\n              value={getNameFromId(selectedProductId)}\r\n              className={classes.selectDropdown}\r\n            >\r\n              {menuItems}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDropdown;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ProductLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = 50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetQuarterly(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[0]);\r\n  const yearVal = parseInt(idList[1]);\r\n  const quarterVal = parseInt(idList[2]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId)\r\n      .filter((row) => row.quarter === quarterVal);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n\r\n      pointsFromTarget = hoveredRow.target - hoveredRow.pctOnTime;\r\n      pointsFromTarget = pointsFromTarget.toFixed(2);\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\nexport default TooltipService_ProductLevel;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  pinkHighlight,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  targetMarginLeft,\r\n  graphWidthProduct,\r\n  productTextMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipService_ProductLevel } from \"./TooltipService_ProductLevel\";\r\nimport { TooltipTarget } from \"./TooltipTarget\";\r\n\r\nexport const ProductGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  const [isHoveringTarget, setIsHoveringTarget] = useState(false);\r\n  const [hoverTargetId, setHoverTargetId] = useState(\"\");\r\n  const [xHoverTarget, setXHoverTarget] = useState(0);\r\n\r\n  // useEffect(allGraphFunctions, [data, propData]);\r\n\r\n  useEffect(() => {\r\n    allGraphFunctions();\r\n  }, [data, propData]);\r\n\r\n  useEffect(() => {\r\n    drawBars();\r\n  });\r\n\r\n  function allGraphFunctions() {\r\n    d3.selectAll(\".nonBarQuarter\").remove();\r\n    drawNonBarItems();\r\n    setData(propData);\r\n    transitionBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n  }\r\n\r\n  function raiseBars() {\r\n    d3.selectAll(\".bar2019Quarter\").raise();\r\n    d3.selectAll(\".bar2020Quarter\").raise();\r\n  }\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(\".targetLines\").raise();\r\n  }\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = graphWidthProduct;\r\n\r\n  const svg = d3.select(\"#productSvg\");\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2019Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2020Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".targetTooltipRect\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => 0)\r\n      .attr(\"height\", (d) => topStart - yScale(d.target))\r\n      .attr(\"width\", barWidth * 2.5)\r\n      .style(\"opacity\", 0)\r\n      .attr(\"class\", \"targetTooltipRect nonBarQuarter\")\r\n      .attr(\"id\", (d) => `productTarget_${d.productId}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n\r\n        mouseOverTriggersTarget(currentTargetSelection);\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n        mouseOutTriggersTarget(currentTargetSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft + targetMarginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\r\n        \"x2\",\r\n        (d, i) =>\r\n          i * interBarMargin + barWidth * 2 + barMarginLeft + targetMarginLeft\r\n      )\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 3)\r\n      .attr(\"class\", \"graphicElementQuarter targetLines\");\r\n  }\r\n\r\n  function transitionBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    d3.selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    d3.selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", pinkHighlight)\r\n      .style(\"stroke-width\", 3)\r\n      .attr(\"class\", \" graphicElementQuarter targetLines\");\r\n\r\n    svg\r\n      .selectAll(\".targetTooltipRect\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => 0)\r\n      .attr(\"height\", (d) => topStart - yScale(d.target))\r\n      .attr(\"width\", barWidth * 2.5)\r\n      .style(\"opacity\", 0)\r\n      .attr(\"class\", \"targetTooltipRect nonBarQuarter\")\r\n      .attr(\"id\", (d) => `productTarget_${d.productId}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n\r\n        mouseOverTriggersTarget(currentTargetSelection);\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        const currentTargetSelection = d3.select(this);\r\n        mouseOutTriggersTarget(currentTargetSelection);\r\n      });\r\n  }\r\n\r\n  function drawNonBarItems() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n\r\n    const quarters = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      // .attr(\"x\", 190)\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 25)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter\");\r\n\r\n    svg\r\n      .selectAll(\".quarterText\")\r\n      .data(quarters)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\r\n        \"x\",\r\n        (d, i) =>\r\n          i * (interBarMargin - 1) + barMarginLeft + productTextMarginLeft - 2\r\n      )\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter nameBox\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \" nonBarQuarter graphicElementQuarter axisTicks\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 0.5);\r\n\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n  }\r\n\r\n  const theseBars = d3.selectAll(\".bar2020Quarter, .bar2019Quarter\");\r\n\r\n  theseBars.on(\"mouseover\", function () {\r\n    const currentBarSelection = d3.select(this);\r\n\r\n    mouseOverTriggers(currentBarSelection);\r\n  });\r\n\r\n  theseBars.on(\"mouseout\", function () {\r\n    const currentBarSelection = d3.select(this);\r\n    mouseOutTriggers(currentBarSelection);\r\n  });\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  const firstRow = propData[0];\r\n\r\n  let productName = firstRow.product;\r\n\r\n  if (firstRow.class === \"First Class Mail\") {\r\n    productName = `${firstRow.product} (${firstRow.deliverySpeed})`;\r\n  }\r\n\r\n  function mouseOverTriggersTarget(currentTargetSelection) {\r\n    const currentTargetId = currentTargetSelection._groups[0][0].id;\r\n\r\n    const currentTargetX = currentTargetSelection._groups[0][0].x.baseVal.value;\r\n    const currentTargetHeight =\r\n      currentTargetSelection._groups[0][0].y.baseVal.value;\r\n\r\n    setIsHoveringTarget(true);\r\n    setHoverTargetId(currentTargetId);\r\n    setXHoverTarget(currentTargetX);\r\n  }\r\n\r\n  function mouseOutTriggersTarget(currentTargetSelection) {\r\n    setIsHoveringTarget(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={{ paddingTop: \"1%\" }}>\r\n        <h3 fontFamily={textNodeFont}>Product-Level Quarterly Data</h3>\r\n\r\n        <h4>{productName}</h4>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id=\"productSvg\"\r\n          height={300}\r\n          width={850}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"productLevel\"}\r\n          bar2019={\".bar2019Quarter\"}\r\n          bar2020={\".bar2020Quarter\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ProductLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipProductGraph\"}\r\n      />\r\n\r\n      <TooltipTarget\r\n        isHoveringTarget={isHoveringTarget}\r\n        hoverTargetId={hoverTargetId}\r\n        tooltipId={\"tooltipProductTarget\"}\r\n        propData={propData}\r\n        xHoverTarget={xHoverTarget}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductGraph;\r\n","const outsideObjMargin = { top: 10, right: 20, bottom: 10, left: 40 };\r\n\r\nconst lineDims = {\r\n  margin: outsideObjMargin,\r\n  svgHeightFull: 200,\r\n  svgHeight: 200 - outsideObjMargin.top - outsideObjMargin.bottom,\r\n  svgWidth: 420 - outsideObjMargin.right - outsideObjMargin.left,\r\n  interDotX: 95,\r\n};\r\n\r\nexport const { margin, svgHeight, svgHeightFull, svgWidth, interDotX } =\r\n  lineDims;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport { darkGrey } from \"../Design/MyTheme\";\r\n\r\nexport const TooltipVolume = (props) => {\r\n  const { xHover, yHover, hoverId, svgHeightFull, isHovering, propData } =\r\n    props;\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering);\r\n    tooltipXPoz(xHover, hoverId);\r\n    tooltipYPoz(yHover, hoverId, svgHeightFull);\r\n  }, [isHovering]);\r\n\r\n  const tooltipText = tooltipTextChange(hoverId, propData);\r\n\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  // tooltipDiv.on(\"mouseover\", () => {\r\n  //   tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n  // });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        width: tooltipWidth,\r\n        height: tooltipHeight,\r\n        font: \"12px sans-serif\",\r\n        background: \"lightsteelblue\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        paddingTop: \"10px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: darkGrey,\r\n        // backgroundColor: lightGrey,\r\n        fontWeight: \"bold\",\r\n        fontSize: \"13px\",\r\n      }}\r\n      id=\"TooltipVolume\"\r\n    >\r\n      <span style={{ marginTop: textMarginTop }}> {tooltipText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tooltipWidth = 140;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nfunction removeOnMouseOut(isHovering) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, hoverId) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal = xHover - tooltipWidth;\r\n  } else {\r\n    outputVal = xHover;\r\n  }\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(yHover, hoverId, svgHeightFull) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n  outputVal = yHover;\r\n\r\n  outputVal = svgHeightFull - outputVal;\r\n\r\n  outputVal *= -1;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal -= tooltipHeight;\r\n    outputVal -= textMarginTop;\r\n  }\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(currentDotId, dataIn) {\r\n  let currentDotQuarter = 0;\r\n\r\n  if (!currentDotId) {\r\n    return \"none\";\r\n  }\r\n\r\n  if (currentDotId) {\r\n    currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n  }\r\n\r\n  const dataSorted = dataIn.sort((a, b) => a.quarter - b.quarter);\r\n\r\n  const currentRow = dataSorted[currentDotQuarter - 1];\r\n\r\n  const thisVol = currentRow.volume;\r\n\r\n  const volText = formatVolumeNumber(thisVol);\r\n\r\n  return `Q${currentDotQuarter} Volume: ${volText}`;\r\n}\r\n\r\nfunction formatVolumeNumber(rawNumber) {\r\n  let trailingLetter = \"B\";\r\n  let divisor = 1000000000;\r\n\r\n  if (rawNumber / divisor < 1) {\r\n    trailingLetter = \"M\";\r\n    divisor = divisor / 1000;\r\n  }\r\n\r\n  if (rawNumber / divisor < 1) {\r\n    trailingLetter = \"K\";\r\n    divisor = divisor / 1000;\r\n  }\r\n\r\n  const outputNumber = rawNumber / divisor;\r\n\r\n  let stringNum = outputNumber.toFixed(2);\r\n\r\n  return `${stringNum}${trailingLetter}`;\r\n}\r\n\r\nexport default TooltipVolume;\r\n","import * as d3 from \"d3\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  margin,\r\n  svgHeight,\r\n  svgHeightFull,\r\n  svgWidth,\r\n  interDotX,\r\n} from \"../Design/graphDimensionsLine\";\r\n\r\nimport {\r\n  secondaryColor,\r\n  lineGraphTitleBlock,\r\n  primaryColor,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport { TooltipVolume } from \"./TooltipVolume\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerText: {\r\n    color: \"white\",\r\n    marginTop: \"-1%\",\r\n  },\r\n});\r\n\r\nexport const QuarterlyVolume = (props) => {\r\n  const { propData } = props;\r\n\r\n  let isFirstClass = false;\r\n\r\n  if (propData[0].class === \"First Class Mail\") {\r\n    isFirstClass = true;\r\n  }\r\n\r\n  // console.log(\"qtr vol\", isFirstClass);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(propData);\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [yHover, setYHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    drawLine();\r\n    drawDots(data2020);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    transitionLine();\r\n    transitionDots();\r\n  }, [data, propData]);\r\n\r\n  let currentProductName = data[0].product;\r\n\r\n  if (isFirstClass) {\r\n    const firstRow = data[0];\r\n    currentProductName = `${firstRow.product} (${firstRow.deliverySpeed})`;\r\n  }\r\n\r\n  const data2020 = propData.filter((row) => row.fy === 2020);\r\n  const volumes2020 = data2020.map((row) => row.volume);\r\n\r\n  const tooltipWidth = 130;\r\n  const tooltipHeight = 50;\r\n\r\n  var yScale = d3\r\n    .scaleLinear()\r\n    .domain([d3.min(volumes2020), d3.max(volumes2020)])\r\n    .range([svgHeight, 15]);\r\n\r\n  function createLine(dataSet) {\r\n    const aLine = d3\r\n      .line()\r\n      .x(function (d, i) {\r\n        return i * interDotX + margin.left;\r\n      })\r\n      .y(function (d, i) {\r\n        return yScale(d.volume);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    return aLine;\r\n  }\r\n\r\n  function transitionLine() {\r\n    const newLine = createLine(data2020);\r\n\r\n    d3.select(\"#volumeLine\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", newLine);\r\n  }\r\n\r\n  function drawLine() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    const line = createLine(data2020);\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", line)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke-width\", \"3px\")\r\n      .style(\"stroke\", \"blue\")\r\n      .attr(\"id\", \"volumeLine\");\r\n  }\r\n\r\n  function transitionDots() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dotTooltipRect\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => {\r\n        return i * interDotX;\r\n      })\r\n      .attr(\"y\", (d) => 0)\r\n      .attr(\"height\", (d) => svgHeight)\r\n      .attr(\"width\", interDotX)\r\n      .attr(\"class\", \"dotTooltipRect\")\r\n      .style(\"opacity\", 0)\r\n      .attr(\"id\", (d, i) => `tooltlipRectSeq_${i + 1}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentRectId = d3.select(this)._groups[0][0].id;\r\n        const rectSequence = currentRectId.match(/\\d/)[0];\r\n        const currentDotId = `volumeDot_${rectSequence}`;\r\n        const currentDotSelection = d3.select(`#${currentDotId}`);\r\n\r\n        const currentDotX = currentDotSelection._groups[0][0].cx.baseVal.value;\r\n        const currentDotY = currentDotSelection._groups[0][0].cy.baseVal.value;\r\n\r\n        setXHover(currentDotX);\r\n        setYHover(currentDotY);\r\n        setHoverId(currentDotId);\r\n        setIsHovering(true);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        setIsHovering(false);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"cy\", (d) => yScale(d.volume));\r\n  }\r\n\r\n  function drawDots(data2020) {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (d, i) => i * interDotX + margin.left)\r\n      .attr(\"cy\", (d) => yScale(d.volume))\r\n      .attr(\"r\", 5)\r\n      .attr(\"id\", (d, i) => `volumeDot_${i + 1}`)\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"class\", \"dot\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: primaryColor,\r\n          paddingTop: \"1%\",\r\n          width: svgWidth,\r\n        }}\r\n      >\r\n        <div style={{ marginTop: \"1%\" }}>\r\n          <p\r\n            className={classes.headerText}\r\n            style={{ fontSize: \"20px\", fontWeight: \"bold\" }}\r\n          >\r\n            FY 2020 Quarterly Volume\r\n          </p>\r\n          <p className={classes.headerText}> {currentProductName}</p>\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: lineGraphTitleBlock }}>\r\n          <svg height={svgHeightFull} width={svgWidth} id=\"qtrVolsvg\"></svg>\r\n        </div>\r\n      </div>\r\n      <TooltipVolume\r\n        xHover={xHover}\r\n        yHover={yHover}\r\n        hoverId={hoverId}\r\n        svgHeightFull={svgHeightFull}\r\n        isHovering={isHovering}\r\n        propData={data2020}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuarterlyVolume;\r\n","import data from \"../Data/quarterlyData.json\";\r\n\r\nimport ProductGraph from \"../DashComponents/ProductGraph\";\r\nimport QuarterlyVolume from \"../DashComponents/QuarterlyVolume\";\r\nimport { Grid, Paper, Divider } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nexport const ProductPage = (props) => {\r\n  const { selectedProductId } = props;\r\n\r\n  let productId = parseInt(selectedProductId);\r\n\r\n  const productData = data.filter((row) => row.productId === productId);\r\n\r\n  let renderedSection;\r\n  let dynamicMarginBottom = 5;\r\n\r\n  if (productId && productId !== 0) {\r\n    renderedSection = (\r\n      <ProductPageFull productId={productId} productData={productData} />\r\n    );\r\n    dynamicMarginBottom = 0;\r\n  } else {\r\n    renderedSection = <EmptyProductPage />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        //  marginBottom: \"15rem\"\r\n        marginBottom: `${dynamicMarginBottom}rem`,\r\n      }}\r\n    >\r\n      {renderedSection}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullProductContainer: {\r\n    marginTop: \"3%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  quarterlyContainer: {\r\n    minWidth: 315,\r\n  },\r\n  productGraphContainer: {\r\n    minwidth: 700,\r\n  },\r\n}));\r\n\r\nconst ProductPageFull = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { productId, productData } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          marginTop: \"2%\",\r\n        }}\r\n      >\r\n        <Divider />\r\n        <div style={{ marginTop: \"2%\", marginLeft: \"2%\" }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item lg={7} md={12}>\r\n              <div style={{ width: 825 }}>\r\n                <Paper elevation={3} className={classes.productGraphContainer}>\r\n                  <ProductGraph propData={productData} />\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <QuarterlyVolume propData={productData} />\r\n              <div style={{ marginTop: \"10%\" }}></div>\r\n              <DownloadButton\r\n                propData={productData}\r\n                dataName={\"Quarterly Data\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmptyProductPage = () => {\r\n  return <></>;\r\n};\r\n\r\nexport default ProductPage;\r\n","import Link from \"@material-ui/core/Link\";\r\n\r\nexport const PRCLinks = () => {\r\n  return (\r\n    <div style={{ marginBottom: \"2rem\" }}>\r\n      <Link\r\n        class=\"nav-link\"\r\n        href=\"https://www.prc.gov\"\r\n        style={{ marginRight: \"2rem\", marginLeft: \"-20rem\" }}\r\n      >\r\n        PRC.gov\r\n      </Link>\r\n\r\n      <Link\r\n        style={{ marginRight: \"2rem\" }}\r\n        class=\"nav-link\"\r\n        href=\"https://twitter.com/postalregulator?lang=en.gov\"\r\n      >\r\n        PRC Twitter\r\n      </Link>\r\n\r\n      <a\r\n        href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\r\n        class=\"twitter-share-button\"\r\n        data-show-count=\"false\"\r\n      >\r\n        Tweet this Page\r\n      </a>\r\n      <script\r\n        async\r\n        src=\"https://platform.twitter.com/widgets.js\"\r\n        charset=\"utf-8\"\r\n      ></script>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PRCLinks;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport PRCLinks from \"../DashComponents/PRCLinks\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const FirstClass = () => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const fcAnnualData = annualData.filter(\r\n    (row) => row.class === \"First Class Mail\"\r\n  );\r\n\r\n  let volDataFC = volData.filter((row) => row.mailClass === \"FC\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={1} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n                First Class Data\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={9} xs={12} style={{ maxWidth: 950 }}>\r\n            <Paper\r\n              className={classes.graphDivFirstClass}\r\n              elevation={3}\r\n              width={graphWidth}\r\n            >\r\n              <ClassLevelGraph\r\n                propData={fcAnnualData}\r\n                mailClass={\"First Class\"}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} float=\"left\">\r\n            <Grid container direction=\"column\" spacing={3}>\r\n              <Grid item lg={7} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <ProductCountTableData propData={fcAnnualData} />{\" \"}\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{ backgroundColor: lightGrey }}\r\n                >\r\n                  <VolumeChange propData={volDataFC} />\r\n                </Paper>\r\n                <div style={{ marginTop: \"30%\" }}></div>\r\n                <Paper>\r\n                  <DownloadButton\r\n                    propData={fcAnnualData}\r\n                    dataName={\"Class-Level Data\"}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper item xs={12} className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={fcAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"First Class\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <PRCLinks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstClass;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport PRCLinks from \"../DashComponents/PRCLinks\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\n\r\nexport const MarketingMail = (props) => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const mmAnnualData = annualData.filter(\r\n    (row) => row.class === \"Marketing Mail\"\r\n  );\r\n\r\n  let volDataMM = volData.filter((row) => row.mailClass === \"MM\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n\r\n        // style={{marginBotto}}\r\n      >\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n              Marketing Mail Class-Level Data\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={12}\r\n          style={{ maxWidth: 950 }}\r\n          className={classes.classGraphContainer}\r\n        >\r\n          <Paper className={classes.graphDiv} elevation={3}>\r\n            <ClassLevelGraph\r\n              propData={mmAnnualData}\r\n              mailClass={\"Marketing Mail\"}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <Grid container direction=\"column\" justify=\"flex-start\" spacing={3}>\r\n            <Grid item lg={7} md={12}>\r\n              <Paper className={classes.paperCountTable}>\r\n                <ProductCountTableData propData={mmAnnualData} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ backgroundColor: lightGrey }}\r\n              >\r\n                <VolumeChange propData={volDataMM} />\r\n              </Paper>\r\n              <div style={{ marginTop: \"30%\" }}></div>\r\n              <Paper>\r\n                <DownloadButton\r\n                  propData={mmAnnualData}\r\n                  dataName={\"Class-Level Data\"}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={mmAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"Marketing Mail\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <PRCLinks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMail;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\n\r\nimport PRCLinks from \"../DashComponents/PRCLinks\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const SpecialServices = () => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const ssAnnualData = annualData.filter(\r\n    (row) => row.class === \"Special Services\"\r\n  );\r\n\r\n  console.log(ssAnnualData);\r\n\r\n  let volDataSS = volData.filter((row) => row.mailClass === \"SS\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={1} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n                Special Services Class-Level Data\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={9} xs={12} style={{ maxWidth: 950 }}>\r\n            <Paper\r\n              className={classes.graphDiv}\r\n              elevation={3}\r\n              width={graphWidth}\r\n            >\r\n              <ClassLevelGraph\r\n                propData={ssAnnualData}\r\n                mailClass={\"Special Services\"}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} float=\"left\">\r\n            <Grid container direction=\"column\" spacing={3}>\r\n              <Grid item lg={7} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <ProductCountTableData propData={ssAnnualData} />{\" \"}\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{ backgroundColor: lightGrey }}\r\n                >\r\n                  <VolumeChange propData={volDataSS} />\r\n                </Paper>\r\n                <div style={{ marginTop: \"30%\" }}></div>\r\n                <Paper>\r\n                  <DownloadButton\r\n                    propData={ssAnnualData}\r\n                    dataName={\"Class-Level Data\"}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper item xs={12} className={classes.paperDropdown}>\r\n          <div>\r\n            Quarterly Product-level data is not available for products within\r\n            the Special Services mail class\r\n          </div>\r\n        </Paper>\r\n      </Grid>\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <PRCLinks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpecialServices;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport PRCLinks from \"../DashComponents/PRCLinks\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const PackageServices = (props) => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const psAnnualData = annualData.filter(\r\n    (row) => row.class === \"Package Services\"\r\n  );\r\n\r\n  let volDataPS = volData.filter((row) => row.mailClass === \"PS\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={1} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n                Package Services Class-Level Data\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={9} xs={12} style={{ maxWidth: 950 }}>\r\n            <Paper\r\n              className={classes.graphDiv}\r\n              elevation={3}\r\n              width={graphWidth}\r\n            >\r\n              <ClassLevelGraph\r\n                propData={psAnnualData}\r\n                mailClass={\"Package Services\"}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} float=\"left\">\r\n            <Grid container direction=\"column\" spacing={3}>\r\n              <Grid item lg={7} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <ProductCountTableData propData={psAnnualData} />{\" \"}\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{ backgroundColor: lightGrey }}\r\n                >\r\n                  <VolumeChange propData={volDataPS} />\r\n                </Paper>\r\n                <div style={{ marginTop: \"30%\" }}></div>\r\n                <Paper>\r\n                  <DownloadButton\r\n                    propData={psAnnualData}\r\n                    dataName={\"Class-Level Data\"}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper item xs={12} className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={psAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"Periodicals\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <PRCLinks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PackageServices;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\nimport PRCLinks from \"../DashComponents/PRCLinks\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const Periodicals = () => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const perAnnualData = annualData.filter((row) => row.class === \"Periodicals\");\r\n\r\n  let volDataPER = volData.filter((row) => row.mailClass === \"PER\");\r\n\r\n  console.log(\"perAnnualDat\", perAnnualData);\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={1} justifyContent=\"flex-start\">\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <div className={classes.root}>\r\n              <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n                Periodicals Class-Level Data\r\n              </Typography>\r\n            </div>\r\n          </Grid>\r\n          <Grid item md={9} xs={12} style={{ maxWidth: 950 }}>\r\n            <Paper\r\n              className={classes.graphDiv}\r\n              elevation={3}\r\n              width={graphWidth}\r\n            >\r\n              <ClassLevelGraph\r\n                propData={perAnnualData}\r\n                mailClass={\"Periodicals\"}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={3} float=\"left\">\r\n            <Grid container direction=\"column\" spacing={3}>\r\n              <Grid item lg={7} md={12}>\r\n                <Paper className={classes.paper}>\r\n                  <div>\r\n                    {\" \"}\r\n                    <ProductCountTableData propData={perAnnualData} />{\" \"}\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <Paper\r\n                  className={classes.paper}\r\n                  style={{ backgroundColor: lightGrey }}\r\n                >\r\n                  <VolumeChange propData={volDataPER} />\r\n                </Paper>\r\n                <div style={{ marginTop: \"30%\" }}></div>\r\n                <Paper>\r\n                  <DownloadButton\r\n                    propData={perAnnualData}\r\n                    dataName={\"Class-Level Data\"}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Paper item xs={12} className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={perAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n            mailClass=\"Periodicals\"\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <PRCLinks />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Periodicals;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const HomePage = () => {\r\n  const svg = d3.select(\"#envelopeSvg\");\r\n\r\n  const lineStyles = {\r\n    stroke: \"black\",\r\n    strokeWidth: \"3\",\r\n  };\r\n\r\n  const envelopeXStart = \"100\";\r\n\r\n  const envelopeWidth = `${parseInt(envelopeXStart) + 250}`;\r\n  const envelopeHeight = \"150\";\r\n\r\n  const midWayWidth = `${\r\n    (parseInt(envelopeXStart) + parseInt(envelopeWidth)) / 2\r\n  }`;\r\n\r\n  //   useEffect(() => {\r\n  //   infiniteAnimation();\r\n  //   }, []);\r\n\r\n  //   function infiniteAnimation() {\r\n  //     while (true) {\r\n  //       expandSpeedLine(\"speedLine1\");\r\n  //       setTimeout(() => {\r\n  //         expandSpeedLine(\"speedLine2\");\r\n  //       }, 500);\r\n  //     }\r\n  //   }\r\n\r\n  function expandSpeedLine(selectionId) {\r\n    const startPoint = parseInt(envelopeXStart) - 10;\r\n    d3.select(`#${selectionId}`)\r\n      .attr(\"x2\", startPoint)\r\n      .attr(\"x1\", startPoint)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"x2\", startPoint)\r\n      .attr(\"x1\", 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">Welcome</Typography>\r\n      <Typography variant=\"h5\">\r\n        To the Postal Regulatory Commission's Service Performance Dashboard\r\n      </Typography>\r\n      <br />\r\n      <br />\r\n      <Typography variant=\"h6\">What is Service Performance?</Typography>\r\n      <Typography variant=\"body1\">\r\n        The Percentage of mailpieces that are delivered on time.\r\n      </Typography>\r\n      <br />\r\n      <br />\r\n      <div id=\"envelopeSvgContainer\">\r\n        {/* <svg id=\"envelopeSvg\" width={500}>\r\n          <line\r\n            x1={envelopeXStart}\r\n            y1=\"0\"\r\n            x2={envelopeXStart}\r\n            y2={envelopeHeight}\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n          <line\r\n            x1={envelopeXStart}\r\n            y1={envelopeHeight}\r\n            x2={envelopeWidth}\r\n            y2={envelopeHeight}\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n          <line\r\n            x1={envelopeXStart}\r\n            y1=\"0\"\r\n            x2={envelopeWidth}\r\n            y2=\"0\"\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n          <line\r\n            x1={envelopeWidth}\r\n            y1=\"0\"\r\n            x2={envelopeWidth}\r\n            y2={envelopeHeight}\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n          <line\r\n            x1={envelopeXStart}\r\n            y1=\"0\"\r\n            x2={midWayWidth}\r\n            y2={envelopeHeight / 2}\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n          <line\r\n            x1={envelopeWidth}\r\n            y1=\"0\"\r\n            x2={midWayWidth}\r\n            y2={envelopeHeight / 2}\r\n            style={lineStyles}\r\n            shapeRendering=\"crispEdges\"\r\n          />\r\n\r\n          <line style={lineStyles} id=\"speedLine1\"></line>\r\n          <line id=\"speedLine2\"></line>\r\n        </svg> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Drawer = (props) => {\r\n  const { history } = props;\r\n\r\n  const mailClassNames = [\r\n    {\r\n      text: \"First Class\",\r\n      onClick: () => history.push(\"/first-class\"),\r\n    },\r\n    {\r\n      text: \"Marketing Mail\",\r\n      onClick: () => history.push(\"/marketing-mail\"),\r\n    },\r\n    {\r\n      text: \"Periodicals\",\r\n      onClick: () => history.push(\"/periodicals\"),\r\n    },\r\n    {\r\n      text: \"Package Services\",\r\n      onClick: () => history.push(\"/package-services\"),\r\n    },\r\n    {\r\n      text: \"Special Services\",\r\n      onClick: () => history.push(\"/special-services\"),\r\n    },\r\n  ];\r\n\r\n  const homeName = [\r\n    {\r\n      text: \"Home\",\r\n      onClick: () => history.push(\"/dash-deploy\"),\r\n    },\r\n    {\r\n      text: \"All Market Dominant\",\r\n      onClick: () => history.push(\"/all-md\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <MUIDrawer variant=\"permanent\">\r\n      <List>\r\n        {homeName.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      <Divider />\r\n      <List>\r\n        {mailClassNames.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </MUIDrawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drawer);\r\n","import \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport myTheme from \"./Design/MyTheme\";\n\nimport { AllMarketDominant } from \"./mailClassComponents/AllMarketDominant\";\nimport { FirstClass } from \"./mailClassComponents/FirstClass\";\nimport { MarketingMail } from \"./mailClassComponents/MarketingMailClass\";\nimport { SpecialServices } from \"./mailClassComponents/SpecialServices\";\nimport { PackageServices } from \"./mailClassComponents/PackageServices\";\nimport { Periodicals } from \"./mailClassComponents/Periodicals\";\nimport { HomePage } from \"./mailClassComponents/HomePage\";\nimport { ProductPage } from \"./mailClassComponents/ProductPage\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Drawer from \"./Drawer\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Drawer />\n        <ThemeProvider theme={myTheme}>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                from=\"/dash-deploy\"\n                render={(props) => <HomePage {...props} />}\n              />\n              <Route\n                exact\n                from=\"/all-md\"\n                render={(props) => <AllMarketDominant {...props} />}\n              />\n\n              <Route\n                exact\n                path=\"/first-class\"\n                render={(props) => <FirstClass {...props} />}\n              />\n              <Route\n                exact\n                path=\"/marketing-mail\"\n                render={(props) => <MarketingMail {...props} />}\n              />\n              <Route\n                exact\n                path=\"/periodicals\"\n                render={(props) => <Periodicals {...props} />}\n              />\n              <Route\n                exact\n                path=\"/package-services\"\n                render={(props) => <PackageServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/special-services\"\n                render={(props) => <SpecialServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/product\"\n                render={(props) => <ProductPage {...props} />}\n              />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}