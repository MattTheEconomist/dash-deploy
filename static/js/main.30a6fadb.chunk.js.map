{"version":3,"sources":["Design/MyTheme.js","DashComponents/PieGraphKey.jsx","DashComponents/PieGraph.jsx","Design/graphDimensionsSide.js","DashComponents/BarGraphSide.jsx","DashComponents/GraphKey.jsx","DashComponents/AxisBottom.jsx","mailClassComponents/allMarketDominantComponents/MDCompositeContainer.jsx","DashComponents/VolumeChange.jsx","DashComponents/ProductCountTableMD.jsx","DashComponents/DownloadButton.jsx","mailClassComponents/AllMarketDominant.jsx","Design/graphDimensions.js","DashComponents/TooltipService_ClassLevel.jsx","DashComponents/ClassLevelGraph.jsx","DashComponents/ProductCountTable.jsx","DashComponents/ProductDropdown.jsx","DashComponents/TooltipService_ProductLevel.jsx","DashComponents/ProductGraph.jsx","Design/graphDimensionsLine.js","DashComponents/TooltipVolume.jsx","DashComponents/QuarterlyVolume.jsx","mailClassComponents/ProductPage.jsx","mailClassComponents/FirstClass.jsx","mailClassComponents/MarketingMailClass.jsx","mailClassComponents/SpecialServices.jsx","mailClassComponents/PackageServices.jsx","mailClassComponents/Periodicals.jsx","Drawer.jsx","App.js","reportWebVitals.js","index.js"],"names":["primaryColor","secondaryColor","highlightColor","lightGrey","darkGrey","pinkHighlight","greenGrey","alternateHighlight","lineGraphTitleBlock","textNodeFont","myTheme","createTheme","palette","primary","main","breakpoints","values","xs","sm","md","lg","tooltipStyles","position","textAlign","font","background","useStyles_ClassPage","makeStyles","theme","root","flexGrow","paperDropdown","minWidth","padding","spacing","marginTop","paper","color","text","secondary","graphDiv","maxWidth","PieGraphKey","props","colorObj","cellLocation","cell","style","paddingLeft","marginBottom","height","fill","x","y","width","id","gridStart","fontFamily","PieGraph","propData","useEffect","svg","d3","svgId","dataset","map","row","value","outerRadius","svgWidth","innerRadius","arc","pie","colorList","arcs","selectAll","data","enter","append","attr","d","i","centroid","drawPie","dataSet","paddingRight","svgHeight","marginLeft","marginRight","innerArea","BarGraphSide","barData","year","rawData","Result2019","Result2020","mailClass","barHeight","xScale","colorSeq","lineData","Target","barMarginTop","drawBars","raise","ProductNameAbbrev","split","domain","range","GraphKey","bar2019","bar2020","level","id2019","id2020","on","transition","duration","console","log","x1","y1","x2","y2","strokeWidth","stroke","className","AxisBottom","call","ticks","drawAxis","fontSize","MDCompositeContainer","fcData","compositeData","filter","mmData","useStyles","outterContainer","backgroundColor","titleText","fontWeight","volText","volNumber","changeIcon","VolumeChange","volumeData","classes","FY2020","FY2019","volumeTextNumber","rawNumber","trailingLetter","divisor","stringNum","outputNumber","toFixed","formatVolumeNumber","volumeChangeText","rawChange","toString","formatVolumeChangeNumber","Typography","variant","gutterBottom","table","maxHeight","borderTop","boxShadow","ProductCountTableMD","countData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","ind","scope","totalProducts","negativeChange","positiveChange","missing","button","icon","transform","dataName","DownloadButton","Button","Grid","container","direction","item","paperTopRow","paddingBottom","minHeight","paddingTop","AllMarketDominant","missesData","topLevelPieData","totalMDVol","alignItems","justifyContent","annualDataFull","graphHeight","graphWidth","barWidth","barMarginLeft","yScale","yScaleRev","TooltipService_ClassLevel","xHover","hoverId","isHovering","hoverHeight","tooltipId","useState","tooltipText","setTooltipText","removeOnMouseOut","outputVal","tooltipDiv","tooltipXPoz","tooltipYPoz","pointsFromTarget","calcPointsFromTargetAnnual","tooltipTextChange","tooltipColor","assignColor","idList","productId","parseInt","yearVal","hoveredRow","fy","length","ClassLevelGraph","setData","setXHover","setHoverId","setIsHovering","setHoverHeight","barFunctions","topStart","removeBars","dataProducts","productAbbrev","data2020","data2019","interBarMargin","graphData","barCount","getInterBarMargin","tickSize","remove","pctOnTime","mouseOverTriggers","this","mouseOutTriggers","target","currentBarSelection","currentBarId","_groups","currentBarX","baseVal","currentBarHeight","shapeRendering","totalCountCountainer","borderRadius","missedCountCountainer","decCountContainer","tableText","ProductCountTable","decreasedThisYear","thisProduct","cellData","singleYear","productCount","decreasedCount","missedTarget","currentRow","createCellData","Container","selectDropdown","formControl","margin","selectEmpty","dropdownLabel","ProductDropdown","selectedProductId","changeProductSelected","inputRef","useRef","productList","product","includes","push","class","menuItems","el","MenuItem","onClick","ref","FormControl","Select","nameFromId","TooltipService_ProductLevel","calcPointsFromTargetQuarterly","quarterVal","quarter","ProductGraph","raiseBars","raiseTargets","quarters","drawNonBarItems","transitionBars","ptsFromTarget","theseBars","outsideObjMargin","top","right","bottom","left","lineDims","svgHeightFull","interDotX","TooltipVolume","yHover","currentDotQuarter","match","tooltipWidth","tooltipHeight","textMarginTop","currentDotId","dataIn","sort","a","b","volume","headerText","QuarterlyVolume","setYHover","line","createLine","datum","drawLine","drawDots","newLine","transitionLine","currentDotX","cx","currentDotY","cy","currentProductName","volumes2020","curve","ProductPage","renderedSection","productData","fullProductContainer","quarterlyContainer","productGraphContainer","minwidth","ProductPageFull","Divider","EmptyProductPage","FirstClass","fcAnnualData","annualData","elevation","MarketingMail","setSelectedProductId","mmAnnualData","volDataMM","volData","e","SpecialServices","PackageServices","Periodicals","withRouter","history","mailClassNames","homeName","List","index","ListItem","ListItemText","App","ThemeProvider","exact","from","render","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30a6fadb.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const colorPalleteMatt = {\r\n  primaryColor: \"#2CC6EB\",\r\n  secondaryColor: \"#225CF6\",\r\n  highlightColor: \"#22F6AC\",\r\n  lightGrey: \"#e6e8e6\",\r\n  darkGrey: \"#778380\",\r\n  greenGrey: \"#53aca0\",\r\n  // pinkHighlight: \"#ac5363\",\r\n  pinkHighlight: \"#f45273\",\r\n  alternateHighlight: \"#1ED4C7\",\r\n  alternateSecondary: \"#1E7FD4\",\r\n  lineGraphTitleBlock: \"#caf3fa\",\r\n};\r\n\r\nexport const {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  lightGrey,\r\n  darkGrey,\r\n  pinkHighlight,\r\n  greenGrey,\r\n  alternateHighlight,\r\n  alternateSecondary,\r\n  lineGraphTitleBlock,\r\n} = colorPalleteMatt;\r\n\r\nexport const lightGreyAgain = \"#e6e8e6\";\r\n\r\nexport const textNodeFont = \"'Roboto', sans-serif\";\r\n\r\nconst myTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n  },\r\n  breakpoints: {\r\n    values: {\r\n      xs: 0,\r\n      sm: 450,\r\n      md: 600,\r\n      lg: 1550,\r\n    },\r\n  },\r\n});\r\n\r\nexport const tooltipStyles = {\r\n  position: \"relative\",\r\n  textAlign: \"center\",\r\n  font: \"12px sans-serif\",\r\n  background: \"lightsteelblue\",\r\n  textAlign: \"center\",\r\n  verticalAlign: \"middle\",\r\n  paddingTop: \"8px\",\r\n  paddingBottom: \"8px\",\r\n  borderRadius: \"5px\",\r\n  fontWeight: \"bolder\",\r\n  fontSize: \"14px\",\r\n  fontFamily: \"roboto\",\r\n  boxShadow: \"5px 5px 2px hsla(0, 0%, 62%, 0.69)\",\r\n};\r\n\r\nexport const useStyles_ClassPage = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paperDropdown: {\r\n    minWidth: 850,\r\n    padding: theme.spacing(1),\r\n    marginTop: \"5%\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    minWidth: 300,\r\n  },\r\n  graphDiv: {\r\n    minWidth: 850,\r\n    maxWidth: 1000,\r\n    padding: \"1%\",\r\n  },\r\n}));\r\n\r\nexport default myTheme;\r\n","import { textNodeFont } from \"../Design/MyTheme\";\r\n\r\nconst PieGraphKey = (props) => {\r\n  const { colorObj } = props;\r\n\r\n  const { primaryColor, highlightColor, lightGrey } = colorObj;\r\n\r\n  const gridMargin = 20;\r\n  const gridStart = 20;\r\n\r\n  function cellLocation(cell) {\r\n    return gridMargin * cell;\r\n  }\r\n  const textMargin = 12;\r\n\r\n  return (\r\n    <div style={{ paddingLeft: \"25%\", marginBottom: \"10%\" }}>\r\n      <svg height={100}>\r\n        <rect\r\n          fill={primaryColor}\r\n          x={gridStart}\r\n          y={gridStart}\r\n          width={15}\r\n          height={15}\r\n          id=\"keyMissed\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={gridStart + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Missed Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={highlightColor}\r\n          x={gridStart}\r\n          y={cellLocation(2)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(2) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products that Exceeded Target\r\n        </text>\r\n\r\n        <rect\r\n          fill={lightGrey}\r\n          x={gridStart}\r\n          y={cellLocation(3)}\r\n          width={15}\r\n          height={15}\r\n          id=\"key2020\"\r\n        ></rect>\r\n        <text\r\n          x={cellLocation(1) + gridMargin}\r\n          y={cellLocation(3) + textMargin}\r\n          fontFamily={textNodeFont}\r\n        >\r\n          Products with no Data\r\n        </text>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieGraphKey;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport PieGraphKey from \"./PieGraphKey\";\r\n\r\nimport { primaryColor, highlightColor, lightGrey } from \"../Design/MyTheme\";\r\n\r\nexport const PieGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawPie();\r\n  });\r\n\r\n  const dataSet = propData[0].dataSet;\r\n\r\n  const svgId = `${dataSet}svg`;\r\n\r\n  const svg = d3.select(`#${svgId}`);\r\n\r\n  const svgHeight = 300;\r\n  const svgWidth = 300;\r\n\r\n  function drawPie() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const dataset = propData.map((row) => row.value);\r\n\r\n    const outerRadius = svgWidth / 2;\r\n    const innerRadius = svgWidth / 3;\r\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\r\n\r\n    const pie = d3.pie();\r\n\r\n    const colorList = [primaryColor, highlightColor, lightGrey];\r\n\r\n    //Set up groups\r\n    const arcs = svg\r\n      .selectAll(\"g.arc\")\r\n      .data(pie(dataset))\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"arc\")\r\n      .attr(\"transform\", \"translate(\" + outerRadius + \",\" + outerRadius + \")\");\r\n\r\n    //Draw arc paths\r\n    arcs\r\n      .append(\"path\")\r\n      .attr(\"fill\", function (d, i) {\r\n        return colorList[i];\r\n      })\r\n      .attr(\"d\", arc);\r\n\r\n    //Labels\r\n    arcs\r\n      .append(\"text\")\r\n      .attr(\"transform\", function (d) {\r\n        return \"translate(\" + arc.centroid(d) + \")\";\r\n      })\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .text(function (d) {\r\n        return d.value;\r\n      });\r\n  }\r\n  const colorObj = {\r\n    primaryColor: primaryColor,\r\n    highlightColor: highlightColor,\r\n    lightGrey: lightGrey,\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ paddingRight: \"28%\" }}>\r\n        <h4 style={{ marginBottom: \"1rem\", marginTop: \"-1%\" }}>\r\n          FY2020 Mail Product Count\r\n        </h4>\r\n        <svg width={svgWidth} height={svgHeight} id={svgId}></svg>\r\n        <PieGraphKey colorObj={colorObj} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default PieGraph;\r\n","const sideGraphDims = {\r\n  svgWidth: 400,\r\n  svgHeight: 50,\r\n  marginLeft: 10,\r\n  marginRight: 10,\r\n  innerArea: 380,\r\n};\r\n\r\nexport const { svgWidth, svgHeight, marginLeft, marginRight, innerArea } =\r\n  sideGraphDims;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  svgWidth,\r\n  svgHeight,\r\n  marginLeft,\r\n  marginRight,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const BarGraphSide = (props) => {\r\n  const { propData } = props;\r\n\r\n  useEffect(() => {\r\n    drawBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  let rawData = propData[0];\r\n\r\n  let mailClass = rawData.ProductNameAbbrev.split(\" \")[0];\r\n\r\n  if (mailClass === \"First\") {\r\n    mailClass = \"FC\";\r\n  }\r\n\r\n  const svgId = `barSide${mailClass}svg`;\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(`.${mailClass}target`).raise();\r\n  }\r\n\r\n  const barMarginTop = 10;\r\n  const interBarMargin = 15;\r\n  const barHeight = 25;\r\n\r\n  const colorSeq = [primaryColor, secondaryColor];\r\n\r\n  const xScale = d3\r\n    .scaleLinear()\r\n    .domain([0, 100])\r\n    .range([marginLeft, svgWidth - marginRight]);\r\n\r\n  function drawBars() {\r\n    const svg = d3.select(`#${svgId}`);\r\n\r\n    const barData = [\r\n      { year: 2019, value: rawData.Result2019 },\r\n\r\n      { year: 2020, value: rawData.Result2020 },\r\n    ];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}bars`)\r\n      .data(barData)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", marginLeft)\r\n      .attr(\"y\", (d, i) => i * interBarMargin)\r\n      .attr(\"height\", barHeight)\r\n      .attr(\"width\", (d) => xScale(d.value))\r\n      .attr(\"class\", `${mailClass}bars`)\r\n      .attr(\"fill\", (d, i) => colorSeq[i])\r\n      .attr(\"id\", (d) => `${mailClass}${d.year}`);\r\n\r\n    // const lineData = [{ value: rawData.Target }];\r\n    const lineData = [rawData.Target];\r\n\r\n    svg\r\n      .selectAll(`.${mailClass}target`)\r\n      // .data(barData)\r\n      .data(lineData)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d) => xScale(d))\r\n      .attr(\"y1\", barMarginTop - barHeight)\r\n      .attr(\"x2\", (d) => xScale(d))\r\n      .attr(\"y2\", barMarginTop + barHeight + 10)\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", `${mailClass}target`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <svg id={svgId} height={svgHeight} width={svgWidth}></svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarGraphSide;\r\n","import * as d3 from \"d3\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nexport const GraphKey = (props) => {\r\n  const { bar2019, bar2020, level } = props;\r\n\r\n  // console.log(props);\r\n\r\n  // console.log(\"graphkey \", level, bar2019, bar2020);\r\n\r\n  const id2019 = `key2019${level}`;\r\n  const id2020 = `key2020${level}`;\r\n\r\n  d3.select(`#${id2019}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2020).transition().duration(200).style(\"opacity\", 1);\r\n    })\r\n    .on(\"click\", () => console.log(\"clicked\"));\r\n\r\n  d3.select(`#${id2020}`)\r\n    .on(\"mouseover\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 0.2);\r\n    })\r\n    .on(\"mouseout\", function () {\r\n      d3.selectAll(bar2019).transition().duration(200).style(\"opacity\", 1);\r\n    });\r\n\r\n  return (\r\n    <svg height={50}>\r\n      <rect\r\n        fill={primaryColor}\r\n        x={20}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2019}\r\n      ></rect>\r\n      <text x={39} y={30} fontFamily={textNodeFont}>\r\n        FY2019\r\n      </text>\r\n\r\n      <rect\r\n        fill={secondaryColor}\r\n        x={100}\r\n        y={20}\r\n        width={15}\r\n        height={15}\r\n        id={id2020}\r\n      ></rect>\r\n      <text x={120} y={30} fontFamily={textNodeFont}>\r\n        {\" \"}\r\n        FY2020\r\n      </text>\r\n      <line\r\n        x1={190}\r\n        y1={25}\r\n        x2={215}\r\n        y2={25}\r\n        strokeWidth={1}\r\n        stroke={highlightColor}\r\n        className=\"targetLines\"\r\n      />\r\n\r\n      <text x={220} y={30} fontFamily={textNodeFont}>\r\n        Target\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default GraphKey;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  svgWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  innerArea,\r\n} from \"../Design/graphDimensionsSide\";\r\n\r\nexport const AxisBottom = () => {\r\n  useEffect(() => {\r\n    drawAxis();\r\n  });\r\n\r\n  function drawAxis() {\r\n    const svg = d3.select(\"#barAxisSvg\");\r\n    const xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, 100])\r\n      .range([marginLeft, svgWidth - marginRight]);\r\n    //   .range([10, 390]);\r\n\r\n    svg.append(\"g\").call(d3.axisBottom(xScale).ticks(5));\r\n\r\n    // .tickSize(-svgWidth).ticks(5);\r\n  }\r\n\r\n  return (\r\n    <svg id=\"barAxisSvg\" height={75} width={svgWidth}>\r\n      <text x={innerArea / 2} y={35} fontSize={11}>\r\n        On-Time(%)\r\n      </text>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AxisBottom;\r\n","import BarGraphSide from \"../../DashComponents/BarGraphSide\";\r\nimport compositeData from \"../../Data/compositeData.json\";\r\nimport GraphKey from \"../../DashComponents/GraphKey\";\r\nimport AxisBottom from \"../../DashComponents/AxisBottom\";\r\n\r\nexport const MDCompositeContainer = () => {\r\n  const fcData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"First Class Composite\"\r\n  );\r\n\r\n  const mmData = compositeData.filter(\r\n    (row) => row.ProductNameAbbrev === \"MM and Per Composite\"\r\n  );\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <h3>Composite Scores </h3>\r\n\r\n      <h5>First Class Letters and Flats</h5>\r\n\r\n      <BarGraphSide propData={fcData} />\r\n\r\n      <h5>Marketing Mail and Periodicals</h5>\r\n\r\n      <BarGraphSide propData={mmData} />\r\n\r\n      <AxisBottom />\r\n\r\n      <GraphKey level={\"MDLevel\"} bar2019={\".MM2019\"} bar2020={\".MM2020\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MDCompositeContainer;\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500,\r\n  },\r\n  outterContainer: {\r\n    backgroundColor: \"#e6e8e6\",\r\n  },\r\n\r\n  titleText: {\r\n    fontSize: 20,\r\n    marginLeft: \"-75px\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"-0.5rem\",\r\n  },\r\n  volText: {\r\n    fontSize: 17,\r\n    marginBottom: \"2%\",\r\n  },\r\n  volNumber: {\r\n    fontSize: 18,\r\n    marginLeft: \"-75px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  changeIcon: {\r\n    marginTop: \"3%\",\r\n    marginLeft: \"-2px\",\r\n    marginRight: \"1px\",\r\n  },\r\n});\r\n\r\nexport const VolumeChange = (props) => {\r\n  const { propData } = props;\r\n\r\n  const volumeData = propData[0];\r\n\r\n  const classes = useStyles();\r\n\r\n  const { FY2020, FY2019 } = volumeData;\r\n\r\n  const volumeTextNumber = formatVolumeNumber(volumeData.FY2020);\r\n\r\n  let volChangePct = (FY2020 - FY2019) / FY2019;\r\n\r\n  const volumeChangeText = formatVolumeChangeNumber(volChangePct);\r\n\r\n  function formatVolumeNumber(rawNumber) {\r\n    let trailingLetter = \"B\";\r\n    let divisor = 1000000000;\r\n\r\n    if (rawNumber / divisor < 1) {\r\n      trailingLetter = \"M\";\r\n      divisor = divisor / 1000;\r\n    }\r\n\r\n    const outputNumber = rawNumber / divisor;\r\n\r\n    let stringNum;\r\n    if (trailingLetter === \"M\") {\r\n      stringNum = outputNumber.toFixed(0);\r\n    }\r\n\r\n    if (trailingLetter === \"B\") {\r\n      stringNum = outputNumber.toFixed(1);\r\n    }\r\n\r\n    return `${stringNum}${trailingLetter}`;\r\n  }\r\n\r\n  function formatVolumeChangeNumber(rawChange) {\r\n    rawChange = (rawChange * 100).toFixed(1);\r\n    if (rawChange < 0) {\r\n      rawChange *= -1;\r\n    }\r\n    return `${rawChange.toString()}%`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom className={classes.titleText}>\r\n        Total Volume: {`${volumeTextNumber}`}\r\n      </Typography>\r\n\r\n      <Typography variant=\"h5\" gutterBottom className={classes.volText}>\r\n        Annual change\r\n        <KeyboardArrowDownIcon\r\n          className={classes.changeIcon}\r\n          fontSize=\"small\"\r\n        />\r\n        {volumeChangeText}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VolumeChange;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport countData from \"../Data/toLevelProductCounts.json\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n    maxHeight: 400,\r\n    padding: \"4px 8px\",\r\n    // border: \"1px solid black\",\r\n    borderTop: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n    boxShadow: \"2px 2px 2px 2px rgba(0, 0, 0, 0.2)\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTableMD = () => {\r\n  const classes = useStyles();\r\n\r\n  console.log(countData);\r\n\r\n  return (\r\n    <>\r\n      <h3>Product Count by Class</h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Mail Class</TableCell>\r\n              <TableCell align=\"right\">Total Products</TableCell>\r\n              <TableCell align=\"right\">Negative Change</TableCell>\r\n              <TableCell align=\"right\">Positive Change</TableCell>\r\n              <TableCell align=\"right\">Missing Data</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {countData.map((row, ind) => (\r\n              <TableRow key={`row${ind}`}>\r\n                <TableCell component=\"th\" scope=\"row\" key={`row${ind}1`}>\r\n                  {row.mailClass}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}2`}>\r\n                  {row.totalProducts}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}3`}>\r\n                  {row.negativeChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}4`}>\r\n                  {row.positiveChange}\r\n                </TableCell>\r\n                <TableCell align=\"right\" key={`row${ind}5`}>\r\n                  {row.missing}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTableMD;\r\n","import { CSVLink } from \"react-csv\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    padding: \"-2rem\",\r\n    // width: \"350%\",\r\n    width: \"15rem\",\r\n    color: \"black\",\r\n    font: \"roboto\",\r\n  },\r\n  icon: {\r\n    transform: \"scale(1.5)\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  dataName: {\r\n    fontSize: \"11px\",\r\n    marginTop: \"-.8rem\",\r\n  },\r\n}));\r\n\r\nexport const DownloadButton = (props) => {\r\n  const { propData, dataName } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CSVLink data={propData}>\r\n      <Button className={classes.button} variant=\"contained\">\r\n        <div>\r\n          <Grid container direction=\"row\">\r\n            <Grid item xs={2}>\r\n              <TocIcon className={classes.icon} />\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <p> Download CSV</p>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n\r\n            <Grid item xs={10}>\r\n              <p className={classes.dataName}>{dataName}</p>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Button>\r\n    </CSVLink>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PieGraph from \"../DashComponents/PieGraph\";\r\nimport topLevelPieData from \"../Data/topLevelPieData.json\";\r\nimport MDCompositeContainer from \"./allMarketDominantComponents/MDCompositeContainer\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport volumeData from \"../Data/volume.json\";\r\nimport ProductCountTableMD from \"../DashComponents/ProductCountTableMD\";\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\nimport annualDataFull from \"../Data/annualData.json\";\r\n\r\nimport { lightGrey } from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTopRow: {\r\n    paddingBottom: \"10%\",\r\n    minHeight: 450,\r\n    paddingTop: \"2%\",\r\n  },\r\n}));\r\n\r\nexport const AllMarketDominant = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const missesData = topLevelPieData.filter(\r\n    (row) => row.dataSet === \"missedTarget\"\r\n  );\r\n\r\n  const totalMDVol = volumeData.filter((row) => row.mailClass === \"MD\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid item xs={12} style={{ marginBottom: \"2%\", marginTop: \"1%\" }}>\r\n        <div className={classes.root}>\r\n          <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n            All Market Dominant Products\r\n          </Typography>\r\n        </div>\r\n      </Grid>\r\n      <Grid container spacing={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={5}>\r\n            <Paper className={classes.paperTopRow}>\r\n              <PieGraph propData={missesData} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Paper style={{ marginTop: \"-5%\" }} className={classes.paperTopRow}>\r\n              <MDCompositeContainer />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <div id=\"gridSpacing\"></div>\r\n        </Grid>\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={2}>\r\n          <Grid item xs={8}>\r\n            <Paper className={classes.paper}>\r\n              <div id=\"topEvents\">\r\n                <ProductCountTableMD />\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Paper\r\n              className={classes.paper}\r\n              style={{\r\n                backgroundColor: lightGrey,\r\n                paddingTop: \"-10%\",\r\n                marginTop: \"-60%\",\r\n              }}\r\n            >\r\n              <div id=\"topAnnualVolume\" style={{}}>\r\n                <VolumeChange propData={totalMDVol} />\r\n              </div>\r\n            </Paper>\r\n            <div style={{ marginTop: \"10%\" }}> </div>\r\n            {/* <Paper> */}\r\n            <DownloadButton\r\n              propData={annualDataFull}\r\n              dataName={\"Market Dominant Data\"}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMarketDominant;\r\n","import * as d3 from \"d3\";\r\n\r\nconst classGraphDims = {\r\n  graphHeight: 300,\r\n  graphWidth: 900,\r\n  barWidth: 20,\r\n  marginLeft: 40,\r\n  marginRight: 20,\r\n  marginBottom: 30,\r\n  marginTop: 20,\r\n  barMarginLeft: 40 + 20,\r\n};\r\n\r\nexport const {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  marginRight,\r\n  barMarginLeft,\r\n  marginTop,\r\n} = classGraphDims;\r\n\r\nexport const yScale = d3.scaleLinear().domain([0, 100]).range([0, 250]);\r\nexport const yScaleRev = d3.scaleLinear().domain([0, 100]).range([250, 0]);\r\n\r\nexport default yScale;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ClassLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = 100;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetAnnual(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetAnnual(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[0]);\r\n  const yearVal = parseInt(idList[1]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n      pointsFromTarget = hoveredRow.pointsFromTarget;\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\n// function calcPointsFromTargetQuarterly(hoverId, propData) {\r\n//   const idList = hoverId.split(\"_\");\r\n//   const productId = parseInt(idList[0]);\r\n//   const yearVal = parseInt(idList[1]);\r\n//   const quarterVal = parseInt(idList[2]);\r\n\r\n//   let pointsFromTarget;\r\n\r\n//   if (propData) {\r\n//     let hoveredRow = propData\r\n//       .filter((row) => row.fy === yearVal)\r\n//       .filter((row) => row.productId === productId)\r\n//       .filter((row) => row.quarter === quarterVal);\r\n\r\n//     if (hoveredRow.length > 0) {\r\n//       hoveredRow = hoveredRow[0];\r\n//       pointsFromTarget = hoveredRow.pctOnTime - hoveredRow.target;\r\n//       pointsFromTarget = pointsFromTarget.toFixed(2);\r\n//     }\r\n//   }\r\n//   console.log(propData);\r\n\r\n//   return pointsFromTarget;\r\n// }\r\n\r\nexport default TooltipService_ClassLevel;\r\n","import * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n  lightGrey,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  graphWidth,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipService_ClassLevel } from \"./TooltipService_ClassLevel\";\r\n\r\nexport const ClassLevelGraph = (props) => {\r\n  const { propData, mailClass } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    barFunctions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    barFunctions();\r\n  }, [data, propData]);\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = 850;\r\n\r\n  const svg = d3.select(\"#mmClassSvg\");\r\n\r\n  function barFunctions() {\r\n    removeBars();\r\n    if (data.length > 1) {\r\n      removeBars();\r\n      drawBars();\r\n    }\r\n  }\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const dataProducts = data.filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    const data2020 = dataProducts.filter((row) => row.fy === 2020);\r\n    const data2019 = dataProducts.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".productNameText\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + 75)\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d.productAbbrev)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"graphicElement nameBox nonBar\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \"graphicElement axisTicks nonBar\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 1);\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n\r\n    svg\r\n      .selectAll(\".bar2019\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElement bar2019\")\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".bar2020\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElement bar2020\")\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}`)\r\n      .on(\"mouseover\", function () {\r\n        const currentBarSelection = d3.select(this);\r\n\r\n        mouseOverTriggers(currentBarSelection);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        const currentBarSelection = d3.select(this);\r\n        mouseOutTriggers(currentBarSelection);\r\n      });\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", \"graphicElement targetLines nonBar\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"graphicElement\");\r\n  }\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\").attr(\"stroke-width\", \"2px\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  function removeBars() {\r\n    d3.selectAll(\".graphicElement\").remove();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3 fontFamily={textNodeFont}>{mailClass} Products</h3>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id=\"mmClassSvg\"\r\n          height={300}\r\n          width={graphWidth}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"classLevel\"}\r\n          bar2019={\".bar2019\"}\r\n          bar2020={\".bar2020\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ClassLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipClassGraph\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClassLevelGraph;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  alternateHighlight,\r\n} from \"../Design/MyTheme\";\r\n\r\nconst useStyles = makeStyles({\r\n  totalCountCountainer: {\r\n    backgroundColor: primaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  missedCountCountainer: {\r\n    backgroundColor: secondaryColor,\r\n    borderRadius: \"1%\",\r\n  },\r\n  decCountContainer: {\r\n    backgroundColor: alternateHighlight,\r\n    borderRadius: \"1%\",\r\n  },\r\n  tableText: {\r\n    color: \"white\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n});\r\n\r\nexport const ProductCountTable = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function createCellData(propData) {\r\n    let singleYear = propData\r\n      .filter((row) => row.fy === 2020)\r\n      .filter((row) => row.productAbbrev !== \"missing\");\r\n\r\n    let productCount = singleYear.length;\r\n\r\n    let decreasedCount = 0;\r\n    let missedTarget = 0;\r\n\r\n    for (let i = 0; i < singleYear.length; i++) {\r\n      const currentRow = singleYear[i];\r\n      if (currentRow.pctOnTime - currentRow.target < 0) {\r\n        missedTarget += 1;\r\n      }\r\n      if (decreasedThisYear(currentRow.productId)) {\r\n        decreasedCount += 1;\r\n      }\r\n    }\r\n\r\n    const rez = {\r\n      productCount: productCount,\r\n      missedTarget: missedTarget,\r\n      decreasedCount: decreasedCount,\r\n    };\r\n\r\n    return rez;\r\n  }\r\n\r\n  function decreasedThisYear(productId) {\r\n    const thisProduct = propData.filter((row) => row.productId === productId);\r\n\r\n    const thisYearScore = thisProduct.filter((row) => row.fy === 2020)[0]\r\n      .pctOnTime;\r\n    const lastYearScore = thisProduct.filter((row) => row.fy === 2019)[0]\r\n      .pctOnTime;\r\n\r\n    return thisYearScore < lastYearScore;\r\n  }\r\n\r\n  const cellData = createCellData(propData);\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.totalCountCountainer}>\r\n        <Typography className={classes.tableText}>\r\n          Total Product Count:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.productCount}\r\n        </Typography>\r\n      </Container>\r\n      <Container className={classes.missedCountCountainer}>\r\n        <Typography className={classes.tableText}>\r\n          Products that Missed Target:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.missedTarget}\r\n        </Typography>\r\n      </Container>\r\n      <Container className={classes.decCountContainer}>\r\n        <Typography className={classes.tableText}>\r\n          Products that Decreased in FY2020:\r\n        </Typography>\r\n        <br></br>\r\n        <Typography className={classes.tableText}>\r\n          {cellData.decreasedCount}\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCountTable;\r\n","import { useRef } from \"react\";\r\n\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  selectDropdown: {\r\n    marginRight: \"5%\",\r\n\r\n    width: \"350px\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  dropdownLabel: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport const ProductDropdown = (props) => {\r\n  const { propData, selectedProductId, changeProductSelected } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  function nameFromId(selectedProductId) {\r\n    selectedProductId = parseInt(selectedProductId);\r\n\r\n    if (selectedProductId === 0) {\r\n      return \"none\";\r\n    } else {\r\n      return propData.filter((row) => row.productId === selectedProductId)[0]\r\n        .product;\r\n    }\r\n  }\r\n  const inputRef = useRef();\r\n\r\n  let productList = propData\r\n    .filter((row) => row.fy === 2020)\r\n    .filter((row) => !row.product.includes(\"Mixed\"));\r\n\r\n  productList.push({\r\n    class: \"Marketing Mail\",\r\n    fy: 2019,\r\n    product: \"none\",\r\n    productId: 0,\r\n  });\r\n\r\n  const menuItems = productList.map((el, ind) => (\r\n    <MenuItem\r\n      key={`dropdown${ind}`}\r\n      id={el.productId}\r\n      onClick={changeProductSelected}\r\n      value={el.product}\r\n      ref={inputRef}\r\n    >\r\n      {el.product}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <FormControl>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Typography className={classes.dropdownLabel}>\r\n              View Product-Level Data:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Select\r\n              value={nameFromId(selectedProductId)}\r\n              className={classes.selectDropdown}\r\n            >\r\n              {menuItems}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDropdown;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { pinkHighlight, greenGrey, tooltipStyles } from \"../Design/MyTheme\";\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nexport const TooltipService_ProductLevel = (props) => {\r\n  const { xHover, hoverId, isHovering, hoverHeight, propData, tooltipId } =\r\n    props;\r\n\r\n  const [tooltipText, setTooltipText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n    tooltipXPoz(xHover, tooltipId);\r\n    tooltipYPoz(hoverHeight, tooltipId);\r\n    setTooltipText(tooltipTextChange(hoverId, propData));\r\n  }, [isHovering]);\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering, tooltipId);\r\n  });\r\n\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  const pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  const tooltipColor = assignColor(pointsFromTarget);\r\n\r\n  function assignColor(pointsFromTarget) {\r\n    if (pointsFromTarget < 0) {\r\n      return greenGrey;\r\n    } else {\r\n      return pinkHighlight;\r\n    }\r\n  }\r\n\r\n  tooltipDiv\r\n    .style(\"width\", `${tooltipWidth}px`)\r\n    .style(\"height\", `${tooltipHeight}px`)\r\n    .style(\"background-color\", tooltipColor)\r\n    .on(\"mouseover\", () => {\r\n      tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n    });\r\n\r\n  return (\r\n    <div style={tooltipStyles} id={tooltipId}>\r\n      <span style={{ marginTop: textMarginTop, marginBottom: \"5px\" }}>\r\n        {tooltipText}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction removeOnMouseOut(isHovering, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n\r\n  let outputVal;\r\n  const xPush = 50;\r\n\r\n  outputVal = xHover + xPush;\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(hoverHeight, tooltipId) {\r\n  const tooltipDiv = d3.select(`#${tooltipId}`);\r\n  let outputVal;\r\n  const midpoint = hoverHeight / 1.5;\r\n\r\n  outputVal = midpoint;\r\n\r\n  outputVal *= -1;\r\n  outputVal -= 100;\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(hoverId, propData) {\r\n  let pointsFromTarget;\r\n\r\n  pointsFromTarget = calcPointsFromTargetQuarterly(hoverId, propData);\r\n\r\n  return `Points from Target: ${pointsFromTarget}`;\r\n}\r\n\r\nfunction calcPointsFromTargetQuarterly(hoverId, propData) {\r\n  const idList = hoverId.split(\"_\");\r\n  const productId = parseInt(idList[0]);\r\n  const yearVal = parseInt(idList[1]);\r\n  const quarterVal = parseInt(idList[2]);\r\n\r\n  let pointsFromTarget;\r\n\r\n  if (propData) {\r\n    let hoveredRow = propData\r\n      .filter((row) => row.fy === yearVal)\r\n      .filter((row) => row.productId === productId)\r\n      .filter((row) => row.quarter === quarterVal);\r\n\r\n    if (hoveredRow.length > 0) {\r\n      hoveredRow = hoveredRow[0];\r\n      pointsFromTarget = hoveredRow.target - hoveredRow.pctOnTime;\r\n      pointsFromTarget = pointsFromTarget.toFixed(2);\r\n    }\r\n  }\r\n\r\n  return pointsFromTarget;\r\n}\r\n\r\nexport default TooltipService_ProductLevel;\r\n","import * as d3 from \"d3\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport GraphKey from \"./GraphKey\";\r\nimport {\r\n  primaryColor,\r\n  secondaryColor,\r\n  highlightColor,\r\n  textNodeFont,\r\n} from \"../Design/MyTheme\";\r\n\r\nimport {\r\n  marginBottom,\r\n  graphHeight,\r\n  barWidth,\r\n  marginLeft,\r\n  barMarginLeft,\r\n  marginTop,\r\n  yScale,\r\n  yScaleRev,\r\n} from \"../Design/graphDimensions\";\r\n\r\nimport { TooltipService_ProductLevel } from \"./TooltipService_ProductLevel\";\r\n\r\nexport const ProductGraph = (props) => {\r\n  const { propData } = props;\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [hoverHeight, setHoverHeight] = useState(0);\r\n\r\n  useEffect(allGraphFunctions, [data, propData]);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n    drawBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n  });\r\n\r\n  function allGraphFunctions() {\r\n    d3.selectAll(\".nonBarQuarter\").remove();\r\n\r\n    drawNonBarItems();\r\n\r\n    setData(propData);\r\n    drawBars();\r\n\r\n    transitionBars();\r\n    raiseBars();\r\n    raiseTargets();\r\n  }\r\n\r\n  function raiseBars() {\r\n    d3.selectAll(\".bar2019Quarter\").raise();\r\n    d3.selectAll(\".bar2020Quarter\").raise();\r\n  }\r\n\r\n  function raiseTargets() {\r\n    d3.selectAll(\".targetLines\").raise();\r\n  }\r\n\r\n  const topStart = graphHeight - marginBottom;\r\n\r\n  const svgWidth = 850;\r\n\r\n  const svg = d3.select(\"#productSvg\");\r\n\r\n  function getInterBarMargin(graphData) {\r\n    const barCount = graphData.length;\r\n    const interBarDist = svgWidth / barCount;\r\n\r\n    return interBarDist;\r\n  }\r\n\r\n  function drawBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", primaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2019Quarter\")\r\n      .attr(\"id\", (d) => {\r\n        const target = d.target;\r\n        const score = d.pctOnTime;\r\n\r\n        let ptsFromTarget = target - score;\r\n\r\n        ptsFromTarget = ptsFromTarget.toFixed(1);\r\n\r\n        return `${ptsFromTarget} points from target`;\r\n      })\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime));\r\n\r\n    svg\r\n      .selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + barWidth + barMarginLeft)\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"width\", barWidth)\r\n      .attr(\"fill\", secondaryColor)\r\n      .attr(\"class\", \"graphicElementQuarter bar2020Quarter\")\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => {\r\n        const target = d.target;\r\n        const score = d.pctOnTime;\r\n\r\n        let ptsFromTarget = target - score;\r\n        ptsFromTarget = ptsFromTarget.toFixed(1);\r\n\r\n        return `${ptsFromTarget} points from target`;\r\n      });\r\n  }\r\n\r\n  function transitionBars() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n    const data2019 = propData.filter((row) => row.fy === 2019);\r\n\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    d3.selectAll(\".bar2020Quarter\")\r\n      .data(data2020)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    d3.selectAll(\".bar2019Quarter\")\r\n      .data(data2019)\r\n      .transition()\r\n      .duration(500)\r\n      .attr(\"height\", (d) => yScale(d.pctOnTime))\r\n      .attr(\"y\", (d) => topStart - yScale(d.pctOnTime))\r\n      .attr(\"id\", (d) => `${d.productId}_${d.fy}_${d.quarter}`);\r\n\r\n    svg\r\n      .selectAll(\".targetLines\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"x1\", (d, i) => i * interBarMargin + marginLeft)\r\n      .attr(\"y1\", (d) => topStart - yScale(d.target))\r\n      .attr(\"x2\", (d, i) => i * interBarMargin + barWidth * 2 + barMarginLeft)\r\n      .attr(\"y2\", (d) => topStart - yScale(d.target))\r\n      .style(\"stroke\", highlightColor)\r\n      .style(\"stroke-width\", 2)\r\n      .attr(\"class\", \"nonBarQuarter  graphicElementQuarter targetLines\");\r\n  }\r\n\r\n  function drawNonBarItems() {\r\n    const data2020 = propData.filter((row) => row.fy === 2020);\r\n\r\n    const quarters = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\r\n    const interBarMargin = getInterBarMargin(data2020);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"On-Time (%)\")\r\n      .attr(\"x\", 190)\r\n      .attr(\"y\", 20)\r\n      .style(\"text-anchor\", \"middle\")\r\n      .attr(\"transform\", \"translate(-5,315) rotate(270)\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter\");\r\n\r\n    svg\r\n      .selectAll(\".quarterText\")\r\n      .data(quarters)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", (d, i) => i * interBarMargin + 75)\r\n      .attr(\"y\", topStart + 15)\r\n      .text((d) => d)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"nonBarQuarter graphicElementQuarter nameBox\")\r\n      .attr(\"font-family\", textNodeFont)\r\n      .attr(\"id\", (d, i) => `${i}`);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScaleRev).tickSize(-svgWidth).ticks(5))\r\n      .attr(\"transform\", `translate(${marginLeft},${marginTop})`)\r\n      .attr(\"class\", \" nonBarQuarter graphicElementQuarter axisTicks\");\r\n\r\n    d3.select(\".domain\").remove();\r\n    d3.selectAll(\".axisTicks\").selectAll(\"text\").style(\"opacity\", 0.5);\r\n\r\n    d3.selectAll(\"line\").style(\"opacity\", 0.3);\r\n    d3.selectAll(\".targetLines\").style(\"opacity\", 1);\r\n  }\r\n\r\n  const theseBars = d3.selectAll(\".bar2020Quarter, .bar2019Quarter\");\r\n\r\n  theseBars.on(\"mouseover\", function () {\r\n    console.log(\"hovering \");\r\n    const currentBarSelection = d3.select(this);\r\n\r\n    mouseOverTriggers(currentBarSelection);\r\n  });\r\n\r\n  theseBars.on(\"mouseout\", function () {\r\n    const currentBarSelection = d3.select(this);\r\n    mouseOutTriggers(currentBarSelection);\r\n  });\r\n\r\n  function mouseOverTriggers(currentBarSelection) {\r\n    const currentBarId = currentBarSelection._groups[0][0].id;\r\n    const currentBarX = currentBarSelection._groups[0][0].x.baseVal.value;\r\n    const currentBarHeight =\r\n      currentBarSelection._groups[0][0].height.baseVal.value;\r\n\r\n    setXHover(currentBarX);\r\n    setHoverId(currentBarId);\r\n    setIsHovering(true);\r\n    setHoverHeight(currentBarHeight);\r\n\r\n    currentBarSelection.attr(\"stroke\", \"black\").attr(\"stroke-width\", \"2px\");\r\n  }\r\n\r\n  function mouseOutTriggers(currentBarSelection) {\r\n    setIsHovering(false);\r\n\r\n    d3.selectAll(\"rect\").attr(\"stroke\", \"none\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h3 fontFamily={textNodeFont}>Product-Level Quarterly Data</h3>\r\n        <h4>{propData[0].product}</h4>\r\n        <svg\r\n          shapeRendering=\"crispEdges\"\r\n          id=\"productSvg\"\r\n          height={300}\r\n          width={850}\r\n        ></svg>\r\n        <GraphKey\r\n          level={\"productLevel\"}\r\n          bar2019={\".bar2019Quarter\"}\r\n          bar2020={\".bar2020Quarter\"}\r\n        />\r\n      </div>\r\n      <TooltipService_ProductLevel\r\n        xHover={xHover}\r\n        hoverId={hoverId}\r\n        isHovering={isHovering}\r\n        hoverHeight={hoverHeight}\r\n        propData={propData}\r\n        tooltipId={\"tooltipProductGraph\"}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductGraph;\r\n","const outsideObjMargin = { top: 10, right: 20, bottom: 10, left: 40 };\r\n\r\nconst lineDims = {\r\n  margin: outsideObjMargin,\r\n  svgHeightFull: 200,\r\n  svgHeight: 200 - outsideObjMargin.top - outsideObjMargin.bottom,\r\n  svgWidth: 420 - outsideObjMargin.right - outsideObjMargin.left,\r\n  interDotX: 95,\r\n};\r\n\r\nexport const { margin, svgHeight, svgHeightFull, svgWidth, interDotX } =\r\n  lineDims;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport { useEffect } from \"react\";\r\nimport { darkGrey } from \"../Design/MyTheme\";\r\n\r\nexport const TooltipVolume = (props) => {\r\n  const { xHover, yHover, hoverId, svgHeightFull, isHovering, propData } =\r\n    props;\r\n\r\n  useEffect(() => {\r\n    removeOnMouseOut(isHovering);\r\n    tooltipXPoz(xHover, hoverId);\r\n    tooltipYPoz(yHover, hoverId, svgHeightFull);\r\n  }, [isHovering]);\r\n\r\n  const tooltipText = tooltipTextChange(hoverId, propData);\r\n\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  tooltipDiv.on(\"mouseover\", () => {\r\n    tooltipDiv.style(\"opacity\", 0).style(\"top\", 1500);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        textAlign: \"center\",\r\n        width: tooltipWidth,\r\n        height: tooltipHeight,\r\n        font: \"12px sans-serif\",\r\n        background: \"lightsteelblue\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        paddingTop: \"10px\",\r\n        borderRadius: \"5px\",\r\n        backgroundColor: darkGrey,\r\n        fontWeight: \"bold\",\r\n        fontSize: \"13px\",\r\n      }}\r\n      id=\"TooltipVolume\"\r\n    >\r\n      <span style={{ marginTop: textMarginTop }}> {tooltipText}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tooltipWidth = 130;\r\nconst tooltipHeight = 30;\r\nconst textMarginTop = 10;\r\n\r\nfunction removeOnMouseOut(isHovering) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  if (!isHovering) {\r\n    tooltipDiv\r\n      .transition()\r\n      .duration(400)\r\n      .style(\"opacity\", 0)\r\n      .style(\"top\", 1500);\r\n  } else {\r\n    tooltipDiv.transition().duration(400).style(\"opacity\", 0.95);\r\n  }\r\n}\r\n\r\nfunction tooltipXPoz(xHover, hoverId) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal = xHover - tooltipWidth;\r\n  } else {\r\n    outputVal = xHover;\r\n  }\r\n\r\n  tooltipDiv.style(\"left\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipYPoz(yHover, hoverId, svgHeightFull) {\r\n  const tooltipDiv = d3.select(\"#TooltipVolume\");\r\n\r\n  let currentDotQuarter = 0;\r\n\r\n  if (hoverId) {\r\n    currentDotQuarter = parseInt(hoverId.match(/\\d/)[0]);\r\n  }\r\n\r\n  let outputVal;\r\n  outputVal = yHover;\r\n\r\n  outputVal = svgHeightFull - outputVal;\r\n\r\n  outputVal *= -1;\r\n\r\n  if (currentDotQuarter > 2) {\r\n    outputVal -= tooltipHeight;\r\n    outputVal -= textMarginTop;\r\n  }\r\n\r\n  tooltipDiv.style(\"top\", `${outputVal}px`);\r\n}\r\n\r\nfunction tooltipTextChange(currentDotId, dataIn) {\r\n  let currentDotQuarter = 0;\r\n\r\n  if (!currentDotId) {\r\n    return \"none\";\r\n  }\r\n\r\n  if (currentDotId) {\r\n    currentDotQuarter = parseInt(currentDotId.match(/\\d/)[0]);\r\n  }\r\n\r\n  const dataSorted = dataIn.sort((a, b) => a.quarter - b.quarter);\r\n\r\n  const currentRow = dataSorted[currentDotQuarter - 1];\r\n\r\n  const thisVol = currentRow.volume;\r\n\r\n  const volText = formatVolumeNumber(thisVol);\r\n\r\n  return `Q${currentDotQuarter} volume: ${volText}`;\r\n}\r\n\r\nfunction formatVolumeNumber(rawNumber) {\r\n  let trailingLetter = \"B\";\r\n  let divisor = 1000000000;\r\n\r\n  if (rawNumber / divisor < 1) {\r\n    trailingLetter = \"M\";\r\n    divisor = divisor / 1000;\r\n  }\r\n\r\n  const outputNumber = rawNumber / divisor;\r\n\r\n  let stringNum;\r\n  if (trailingLetter === \"M\") {\r\n    stringNum = outputNumber.toFixed(0);\r\n  }\r\n\r\n  if (trailingLetter === \"B\") {\r\n    stringNum = outputNumber.toFixed(2);\r\n  }\r\n\r\n  return `${stringNum}${trailingLetter}`;\r\n}\r\n\r\nexport default TooltipVolume;\r\n","import * as d3 from \"d3\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  margin,\r\n  svgHeight,\r\n  svgHeightFull,\r\n  svgWidth,\r\n  interDotX,\r\n} from \"../Design/graphDimensionsLine\";\r\n\r\nimport { secondaryColor, lineGraphTitleBlock } from \"../Design/MyTheme\";\r\n\r\nimport { TooltipVolume } from \"./TooltipVolume\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerText: {\r\n    color: \"white\",\r\n    marginTop: \"-1%\",\r\n  },\r\n});\r\n\r\nexport const QuarterlyVolume = (props) => {\r\n  const { propData } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [data, setData] = useState(propData);\r\n\r\n  const [xHover, setXHover] = useState(0);\r\n  const [yHover, setYHover] = useState(0);\r\n  const [hoverId, setHoverId] = useState(\"\");\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    drawLine();\r\n    drawDots(data2020);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData(propData);\r\n\r\n    transitionLine();\r\n    transitionDots();\r\n  }, [data, propData]);\r\n\r\n  const currentProductName = data[0].product;\r\n\r\n  const data2020 = propData.filter((row) => row.fy === 2020);\r\n  const volumes2020 = data2020.map((row) => row.volume);\r\n\r\n  const tooltipWidth = 130;\r\n  const tooltipHeight = 50;\r\n\r\n  var yScale = d3\r\n    .scaleLinear()\r\n    .domain([d3.min(volumes2020), d3.max(volumes2020)])\r\n    .range([svgHeight, 15]);\r\n\r\n  function createLine(dataSet) {\r\n    const aLine = d3\r\n      .line()\r\n      .x(function (d, i) {\r\n        return i * interDotX + margin.left;\r\n      })\r\n      .y(function (d, i) {\r\n        return yScale(d.volume);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    return aLine;\r\n  }\r\n\r\n  function transitionLine() {\r\n    const newLine = createLine(data2020);\r\n\r\n    d3.select(\"#volumeLine\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", newLine);\r\n  }\r\n\r\n  function drawLine() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    const line = createLine(data2020);\r\n\r\n    svg\r\n      .append(\"path\")\r\n      .datum(data2020)\r\n      .attr(\"class\", \"volumeLine\")\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"d\", line)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke-width\", \"3px\")\r\n      .style(\"stroke\", \"blue\")\r\n      .attr(\"id\", \"volumeLine\");\r\n  }\r\n\r\n  function transitionDots() {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .on(\"mouseover\", function () {\r\n        let currentDotX = d3.select(this)._groups[0][0].cx;\r\n        let currentDotY = d3.select(this)._groups[0][0].cy;\r\n        let currentDotId = d3.select(this)._groups[0][0].id;\r\n\r\n        currentDotX = currentDotX.baseVal.value;\r\n        currentDotY = currentDotY.baseVal.value;\r\n\r\n        setXHover(currentDotX);\r\n        setYHover(currentDotY);\r\n        setHoverId(currentDotId);\r\n        setIsHovering(true);\r\n      })\r\n      .on(\"mouseout\", () => {\r\n        setIsHovering(false);\r\n      })\r\n      .transition()\r\n      .duration(600)\r\n      .attr(\"cy\", (d) => yScale(d.volume));\r\n  }\r\n\r\n  function drawDots(data2020) {\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n\r\n    svg\r\n      .selectAll(\".dot\")\r\n      .data(data2020)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (d, i) => i * interDotX + margin.left)\r\n      .attr(\"cy\", (d) => yScale(d.volume))\r\n      .attr(\"r\", 5)\r\n      .attr(\"id\", (d, i) => `volumeDot_${i + 1}`)\r\n      .attr(\"fill\", \"black\")\r\n      .attr(\"class\", \"dot\");\r\n  }\r\n\r\n  function drawTooltip(currentDotX, currentDotY) {\r\n    d3.select(\"#lineTooltip\").remove();\r\n\r\n    const svg = d3.select(\"#qtrVolsvg\");\r\n    svg\r\n      .append(\"rect\")\r\n      .attr(\"width\", tooltipWidth)\r\n      .attr(\"height\", tooltipHeight)\r\n      .attr(\"id\", \"lineTooltip\")\r\n      .attr(\"fill\", \"#888a8c\")\r\n      .attr(\"rx\", 3)\r\n      .style(\"opacity\", 0);\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"testing text\")\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"id\", \"tooltipText\")\r\n      .style(\"font-size\", \"14px\")\r\n      .style(\"opacity\", 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: secondaryColor,\r\n          paddingTop: \"1%\",\r\n          width: svgWidth,\r\n        }}\r\n      >\r\n        <div style={{ marginTop: \"1%\" }}>\r\n          <p\r\n            className={classes.headerText}\r\n            style={{ fontSize: \"20px\", fontWeight: \"bold\" }}\r\n          >\r\n            FY 2020 Quarterly Volume\r\n          </p>\r\n          <p className={classes.headerText}> {currentProductName}</p>\r\n        </div>\r\n\r\n        <div style={{ backgroundColor: lineGraphTitleBlock }}>\r\n          <svg height={svgHeightFull} width={svgWidth} id=\"qtrVolsvg\"></svg>\r\n        </div>\r\n      </div>\r\n      <TooltipVolume\r\n        xHover={xHover}\r\n        yHover={yHover}\r\n        hoverId={hoverId}\r\n        svgHeightFull={svgHeightFull}\r\n        isHovering={isHovering}\r\n        propData={data2020}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuarterlyVolume;\r\n","import data from \"../Data/quarterlyData.json\";\r\n\r\nimport ProductGraph from \"../DashComponents/ProductGraph\";\r\nimport QuarterlyVolume from \"../DashComponents/QuarterlyVolume\";\r\nimport { Grid, Paper, Divider } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nexport const ProductPage = (props) => {\r\n  const { selectedProductId } = props;\r\n\r\n  let productId = parseInt(selectedProductId);\r\n\r\n  const productData = data.filter((row) => row.productId === productId);\r\n\r\n  let renderedSection;\r\n\r\n  if (productId && productId !== 0) {\r\n    renderedSection = (\r\n      <ProductPageFull productId={productId} productData={productData} />\r\n    );\r\n  } else {\r\n    renderedSection = <EmptyProductPage />;\r\n  }\r\n\r\n  return <div>{renderedSection}</div>;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  fullProductContainer: {\r\n    marginTop: \"3%\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  quarterlyContainer: {\r\n    minWidth: 315,\r\n  },\r\n  productGraphContainer: {\r\n    minwidth: 700,\r\n  },\r\n}));\r\n\r\nconst ProductPageFull = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { productId, productData } = props;\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginTop: \"2%\", marginBottom: \"20%\" }}>\r\n        <Divider />\r\n        <div style={{ marginTop: \"2%\", marginLeft: \"2%\" }}>\r\n          <Grid container spacing={0}>\r\n            <Grid item lg={7} md={12}>\r\n              <div style={{ width: 875 }}>\r\n                <Paper className={classes.productGraphContainer}>\r\n                  <ProductGraph propData={productData} />\r\n                </Paper>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={3}>\r\n              <QuarterlyVolume propData={productData} />\r\n              <div style={{ marginTop: \"10%\" }}></div>\r\n              <DownloadButton\r\n                propData={productData}\r\n                dataName={\"Quarterly Data\"}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EmptyProductPage = () => {\r\n  return <></>;\r\n};\r\n\r\nexport default ProductPage;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\nimport { graphWidth } from \"../Design/graphDimensions\";\r\n\r\nexport const FirstClass = () => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const fcAnnualData = annualData.filter(\r\n    (row) => row.class === \"First Class Mail\"\r\n  );\r\n\r\n  console.log(fcAnnualData);\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n              First Class Data\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={9} xs={12}>\r\n          <Paper className={classes.graphDiv} elevation={3} width={graphWidth}>\r\n            <ClassLevelGraph\r\n              propData={fcAnnualData}\r\n              mailClass={\"First Class\"}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* <Grid item xs={3}>\r\n      <Grid container direction=\"column\" spacing={3}>\r\n        <Grid item lg={7} md={12}>\r\n          <Paper className={classes.paper}>\r\n            <div>\r\n              {\" \"}\r\n              <ProductCountTableData propData={mmAnnualData} />{\" \"}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper\r\n            className={classes.paper}\r\n            style={{ backgroundColor: lightGrey }}\r\n          >\r\n            <VolumeChange propData={volDataMM} />\r\n          </Paper>\r\n          <div style={{ marginTop: \"30%\" }}></div>\r\n          <Paper>\r\n            <DownloadButton\r\n              propData={mmAnnualData}\r\n              dataName={\"Class-Level Data\"}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n\r\n        <Paper className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={mmAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n          />\r\n        </Paper> */}\r\n      </Grid>\r\n\r\n      {/* <ProductPage selectedProductId={selectedProductId} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FirstClass;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport volData from \"../Data/volume.json\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport annualData from \"../Data/annualData.json\";\r\n\r\nimport ClassLevelGraph from \"../DashComponents/ClassLevelGraph\";\r\nimport ProductCountTableData from \"../DashComponents/ProductCountTable\";\r\nimport VolumeChange from \"../DashComponents/VolumeChange\";\r\nimport ProductDropdown from \"../DashComponents/ProductDropdown\";\r\nimport ProductPage from \"./ProductPage\";\r\n\r\nimport DownloadButton from \"../DashComponents/DownloadButton\";\r\n\r\nimport { lightGrey, useStyles_ClassPage } from \"../Design/MyTheme\";\r\n\r\nexport const MarketingMail = (props) => {\r\n  const classes = useStyles_ClassPage();\r\n\r\n  const [selectedProductId, setSelectedProductId] = useState(0);\r\n\r\n  function changeProductSelected(e) {\r\n    setSelectedProductId(e.target.id);\r\n  }\r\n\r\n  const mmAnnualData = annualData.filter(\r\n    (row) => row.class === \"Marketing Mail\"\r\n  );\r\n\r\n  let volDataMM = volData.filter((row) => row.mailClass === \"MM\");\r\n\r\n  return (\r\n    <div className={classes.root} id=\"allMdContainer\">\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\" gutterBottom>\r\n              Marketing Mail Class-Level Data\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n        <Grid item lg={9} xs={12}>\r\n          <Paper className={classes.graphDiv} elevation={3}>\r\n            <ClassLevelGraph\r\n              propData={mmAnnualData}\r\n              mailClass={\"Marketing Mail\"}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={3}>\r\n          <Grid container direction=\"column\" spacing={3}>\r\n            <Grid item lg={7} md={12}>\r\n              <Paper className={classes.paper}>\r\n                <div>\r\n                  {\" \"}\r\n                  <ProductCountTableData propData={mmAnnualData} />{\" \"}\r\n                </div>\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Paper\r\n                className={classes.paper}\r\n                style={{ backgroundColor: lightGrey }}\r\n              >\r\n                <VolumeChange propData={volDataMM} />\r\n              </Paper>\r\n              <div style={{ marginTop: \"30%\" }}></div>\r\n              <Paper>\r\n                <DownloadButton\r\n                  propData={mmAnnualData}\r\n                  dataName={\"Class-Level Data\"}\r\n                />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperDropdown}>\r\n          <ProductDropdown\r\n            propData={mmAnnualData}\r\n            selectedProductId={selectedProductId}\r\n            changeProductSelected={changeProductSelected}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <ProductPage selectedProductId={selectedProductId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketingMail;\r\n","export const SpecialServices = () => {\r\n  return <div> im SpecialServices</div>;\r\n};\r\n\r\nexport default SpecialServices;\r\n","export const PackageServices = (props) => {\r\n  return <div> Package Services </div>;\r\n};\r\n\r\nexport default PackageServices;\r\n","export const Periodicals = () => {\r\n  return <div> im Periodicals</div>;\r\n};\r\n\r\nexport default Periodicals;\r\n","import {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItemText,\r\n  ListItem,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Drawer = (props) => {\r\n  const { history } = props;\r\n\r\n  const mailClassNames = [\r\n    {\r\n      text: \"First Class\",\r\n      onClick: () => history.push(\"/first-class\"),\r\n    },\r\n    {\r\n      text: \"Marketing Mail\",\r\n      onClick: () => history.push(\"/marketing-mail\"),\r\n    },\r\n    {\r\n      text: \"Periodicals\",\r\n      onClick: () => history.push(\"/periodicals\"),\r\n    },\r\n    {\r\n      text: \"Package Services\",\r\n      onClick: () => history.push(\"/package-services\"),\r\n    },\r\n    {\r\n      text: \"Special Services\",\r\n      onClick: () => history.push(\"/special-services\"),\r\n    },\r\n  ];\r\n\r\n  const homeName = [\r\n    {\r\n      text: \"All Market Dominant\",\r\n      onClick: () => history.push(\"/all-md\"),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <MUIDrawer variant=\"permanent\">\r\n      <List>\r\n        {homeName.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      <Divider />\r\n      <List>\r\n        {mailClassNames.map((item, index) => {\r\n          const { text, onClick } = item;\r\n\r\n          return (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </MUIDrawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Drawer);\r\n","import \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport myTheme from \"./Design/MyTheme\";\n\nimport { AllMarketDominant } from \"./mailClassComponents/AllMarketDominant\";\nimport { FirstClass } from \"./mailClassComponents/FirstClass\";\nimport { MarketingMail } from \"./mailClassComponents/MarketingMailClass\";\nimport { SpecialServices } from \"./mailClassComponents/SpecialServices\";\nimport { PackageServices } from \"./mailClassComponents/PackageServices\";\nimport { Periodicals } from \"./mailClassComponents/Periodicals\";\nimport { ProductPage } from \"./mailClassComponents/ProductPage\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Drawer from \"./Drawer\";\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <Drawer />\n        <ThemeProvider theme={myTheme}>\n          <div className=\"App\">\n            <Switch>\n              <Route\n                exact\n                from=\"/all-md\"\n                render={(props) => <AllMarketDominant {...props} />}\n              />\n\n              <Route\n                exact\n                path=\"/first-class\"\n                render={(props) => <FirstClass {...props} />}\n              />\n              <Route\n                exact\n                path=\"/marketing-mail\"\n                render={(props) => <MarketingMail {...props} />}\n              />\n              <Route\n                exact\n                path=\"/periodicals\"\n                render={(props) => <Periodicals {...props} />}\n              />\n              <Route\n                exact\n                path=\"/package-services\"\n                render={(props) => <SpecialServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/special-services\"\n                render={(props) => <PackageServices {...props} />}\n              />\n              <Route\n                exact\n                path=\"/product\"\n                render={(props) => <ProductPage {...props} />}\n              />\n            </Switch>\n          </div>\n        </ThemeProvider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}